Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO FUNCIONES
Rule 2     INICIO -> INICIO INSTRUCCIONES
Rule 3     INICIO -> FUNCIONES
Rule 4     INICIO -> INSTRUCCIONES
Rule 5     INSTRUCCIONES -> INSTRUCCIONES IFS
Rule 6     INSTRUCCIONES -> INSTRUCCIONES FORS
Rule 7     INSTRUCCIONES -> INSTRUCCIONES WHILES
Rule 8     INSTRUCCIONES -> INSTRUCCIONES ASIGNACION
Rule 9     INSTRUCCIONES -> INSTRUCCIONES I
Rule 10    INSTRUCCIONES -> INSTRUCCIONES LLAMADAS
Rule 11    INSTRUCCIONES -> INSTRUCCIONES NATIVAS
Rule 12    INSTRUCCIONES -> INSTRUCCIONES STRUCTS
Rule 13    INSTRUCCIONES -> IFS
Rule 14    INSTRUCCIONES -> FORS
Rule 15    INSTRUCCIONES -> WHILES
Rule 16    INSTRUCCIONES -> ASIGNACION
Rule 17    INSTRUCCIONES -> I
Rule 18    INSTRUCCIONES -> LLAMADAS
Rule 19    INSTRUCCIONES -> NATIVAS
Rule 20    INSTRUCCIONES -> STRUCTS
Rule 21    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 22    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 23    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 24    IMPRESIONES -> IMPRESION
Rule 25    IMPRESION -> E
Rule 26    IMPRESION -> ARREGLOS
Rule 27    IMPRESION -> NATIVAS
Rule 28    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 29    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 30    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 31    ARREGLOS -> ID CORIZQ LISTAS CORDER
Rule 32    ARREGLOS -> CORIZQ LISTAS CORDER
Rule 33    ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 34    ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 35    LISTAS -> LISTAS COMA LISTA
Rule 36    LISTAS -> LISTA
Rule 37    LISTA -> E
Rule 38    LISTA -> NATIVAS
Rule 39    LISTA -> ARREGLOS
Rule 40    LISTA -> LLAMADAS
Rule 41    ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
Rule 42    ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
Rule 43    ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
Rule 44    ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA
Rule 45    ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA
Rule 46    ASIGNACION -> R_GLOBAL ID PTCOMA
Rule 47    ASIGNACION -> R_LOCAL ID PTCOMA
Rule 48    TIPO -> R_NOTHING
Rule 49    TIPO -> R_INT64
Rule 50    TIPO -> R_FLOAT64
Rule 51    TIPO -> R_STRING
Rule 52    TIPO -> R_CHAR
Rule 53    TIPO -> R_BOOL
Rule 54    LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA
Rule 55    LLAMADAS -> ID PARIZQ PARDER PTCOMA
Rule 56    E -> E MAS E
Rule 57    E -> E MENOS E
Rule 58    E -> E POR E
Rule 59    E -> E DIVIDIDO E
Rule 60    E -> E MODAL E
Rule 61    E -> E POTENCIA E
Rule 62    E -> MENOS E
Rule 63    E -> PARIZQ E PARDER
Rule 64    E -> R_LOG10 PARIZQ E PARDER
Rule 65    E -> R_SIN PARIZQ E PARDER
Rule 66    E -> R_COS PARIZQ E PARDER
Rule 67    E -> R_TAN PARIZQ E PARDER
Rule 68    E -> R_SQRT PARIZQ E PARDER
Rule 69    E -> R_UPPERCASE PARIZQ E PARDER
Rule 70    E -> R_LOWERCASE PARIZQ E PARDER
Rule 71    E -> R_LOG PARIZQ E COMA E PARDER
Rule 72    E -> DECIMAL
Rule 73    E -> ENTERO
Rule 74    E -> R_TRUE
Rule 75    E -> R_FALSE
Rule 76    E -> CADENA
Rule 77    E -> ID
Rule 78    RE -> RE MENQUE RE
Rule 79    RE -> RE MAYQUE RE
Rule 80    RE -> RE IGUALQUE RE
Rule 81    RE -> RE NIGUALQUE RE
Rule 82    RE -> RE MENORIGUAL RE
Rule 83    RE -> RE MAYORIGUAL RE
Rule 84    RE -> E
Rule 85    LO -> LO AND LO
Rule 86    LO -> LO OR LO
Rule 87    LO -> DIFERENTE LO
Rule 88    LO -> RE
Rule 89    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 90    NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 91    NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 92    NATIVAS -> R_SSTRING PARIZQ LISTA PARDER
Rule 93    NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 94    NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
Rule 95    NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER
Rule 96    NATIVAS -> ID PUNTO R_LENGTH
Rule 97    RETURN -> R_RETURN LISTA
Rule 98    RETURN -> R_RETURN
Rule 99    FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
Rule 100   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 101   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
Rule 102   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
Rule 103   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 104   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 105   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 106   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
Rule 107   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 108   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 109   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 110   IFS -> R_IF LO R_END PTCOMA
Rule 111   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 112   IFS -> R_IF LO ELSEIF
Rule 113   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 114   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 115   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 116   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 117   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 118   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 119   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 120   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 121   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 122   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 123   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS
Rule 124   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS
Rule 125   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES
Rule 126   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION
Rule 127   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I
Rule 128   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS
Rule 129   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS
Rule 130   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS
Rule 131   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK
Rule 132   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE
Rule 133   INSTRUCCIONES_LOOP -> IFS
Rule 134   INSTRUCCIONES_LOOP -> FORS
Rule 135   INSTRUCCIONES_LOOP -> WHILES
Rule 136   INSTRUCCIONES_LOOP -> ASIGNACION
Rule 137   INSTRUCCIONES_LOOP -> I
Rule 138   INSTRUCCIONES_LOOP -> LLAMADAS
Rule 139   INSTRUCCIONES_LOOP -> NATIVAS
Rule 140   INSTRUCCIONES_LOOP -> STRUCTS
Rule 141   INSTRUCCIONES_LOOP -> R_BREAK
Rule 142   INSTRUCCIONES_LOOP -> R_CONTINUE
Rule 143   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 144   WHILES -> R_WHILE LO R_END PTCOMA
Rule 145   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 146   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 147   RANGO -> E DOSPUNTOS E
Rule 148   RANGO -> E
Rule 149   RANGO -> ARREGLOS
Rule 150   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 151   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 152   STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA
Rule 153   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 154   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 155   ELEMENTOS -> ELEMENTOS COMA ELEMENTO
Rule 156   ELEMENTOS -> ELEMENTO
Rule 157   ELEMENTO -> ID
Rule 158   ELEMENTO -> ID DOSPUNTOS DOSPUNTOS TIPO

Terminals, with rules where they appear

AND                  : 85
CADENA               : 76
COMA                 : 23 35 71 89 90 94 155
CORDER               : 31 32 33 33 34 34 150
CORIZQ               : 31 32 33 33 34 34 150
DECIMAL              : 72
DIFERENTE            : 87 94 95
DIVIDIDO             : 59
DOLAR                : 28 29 30
DOSPUNTOS            : 41 41 42 42 43 43 147 150 158 158
ENTERO               : 73
ID                   : 31 33 41 42 43 44 45 46 47 54 55 77 94 95 96 99 100 101 102 103 104 105 106 145 146 150 151 152 153 154 157 158
IGUAL                : 41 42 43 44 45
IGUALQUE             : 80
MAS                  : 56
MAYORIGUAL           : 83
MAYQUE               : 79
MENORIGUAL           : 82
MENOS                : 57 62
MENQUE               : 78
MODAL                : 60
NIGUALQUE            : 81
OR                   : 86
PARDER               : 21 22 28 29 30 55 63 64 65 66 67 68 69 70 71 89 90 91 92 93 94 95 99 100 101 102 103 104 105 106
PARIZQ               : 21 22 28 29 30 54 54 55 63 64 65 66 67 68 69 70 71 89 90 91 92 93 94 95 99 100 101 102 103 104 105 106
POR                  : 58
POTENCIA             : 61
PTCOMA               : 21 22 41 42 43 44 45 46 47 54 55 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 143 144 145 146 151 152 153 154
PUNTO                : 96
R_BOOL               : 53
R_BREAK              : 131 141
R_CHAR               : 52
R_CONTINUE           : 132 142
R_COS                : 66
R_ELSE               : 108 111 113 114 116 119 121 122
R_ELSEIF             : 115 116 117 118 119 120 121 122
R_END                : 99 100 101 102 103 104 105 106 107 108 110 111 113 114 115 116 118 119 121 122 143 144 145 146 151 153 154
R_FALSE              : 75
R_FLOAT              : 91
R_FLOAT64            : 50
R_FOR                : 145 146
R_FUNCTION           : 99 100 101 102 103 104 105 106
R_GLOBAL             : 41 44 46
R_IF                 : 107 108 109 110 111 112 113 114
R_IN                 : 145 146
R_INT64              : 49
R_LENGTH             : 96
R_LOCAL              : 42 45 47
R_LOG                : 71
R_LOG10              : 64
R_LOWERCASE          : 70
R_MUTABLE            : 151 153
R_NOTHING            : 48
R_PARSE              : 89
R_POP                : 95
R_PRINT              : 21
R_PRINTLN            : 22
R_PUSH               : 94
R_RETURN             : 97 98
R_SIN                : 65
R_SQRT               : 68
R_SSTRING            : 92
R_STRING             : 51
R_STRUCT             : 151 152 153 154
R_TAN                : 67
R_TRUE               : 74
R_TRUNC              : 90
R_TYPEOF             : 93
R_UPPERCASE          : 69
R_WHILE              : 143 144
error                : 

Nonterminals, with rules where they appear

ARREGLOS             : 26 29 39 149
ASIGNACION           : 8 16 126 136
E                    : 25 28 37 56 56 57 57 58 58 59 59 60 60 61 61 62 63 64 65 66 67 68 69 70 71 71 84 94 147 147 148 150 150
ELEMENTO             : 155 156
ELEMENTOS            : 151 152 155
ELSEIF               : 109 112 117 120
FORS                 : 6 14 124 134
FUNCIONES            : 1 3
I                    : 9 17 127 137
IFS                  : 5 13 123 133
IMPRESION            : 23 24
IMPRESIONES          : 21 22 23
INICIO               : 1 2 0
INSTRUCCIONES        : 2 4 5 6 7 8 9 10 11 12 99 100 103 104 107 108 108 109 111 113 115 116 116 117 119 121
INSTRUCCIONES_LOOP   : 123 124 125 126 127 128 129 130 131 132 143 145
LISTA                : 35 36 41 42 43 44 45 89 90 91 92 93 97
LISTAS               : 31 32 33 33 34 34 35 54 99 100 101 102
LLAMADAS             : 10 18 40 128 138
LO                   : 85 85 86 86 87 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 143 144
NATIVAS              : 11 19 27 30 38 129 139
RANGO                : 145 146
RE                   : 78 78 79 79 80 80 81 81 82 82 83 83 88
RETURN               : 100 102 104 106
STRUCTS              : 12 20 130 140
TIPO                 : 41 42 43 89 90 158
WHILES               : 7 15 125 135

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO FUNCIONES
    (2) INICIO -> . INICIO INSTRUCCIONES
    (3) INICIO -> . FUNCIONES
    (4) INICIO -> . INSTRUCCIONES
    (99) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (102) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INICIO                         shift and go to state 1
    FUNCIONES                      shift and go to state 2
    INSTRUCCIONES                  shift and go to state 3
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . FUNCIONES
    (2) INICIO -> INICIO . INSTRUCCIONES
    (99) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (102) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    FUNCIONES                      shift and go to state 30
    INSTRUCCIONES                  shift and go to state 31
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 2

    (3) INICIO -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INICIO -> FUNCIONES .)
    R_IF            reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INICIO -> FUNCIONES .)
    ID              reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_SSTRING       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INICIO -> FUNCIONES .)
    R_POP           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INICIO -> FUNCIONES .)
    $end            reduce using rule 3 (INICIO -> FUNCIONES .)


state 3

    (4) INICIO -> INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_SSTRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
    R_FUNCTION      reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

  ! R_IF            [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_SSTRING       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 4

    (99) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER RETURN R_END PTCOMA

    ID              shift and go to state 40


state 5

    (43) ASIGNACION -> ID . IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (54) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> ID . PARIZQ PARDER PTCOMA
    (96) NATIVAS -> ID . PUNTO R_LENGTH

    IGUAL           shift and go to state 41
    PARIZQ          shift and go to state 42
    PUNTO           shift and go to state 43


state 6

    (13) INSTRUCCIONES -> IFS .

    R_IF            reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FOR           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_WHILE         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_LOCAL         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    ID              reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PRINT         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PARSE         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_TRUNC         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FLOAT         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_SSTRING       reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PUSH          reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_POP           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_STRUCT        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCIONES -> IFS .)
    $end            reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_END           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_ELSE          reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_RETURN        reduce using rule 13 (INSTRUCCIONES -> IFS .)


state 7

    (14) INSTRUCCIONES -> FORS .

    R_IF            reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FOR           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_WHILE         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_LOCAL         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    ID              reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PRINT         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PARSE         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_TRUNC         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FLOAT         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_SSTRING       reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PUSH          reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_POP           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_STRUCT        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCIONES -> FORS .)
    $end            reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_END           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_ELSE          reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_RETURN        reduce using rule 14 (INSTRUCCIONES -> FORS .)


state 8

    (15) INSTRUCCIONES -> WHILES .

    R_IF            reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FOR           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_WHILE         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_LOCAL         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    ID              reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PRINT         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PARSE         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_TRUNC         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FLOAT         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_SSTRING       reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PUSH          reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_POP           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_STRUCT        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    $end            reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_END           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_ELSE          reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_RETURN        reduce using rule 15 (INSTRUCCIONES -> WHILES .)


state 9

    (16) INSTRUCCIONES -> ASIGNACION .

    R_IF            reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FOR           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_WHILE         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_LOCAL         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    ID              reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINT         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PARSE         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_TRUNC         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FLOAT         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_SSTRING       reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PUSH          reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_POP           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_STRUCT        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    $end            reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_END           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSE          reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_RETURN        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)


state 10

    (17) INSTRUCCIONES -> I .

    R_IF            reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FOR           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_WHILE         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_LOCAL         reduce using rule 17 (INSTRUCCIONES -> I .)
    ID              reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PRINT         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PARSE         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_TRUNC         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FLOAT         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_SSTRING       reduce using rule 17 (INSTRUCCIONES -> I .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PUSH          reduce using rule 17 (INSTRUCCIONES -> I .)
    R_POP           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCIONES -> I .)
    R_STRUCT        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCIONES -> I .)
    $end            reduce using rule 17 (INSTRUCCIONES -> I .)
    R_END           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_ELSE          reduce using rule 17 (INSTRUCCIONES -> I .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_RETURN        reduce using rule 17 (INSTRUCCIONES -> I .)


state 11

    (18) INSTRUCCIONES -> LLAMADAS .

    R_IF            reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FOR           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_WHILE         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_GLOBAL        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_LOCAL         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    ID              reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINT         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINTLN       reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PARSE         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_TRUNC         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FLOAT         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_SSTRING       reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_TYPEOF        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PUSH          reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_POP           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_MUTABLE       reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_STRUCT        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FUNCTION      reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    $end            reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_END           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSE          reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSEIF        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_RETURN        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)


state 12

    (19) INSTRUCCIONES -> NATIVAS .

    R_IF            reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_FOR           reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_WHILE         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_GLOBAL        reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_LOCAL         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    ID              reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_PRINT         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_PRINTLN       reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_PARSE         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_TRUNC         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_FLOAT         reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_SSTRING       reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_TYPEOF        reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_PUSH          reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_POP           reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_MUTABLE       reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_STRUCT        reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_FUNCTION      reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    $end            reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_END           reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_ELSE          reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_ELSEIF        reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)
    R_RETURN        reduce using rule 19 (INSTRUCCIONES -> NATIVAS .)


state 13

    (20) INSTRUCCIONES -> STRUCTS .

    R_IF            reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FOR           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_WHILE         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_GLOBAL        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_LOCAL         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    ID              reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PRINT         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PRINTLN       reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PARSE         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_TRUNC         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FLOAT         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_SSTRING       reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_TYPEOF        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PUSH          reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_POP           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_MUTABLE       reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_STRUCT        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FUNCTION      reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    $end            reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_END           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_ELSE          reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_ELSEIF        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_RETURN        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)


state 14

    (107) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (110) IFS -> R_IF . LO R_END PTCOMA
    (111) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF . LO ELSEIF
    (113) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 44
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 15

    (145) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 64


state 16

    (143) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> R_WHILE . LO R_END PTCOMA
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 65
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 17

    (41) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> R_GLOBAL . ID PTCOMA

    ID              shift and go to state 66


state 18

    (42) ASIGNACION -> R_LOCAL . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_LOCAL . ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> R_LOCAL . ID PTCOMA

    ID              shift and go to state 67


state 19

    (21) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 68


state 20

    (22) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 69


state 21

    (89) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 70


state 22

    (90) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 71


state 23

    (91) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 72


state 24

    (92) NATIVAS -> R_SSTRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 73


state 25

    (93) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 74


state 26

    (94) NATIVAS -> R_PUSH . DIFERENTE PARIZQ ID COMA E PARDER

    DIFERENTE       shift and go to state 75


state 27

    (95) NATIVAS -> R_POP . DIFERENTE PARIZQ ID PARDER

    DIFERENTE       shift and go to state 76


state 28

    (151) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (153) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 77


state 29

    (152) STRUCTS -> R_STRUCT . ID ELEMENTOS PTCOMA
    (154) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 78


state 30

    (1) INICIO -> INICIO FUNCIONES .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_IF            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    ID              reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_SSTRING       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_POP           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    $end            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)


state 31

    (2) INICIO -> INICIO INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_SSTRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
    R_FUNCTION      reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    $end            reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

  ! R_IF            [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_SSTRING       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 32

    (5) INSTRUCCIONES -> INSTRUCCIONES IFS .

    R_IF            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FOR           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_WHILE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_GLOBAL        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_LOCAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    ID              reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINTLN       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PARSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TRUNC         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FLOAT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_SSTRING       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TYPEOF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PUSH          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_POP           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_MUTABLE       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_STRUCT        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FUNCTION      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    $end            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_END           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSEIF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_RETURN        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)


state 33

    (6) INSTRUCCIONES -> INSTRUCCIONES FORS .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_SSTRING       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)


state 34

    (7) INSTRUCCIONES -> INSTRUCCIONES WHILES .

    R_IF            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FOR           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_WHILE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_LOCAL         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    ID              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PARSE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TRUNC         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FLOAT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_SSTRING       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PUSH          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_POP           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_STRUCT        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    $end            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_END           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSE          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_RETURN        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)


state 35

    (8) INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .

    R_IF            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FOR           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_WHILE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_LOCAL         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    ID              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PARSE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TRUNC         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FLOAT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_SSTRING       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PUSH          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_POP           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_STRUCT        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    $end            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_END           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSE          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_RETURN        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)


state 36

    (9) INSTRUCCIONES -> INSTRUCCIONES I .

    R_IF            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FOR           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_WHILE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_LOCAL         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    ID              reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PARSE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TRUNC         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FLOAT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_SSTRING       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PUSH          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_POP           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_STRUCT        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    $end            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_END           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSE          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_RETURN        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)


state 37

    (10) INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .

    R_IF            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FOR           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_WHILE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_LOCAL         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    ID              reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PARSE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TRUNC         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FLOAT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_SSTRING       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PUSH          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_POP           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_STRUCT        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    $end            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_END           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSE          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_RETURN        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)


state 38

    (11) INSTRUCCIONES -> INSTRUCCIONES NATIVAS .

    R_IF            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_FOR           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_WHILE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_LOCAL         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    ID              reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_PRINT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_PARSE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_TRUNC         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_FLOAT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_SSTRING       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_PUSH          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_POP           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_STRUCT        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    $end            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_END           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_ELSE          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)
    R_RETURN        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS .)


state 39

    (12) INSTRUCCIONES -> INSTRUCCIONES STRUCTS .

    R_IF            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FOR           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_WHILE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_LOCAL         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    ID              reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PARSE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TRUNC         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FLOAT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_SSTRING       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PUSH          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_POP           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_STRUCT        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    $end            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_END           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSE          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_RETURN        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)


state 40

    (99) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER RETURN R_END PTCOMA

    PARIZQ          shift and go to state 79


state 41

    (43) ASIGNACION -> ID IGUAL . LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 81
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 42

    (54) LLAMADAS -> ID PARIZQ . LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> ID PARIZQ . PARDER PTCOMA
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    PARDER          shift and go to state 88
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 87
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 43

    (96) NATIVAS -> ID PUNTO . R_LENGTH

    R_LENGTH        shift and go to state 90


state 44

    (107) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (108) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (110) IFS -> R_IF LO . R_END PTCOMA
    (111) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF LO . ELSEIF
    (113) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 92
    R_ELSE          shift and go to state 93
    AND             shift and go to state 95
    OR              shift and go to state 96
    R_ELSEIF        shift and go to state 97
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 91
    ELSEIF                         shift and go to state 94
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 45

    (87) LO -> DIFERENTE . LO
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 98
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 46

    (88) LO -> RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 88 (LO -> RE .)
    R_ELSE          reduce using rule 88 (LO -> RE .)
    AND             reduce using rule 88 (LO -> RE .)
    OR              reduce using rule 88 (LO -> RE .)
    R_ELSEIF        reduce using rule 88 (LO -> RE .)
    R_IF            reduce using rule 88 (LO -> RE .)
    R_FOR           reduce using rule 88 (LO -> RE .)
    R_WHILE         reduce using rule 88 (LO -> RE .)
    R_GLOBAL        reduce using rule 88 (LO -> RE .)
    R_LOCAL         reduce using rule 88 (LO -> RE .)
    ID              reduce using rule 88 (LO -> RE .)
    R_PRINT         reduce using rule 88 (LO -> RE .)
    R_PRINTLN       reduce using rule 88 (LO -> RE .)
    R_PARSE         reduce using rule 88 (LO -> RE .)
    R_TRUNC         reduce using rule 88 (LO -> RE .)
    R_FLOAT         reduce using rule 88 (LO -> RE .)
    R_SSTRING       reduce using rule 88 (LO -> RE .)
    R_TYPEOF        reduce using rule 88 (LO -> RE .)
    R_PUSH          reduce using rule 88 (LO -> RE .)
    R_POP           reduce using rule 88 (LO -> RE .)
    R_MUTABLE       reduce using rule 88 (LO -> RE .)
    R_STRUCT        reduce using rule 88 (LO -> RE .)
    R_BREAK         reduce using rule 88 (LO -> RE .)
    R_CONTINUE      reduce using rule 88 (LO -> RE .)
    MENQUE          shift and go to state 99
    MAYQUE          shift and go to state 100
    IGUALQUE        shift and go to state 101
    NIGUALQUE       shift and go to state 102
    MENORIGUAL      shift and go to state 103
    MAYORIGUAL      shift and go to state 104


state 47

    (84) RE -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MENQUE          reduce using rule 84 (RE -> E .)
    MAYQUE          reduce using rule 84 (RE -> E .)
    IGUALQUE        reduce using rule 84 (RE -> E .)
    NIGUALQUE       reduce using rule 84 (RE -> E .)
    MENORIGUAL      reduce using rule 84 (RE -> E .)
    MAYORIGUAL      reduce using rule 84 (RE -> E .)
    R_END           reduce using rule 84 (RE -> E .)
    R_ELSE          reduce using rule 84 (RE -> E .)
    AND             reduce using rule 84 (RE -> E .)
    OR              reduce using rule 84 (RE -> E .)
    R_ELSEIF        reduce using rule 84 (RE -> E .)
    R_IF            reduce using rule 84 (RE -> E .)
    R_FOR           reduce using rule 84 (RE -> E .)
    R_WHILE         reduce using rule 84 (RE -> E .)
    R_GLOBAL        reduce using rule 84 (RE -> E .)
    R_LOCAL         reduce using rule 84 (RE -> E .)
    ID              reduce using rule 84 (RE -> E .)
    R_PRINT         reduce using rule 84 (RE -> E .)
    R_PRINTLN       reduce using rule 84 (RE -> E .)
    R_PARSE         reduce using rule 84 (RE -> E .)
    R_TRUNC         reduce using rule 84 (RE -> E .)
    R_FLOAT         reduce using rule 84 (RE -> E .)
    R_SSTRING       reduce using rule 84 (RE -> E .)
    R_TYPEOF        reduce using rule 84 (RE -> E .)
    R_PUSH          reduce using rule 84 (RE -> E .)
    R_POP           reduce using rule 84 (RE -> E .)
    R_MUTABLE       reduce using rule 84 (RE -> E .)
    R_STRUCT        reduce using rule 84 (RE -> E .)
    R_BREAK         reduce using rule 84 (RE -> E .)
    R_CONTINUE      reduce using rule 84 (RE -> E .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 48

    (62) E -> MENOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 111

state 49

    (63) E -> PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 112

state 50

    (64) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 113


state 51

    (65) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 114


state 52

    (66) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 115


state 53

    (67) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 116


state 54

    (68) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 117


state 55

    (69) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 118


state 56

    (70) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 119


state 57

    (71) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 120


state 58

    (72) E -> DECIMAL .

    MAS             reduce using rule 72 (E -> DECIMAL .)
    MENOS           reduce using rule 72 (E -> DECIMAL .)
    POR             reduce using rule 72 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 72 (E -> DECIMAL .)
    MODAL           reduce using rule 72 (E -> DECIMAL .)
    POTENCIA        reduce using rule 72 (E -> DECIMAL .)
    MENQUE          reduce using rule 72 (E -> DECIMAL .)
    MAYQUE          reduce using rule 72 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 72 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 72 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 72 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 72 (E -> DECIMAL .)
    R_END           reduce using rule 72 (E -> DECIMAL .)
    R_ELSE          reduce using rule 72 (E -> DECIMAL .)
    AND             reduce using rule 72 (E -> DECIMAL .)
    OR              reduce using rule 72 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 72 (E -> DECIMAL .)
    R_IF            reduce using rule 72 (E -> DECIMAL .)
    R_FOR           reduce using rule 72 (E -> DECIMAL .)
    R_WHILE         reduce using rule 72 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 72 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 72 (E -> DECIMAL .)
    ID              reduce using rule 72 (E -> DECIMAL .)
    R_PRINT         reduce using rule 72 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 72 (E -> DECIMAL .)
    R_PARSE         reduce using rule 72 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 72 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 72 (E -> DECIMAL .)
    R_SSTRING       reduce using rule 72 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 72 (E -> DECIMAL .)
    R_PUSH          reduce using rule 72 (E -> DECIMAL .)
    R_POP           reduce using rule 72 (E -> DECIMAL .)
    R_MUTABLE       reduce using rule 72 (E -> DECIMAL .)
    R_STRUCT        reduce using rule 72 (E -> DECIMAL .)
    R_BREAK         reduce using rule 72 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 72 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 72 (E -> DECIMAL .)
    PARIZQ          reduce using rule 72 (E -> DECIMAL .)
    COMA            reduce using rule 72 (E -> DECIMAL .)
    PARDER          reduce using rule 72 (E -> DECIMAL .)
    CORDER          reduce using rule 72 (E -> DECIMAL .)
    PTCOMA          reduce using rule 72 (E -> DECIMAL .)


state 59

    (73) E -> ENTERO .

    MAS             reduce using rule 73 (E -> ENTERO .)
    MENOS           reduce using rule 73 (E -> ENTERO .)
    POR             reduce using rule 73 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 73 (E -> ENTERO .)
    MODAL           reduce using rule 73 (E -> ENTERO .)
    POTENCIA        reduce using rule 73 (E -> ENTERO .)
    MENQUE          reduce using rule 73 (E -> ENTERO .)
    MAYQUE          reduce using rule 73 (E -> ENTERO .)
    IGUALQUE        reduce using rule 73 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 73 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 73 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 73 (E -> ENTERO .)
    R_END           reduce using rule 73 (E -> ENTERO .)
    R_ELSE          reduce using rule 73 (E -> ENTERO .)
    AND             reduce using rule 73 (E -> ENTERO .)
    OR              reduce using rule 73 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 73 (E -> ENTERO .)
    R_IF            reduce using rule 73 (E -> ENTERO .)
    R_FOR           reduce using rule 73 (E -> ENTERO .)
    R_WHILE         reduce using rule 73 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 73 (E -> ENTERO .)
    R_LOCAL         reduce using rule 73 (E -> ENTERO .)
    ID              reduce using rule 73 (E -> ENTERO .)
    R_PRINT         reduce using rule 73 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 73 (E -> ENTERO .)
    R_PARSE         reduce using rule 73 (E -> ENTERO .)
    R_TRUNC         reduce using rule 73 (E -> ENTERO .)
    R_FLOAT         reduce using rule 73 (E -> ENTERO .)
    R_SSTRING       reduce using rule 73 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 73 (E -> ENTERO .)
    R_PUSH          reduce using rule 73 (E -> ENTERO .)
    R_POP           reduce using rule 73 (E -> ENTERO .)
    R_MUTABLE       reduce using rule 73 (E -> ENTERO .)
    R_STRUCT        reduce using rule 73 (E -> ENTERO .)
    R_BREAK         reduce using rule 73 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 73 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 73 (E -> ENTERO .)
    PARIZQ          reduce using rule 73 (E -> ENTERO .)
    COMA            reduce using rule 73 (E -> ENTERO .)
    PARDER          reduce using rule 73 (E -> ENTERO .)
    CORDER          reduce using rule 73 (E -> ENTERO .)
    PTCOMA          reduce using rule 73 (E -> ENTERO .)


state 60

    (74) E -> R_TRUE .

    MAS             reduce using rule 74 (E -> R_TRUE .)
    MENOS           reduce using rule 74 (E -> R_TRUE .)
    POR             reduce using rule 74 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 74 (E -> R_TRUE .)
    MODAL           reduce using rule 74 (E -> R_TRUE .)
    POTENCIA        reduce using rule 74 (E -> R_TRUE .)
    MENQUE          reduce using rule 74 (E -> R_TRUE .)
    MAYQUE          reduce using rule 74 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 74 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 74 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 74 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 74 (E -> R_TRUE .)
    R_END           reduce using rule 74 (E -> R_TRUE .)
    R_ELSE          reduce using rule 74 (E -> R_TRUE .)
    AND             reduce using rule 74 (E -> R_TRUE .)
    OR              reduce using rule 74 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 74 (E -> R_TRUE .)
    R_IF            reduce using rule 74 (E -> R_TRUE .)
    R_FOR           reduce using rule 74 (E -> R_TRUE .)
    R_WHILE         reduce using rule 74 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 74 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 74 (E -> R_TRUE .)
    ID              reduce using rule 74 (E -> R_TRUE .)
    R_PRINT         reduce using rule 74 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 74 (E -> R_TRUE .)
    R_PARSE         reduce using rule 74 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 74 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 74 (E -> R_TRUE .)
    R_SSTRING       reduce using rule 74 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 74 (E -> R_TRUE .)
    R_PUSH          reduce using rule 74 (E -> R_TRUE .)
    R_POP           reduce using rule 74 (E -> R_TRUE .)
    R_MUTABLE       reduce using rule 74 (E -> R_TRUE .)
    R_STRUCT        reduce using rule 74 (E -> R_TRUE .)
    R_BREAK         reduce using rule 74 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 74 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 74 (E -> R_TRUE .)
    PARIZQ          reduce using rule 74 (E -> R_TRUE .)
    COMA            reduce using rule 74 (E -> R_TRUE .)
    PARDER          reduce using rule 74 (E -> R_TRUE .)
    CORDER          reduce using rule 74 (E -> R_TRUE .)
    PTCOMA          reduce using rule 74 (E -> R_TRUE .)


state 61

    (75) E -> R_FALSE .

    MAS             reduce using rule 75 (E -> R_FALSE .)
    MENOS           reduce using rule 75 (E -> R_FALSE .)
    POR             reduce using rule 75 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 75 (E -> R_FALSE .)
    MODAL           reduce using rule 75 (E -> R_FALSE .)
    POTENCIA        reduce using rule 75 (E -> R_FALSE .)
    MENQUE          reduce using rule 75 (E -> R_FALSE .)
    MAYQUE          reduce using rule 75 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 75 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 75 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 75 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 75 (E -> R_FALSE .)
    R_END           reduce using rule 75 (E -> R_FALSE .)
    R_ELSE          reduce using rule 75 (E -> R_FALSE .)
    AND             reduce using rule 75 (E -> R_FALSE .)
    OR              reduce using rule 75 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 75 (E -> R_FALSE .)
    R_IF            reduce using rule 75 (E -> R_FALSE .)
    R_FOR           reduce using rule 75 (E -> R_FALSE .)
    R_WHILE         reduce using rule 75 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 75 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 75 (E -> R_FALSE .)
    ID              reduce using rule 75 (E -> R_FALSE .)
    R_PRINT         reduce using rule 75 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 75 (E -> R_FALSE .)
    R_PARSE         reduce using rule 75 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 75 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 75 (E -> R_FALSE .)
    R_SSTRING       reduce using rule 75 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 75 (E -> R_FALSE .)
    R_PUSH          reduce using rule 75 (E -> R_FALSE .)
    R_POP           reduce using rule 75 (E -> R_FALSE .)
    R_MUTABLE       reduce using rule 75 (E -> R_FALSE .)
    R_STRUCT        reduce using rule 75 (E -> R_FALSE .)
    R_BREAK         reduce using rule 75 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 75 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 75 (E -> R_FALSE .)
    PARIZQ          reduce using rule 75 (E -> R_FALSE .)
    COMA            reduce using rule 75 (E -> R_FALSE .)
    PARDER          reduce using rule 75 (E -> R_FALSE .)
    CORDER          reduce using rule 75 (E -> R_FALSE .)
    PTCOMA          reduce using rule 75 (E -> R_FALSE .)


state 62

    (76) E -> CADENA .

    MAS             reduce using rule 76 (E -> CADENA .)
    MENOS           reduce using rule 76 (E -> CADENA .)
    POR             reduce using rule 76 (E -> CADENA .)
    DIVIDIDO        reduce using rule 76 (E -> CADENA .)
    MODAL           reduce using rule 76 (E -> CADENA .)
    POTENCIA        reduce using rule 76 (E -> CADENA .)
    MENQUE          reduce using rule 76 (E -> CADENA .)
    MAYQUE          reduce using rule 76 (E -> CADENA .)
    IGUALQUE        reduce using rule 76 (E -> CADENA .)
    NIGUALQUE       reduce using rule 76 (E -> CADENA .)
    MENORIGUAL      reduce using rule 76 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 76 (E -> CADENA .)
    R_END           reduce using rule 76 (E -> CADENA .)
    R_ELSE          reduce using rule 76 (E -> CADENA .)
    AND             reduce using rule 76 (E -> CADENA .)
    OR              reduce using rule 76 (E -> CADENA .)
    R_ELSEIF        reduce using rule 76 (E -> CADENA .)
    R_IF            reduce using rule 76 (E -> CADENA .)
    R_FOR           reduce using rule 76 (E -> CADENA .)
    R_WHILE         reduce using rule 76 (E -> CADENA .)
    R_GLOBAL        reduce using rule 76 (E -> CADENA .)
    R_LOCAL         reduce using rule 76 (E -> CADENA .)
    ID              reduce using rule 76 (E -> CADENA .)
    R_PRINT         reduce using rule 76 (E -> CADENA .)
    R_PRINTLN       reduce using rule 76 (E -> CADENA .)
    R_PARSE         reduce using rule 76 (E -> CADENA .)
    R_TRUNC         reduce using rule 76 (E -> CADENA .)
    R_FLOAT         reduce using rule 76 (E -> CADENA .)
    R_SSTRING       reduce using rule 76 (E -> CADENA .)
    R_TYPEOF        reduce using rule 76 (E -> CADENA .)
    R_PUSH          reduce using rule 76 (E -> CADENA .)
    R_POP           reduce using rule 76 (E -> CADENA .)
    R_MUTABLE       reduce using rule 76 (E -> CADENA .)
    R_STRUCT        reduce using rule 76 (E -> CADENA .)
    R_BREAK         reduce using rule 76 (E -> CADENA .)
    R_CONTINUE      reduce using rule 76 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 76 (E -> CADENA .)
    PARIZQ          reduce using rule 76 (E -> CADENA .)
    COMA            reduce using rule 76 (E -> CADENA .)
    PARDER          reduce using rule 76 (E -> CADENA .)
    CORDER          reduce using rule 76 (E -> CADENA .)
    PTCOMA          reduce using rule 76 (E -> CADENA .)


state 63

    (77) E -> ID .

    MAS             reduce using rule 77 (E -> ID .)
    MENOS           reduce using rule 77 (E -> ID .)
    POR             reduce using rule 77 (E -> ID .)
    DIVIDIDO        reduce using rule 77 (E -> ID .)
    MODAL           reduce using rule 77 (E -> ID .)
    POTENCIA        reduce using rule 77 (E -> ID .)
    MENQUE          reduce using rule 77 (E -> ID .)
    MAYQUE          reduce using rule 77 (E -> ID .)
    IGUALQUE        reduce using rule 77 (E -> ID .)
    NIGUALQUE       reduce using rule 77 (E -> ID .)
    MENORIGUAL      reduce using rule 77 (E -> ID .)
    MAYORIGUAL      reduce using rule 77 (E -> ID .)
    R_END           reduce using rule 77 (E -> ID .)
    R_ELSE          reduce using rule 77 (E -> ID .)
    AND             reduce using rule 77 (E -> ID .)
    OR              reduce using rule 77 (E -> ID .)
    R_ELSEIF        reduce using rule 77 (E -> ID .)
    R_IF            reduce using rule 77 (E -> ID .)
    R_FOR           reduce using rule 77 (E -> ID .)
    R_WHILE         reduce using rule 77 (E -> ID .)
    R_GLOBAL        reduce using rule 77 (E -> ID .)
    R_LOCAL         reduce using rule 77 (E -> ID .)
    ID              reduce using rule 77 (E -> ID .)
    R_PRINT         reduce using rule 77 (E -> ID .)
    R_PRINTLN       reduce using rule 77 (E -> ID .)
    R_PARSE         reduce using rule 77 (E -> ID .)
    R_TRUNC         reduce using rule 77 (E -> ID .)
    R_FLOAT         reduce using rule 77 (E -> ID .)
    R_SSTRING       reduce using rule 77 (E -> ID .)
    R_TYPEOF        reduce using rule 77 (E -> ID .)
    R_PUSH          reduce using rule 77 (E -> ID .)
    R_POP           reduce using rule 77 (E -> ID .)
    R_MUTABLE       reduce using rule 77 (E -> ID .)
    R_STRUCT        reduce using rule 77 (E -> ID .)
    R_BREAK         reduce using rule 77 (E -> ID .)
    R_CONTINUE      reduce using rule 77 (E -> ID .)
    DOSPUNTOS       reduce using rule 77 (E -> ID .)
    PARIZQ          reduce using rule 77 (E -> ID .)
    COMA            reduce using rule 77 (E -> ID .)
    PARDER          reduce using rule 77 (E -> ID .)
    CORDER          reduce using rule 77 (E -> ID .)
    PTCOMA          reduce using rule 77 (E -> ID .)


state 64

    (145) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 121


state 65

    (143) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> R_WHILE LO . R_END PTCOMA
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO
    (123) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (124) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (125) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (126) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (129) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (130) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (131) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_BREAK
    (132) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_CONTINUE
    (133) INSTRUCCIONES_LOOP -> . IFS
    (134) INSTRUCCIONES_LOOP -> . FORS
    (135) INSTRUCCIONES_LOOP -> . WHILES
    (136) INSTRUCCIONES_LOOP -> . ASIGNACION
    (137) INSTRUCCIONES_LOOP -> . I
    (138) INSTRUCCIONES_LOOP -> . LLAMADAS
    (139) INSTRUCCIONES_LOOP -> . NATIVAS
    (140) INSTRUCCIONES_LOOP -> . STRUCTS
    (141) INSTRUCCIONES_LOOP -> . R_BREAK
    (142) INSTRUCCIONES_LOOP -> . R_CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 123
    AND             shift and go to state 95
    OR              shift and go to state 96
    R_BREAK         shift and go to state 132
    R_CONTINUE      shift and go to state 133
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES_LOOP             shift and go to state 122
    IFS                            shift and go to state 124
    FORS                           shift and go to state 125
    WHILES                         shift and go to state 126
    ASIGNACION                     shift and go to state 127
    I                              shift and go to state 128
    LLAMADAS                       shift and go to state 129
    NATIVAS                        shift and go to state 130
    STRUCTS                        shift and go to state 131

state 66

    (41) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA PTCOMA
    (46) ASIGNACION -> R_GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 134
    PTCOMA          shift and go to state 135


state 67

    (42) ASIGNACION -> R_LOCAL ID . IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_LOCAL ID . IGUAL LISTA PTCOMA
    (47) ASIGNACION -> R_LOCAL ID . PTCOMA

    IGUAL           shift and go to state 136
    PTCOMA          shift and go to state 137


state 68

    (21) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (23) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (24) IMPRESIONES -> . IMPRESION
    (25) IMPRESION -> . E
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . NATIVAS
    (28) IMPRESION -> . DOLAR PARIZQ E PARDER
    (29) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (30) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH

    DOLAR           shift and go to state 143
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 144
    CORIZQ          shift and go to state 86
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27

    IMPRESIONES                    shift and go to state 138
    IMPRESION                      shift and go to state 139
    E                              shift and go to state 140
    ARREGLOS                       shift and go to state 141
    NATIVAS                        shift and go to state 142

state 69

    (22) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (23) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (24) IMPRESIONES -> . IMPRESION
    (25) IMPRESION -> . E
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . NATIVAS
    (28) IMPRESION -> . DOLAR PARIZQ E PARDER
    (29) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (30) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH

    DOLAR           shift and go to state 143
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 144
    CORIZQ          shift and go to state 86
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27

    IMPRESIONES                    shift and go to state 145
    IMPRESION                      shift and go to state 139
    E                              shift and go to state 140
    ARREGLOS                       shift and go to state 141
    NATIVAS                        shift and go to state 142

state 70

    (89) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 146

state 71

    (90) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 153

state 72

    (91) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 154
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 73

    (92) NATIVAS -> R_SSTRING PARIZQ . LISTA PARDER
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 155
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 74

    (93) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 156
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 75

    (94) NATIVAS -> R_PUSH DIFERENTE . PARIZQ ID COMA E PARDER

    PARIZQ          shift and go to state 157


state 76

    (95) NATIVAS -> R_POP DIFERENTE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 158


state 77

    (151) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (153) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 159


state 78

    (152) STRUCTS -> R_STRUCT ID . ELEMENTOS PTCOMA
    (154) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (155) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (156) ELEMENTOS -> . ELEMENTO
    (157) ELEMENTO -> . ID
    (158) ELEMENTO -> . ID DOSPUNTOS DOSPUNTOS TIPO

    R_END           shift and go to state 162
    ID              shift and go to state 160

    ELEMENTOS                      shift and go to state 161
    ELEMENTO                       shift and go to state 163

state 79

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER RETURN R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER RETURN R_END PTCOMA
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    PARDER          shift and go to state 165
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 164
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 80

    (77) E -> ID .
    (96) NATIVAS -> ID . PUNTO R_LENGTH
    (31) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> ID . PARIZQ PARDER PTCOMA

  ! shift/reduce conflict for PARIZQ resolved as shift
    MAS             reduce using rule 77 (E -> ID .)
    MENOS           reduce using rule 77 (E -> ID .)
    POR             reduce using rule 77 (E -> ID .)
    DIVIDIDO        reduce using rule 77 (E -> ID .)
    MODAL           reduce using rule 77 (E -> ID .)
    POTENCIA        reduce using rule 77 (E -> ID .)
    DOSPUNTOS       reduce using rule 77 (E -> ID .)
    COMA            reduce using rule 77 (E -> ID .)
    PARDER          reduce using rule 77 (E -> ID .)
    CORDER          reduce using rule 77 (E -> ID .)
    PTCOMA          reduce using rule 77 (E -> ID .)
    R_END           reduce using rule 77 (E -> ID .)
    PUNTO           shift and go to state 43
    CORIZQ          shift and go to state 166
    PARIZQ          shift and go to state 42

  ! PARIZQ          [ reduce using rule 77 (E -> ID .) ]


state 81

    (43) ASIGNACION -> ID IGUAL LISTA . DOSPUNTOS DOSPUNTOS TIPO PTCOMA

    DOSPUNTOS       shift and go to state 167


state 82

    (37) LISTA -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    DOSPUNTOS       reduce using rule 37 (LISTA -> E .)
    PARIZQ          reduce using rule 37 (LISTA -> E .)
    COMA            reduce using rule 37 (LISTA -> E .)
    PARDER          reduce using rule 37 (LISTA -> E .)
    CORDER          reduce using rule 37 (LISTA -> E .)
    PTCOMA          reduce using rule 37 (LISTA -> E .)
    R_END           reduce using rule 37 (LISTA -> E .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 83

    (38) LISTA -> NATIVAS .

    DOSPUNTOS       reduce using rule 38 (LISTA -> NATIVAS .)
    PARIZQ          reduce using rule 38 (LISTA -> NATIVAS .)
    COMA            reduce using rule 38 (LISTA -> NATIVAS .)
    PARDER          reduce using rule 38 (LISTA -> NATIVAS .)
    CORDER          reduce using rule 38 (LISTA -> NATIVAS .)
    PTCOMA          reduce using rule 38 (LISTA -> NATIVAS .)
    R_END           reduce using rule 38 (LISTA -> NATIVAS .)


state 84

    (39) LISTA -> ARREGLOS .

    DOSPUNTOS       reduce using rule 39 (LISTA -> ARREGLOS .)
    PARIZQ          reduce using rule 39 (LISTA -> ARREGLOS .)
    COMA            reduce using rule 39 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 39 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 39 (LISTA -> ARREGLOS .)
    PTCOMA          reduce using rule 39 (LISTA -> ARREGLOS .)
    R_END           reduce using rule 39 (LISTA -> ARREGLOS .)


state 85

    (40) LISTA -> LLAMADAS .

    DOSPUNTOS       reduce using rule 40 (LISTA -> LLAMADAS .)
    PARIZQ          reduce using rule 40 (LISTA -> LLAMADAS .)
    COMA            reduce using rule 40 (LISTA -> LLAMADAS .)
    PARDER          reduce using rule 40 (LISTA -> LLAMADAS .)
    CORDER          reduce using rule 40 (LISTA -> LLAMADAS .)
    PTCOMA          reduce using rule 40 (LISTA -> LLAMADAS .)
    R_END           reduce using rule 40 (LISTA -> LLAMADAS .)


state 86

    (32) ARREGLOS -> CORIZQ . LISTAS CORDER
    (34) ARREGLOS -> CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 168
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 87

    (54) LLAMADAS -> ID PARIZQ LISTAS . PARIZQ PTCOMA
    (35) LISTAS -> LISTAS . COMA LISTA

    PARIZQ          shift and go to state 169
    COMA            shift and go to state 170


state 88

    (55) LLAMADAS -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 171


state 89

    (36) LISTAS -> LISTA .

    PARIZQ          reduce using rule 36 (LISTAS -> LISTA .)
    COMA            reduce using rule 36 (LISTAS -> LISTA .)
    PARDER          reduce using rule 36 (LISTAS -> LISTA .)
    CORDER          reduce using rule 36 (LISTAS -> LISTA .)


state 90

    (96) NATIVAS -> ID PUNTO R_LENGTH .

    R_IF            reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FOR           reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_WHILE         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_GLOBAL        reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_LOCAL         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    ID              reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINT         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINTLN       reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PARSE         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TRUNC         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FLOAT         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_SSTRING       reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TYPEOF        reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PUSH          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_POP           reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_MUTABLE       reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRUCT        reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FUNCTION      reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    $end            reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    DOSPUNTOS       reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARIZQ          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    COMA            reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_END           reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_ELSE          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_ELSEIF        reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_BREAK         reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_CONTINUE      reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARDER          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    CORDER          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    PTCOMA          reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_RETURN        reduce using rule 96 (NATIVAS -> ID PUNTO R_LENGTH .)


state 91

    (107) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (108) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (113) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 172
    R_ELSE          shift and go to state 173
    R_ELSEIF        shift and go to state 97
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    ELSEIF                         shift and go to state 174
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 92

    (110) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 175


state 93

    (111) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (114) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 177
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 176
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 94

    (112) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_SSTRING       reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)


state 95

    (85) LO -> LO AND . LO
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 178
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 96

    (86) LO -> LO OR . LO
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 179
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 97

    (115) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF . LO ELSEIF
    (121) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (85) LO -> . LO AND LO
    (86) LO -> . LO OR LO
    (87) LO -> . DIFERENTE LO
    (88) LO -> . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    DIFERENTE       shift and go to state 45
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    LO                             shift and go to state 180
    RE                             shift and go to state 46
    E                              shift and go to state 47

state 98

    (87) LO -> DIFERENTE LO .
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO

    R_END           reduce using rule 87 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 87 (LO -> DIFERENTE LO .)
    AND             reduce using rule 87 (LO -> DIFERENTE LO .)
    OR              reduce using rule 87 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 87 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 87 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 87 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 87 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 87 (LO -> DIFERENTE LO .)
    ID              reduce using rule 87 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 87 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_SSTRING       reduce using rule 87 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 87 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 87 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 87 (LO -> DIFERENTE LO .)
    R_MUTABLE       reduce using rule 87 (LO -> DIFERENTE LO .)
    R_STRUCT        reduce using rule 87 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 87 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 87 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]


state 99

    (78) RE -> RE MENQUE . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 181
    E                              shift and go to state 47

state 100

    (79) RE -> RE MAYQUE . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 182
    E                              shift and go to state 47

state 101

    (80) RE -> RE IGUALQUE . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 183
    E                              shift and go to state 47

state 102

    (81) RE -> RE NIGUALQUE . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 184
    E                              shift and go to state 47

state 103

    (82) RE -> RE MENORIGUAL . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 185
    E                              shift and go to state 47

state 104

    (83) RE -> RE MAYORIGUAL . RE
    (78) RE -> . RE MENQUE RE
    (79) RE -> . RE MAYQUE RE
    (80) RE -> . RE IGUALQUE RE
    (81) RE -> . RE NIGUALQUE RE
    (82) RE -> . RE MENORIGUAL RE
    (83) RE -> . RE MAYORIGUAL RE
    (84) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    RE                             shift and go to state 186
    E                              shift and go to state 47

state 105

    (56) E -> E MAS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 187

state 106

    (57) E -> E MENOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 188

state 107

    (58) E -> E POR . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 189

state 108

    (59) E -> E DIVIDIDO . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 190

state 109

    (60) E -> E MODAL . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 191

state 110

    (61) E -> E POTENCIA . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 192

state 111

    (62) E -> MENOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 62 (E -> MENOS E .)
    MENOS           reduce using rule 62 (E -> MENOS E .)
    POR             reduce using rule 62 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 62 (E -> MENOS E .)
    MODAL           reduce using rule 62 (E -> MENOS E .)
    POTENCIA        reduce using rule 62 (E -> MENOS E .)
    MENQUE          reduce using rule 62 (E -> MENOS E .)
    MAYQUE          reduce using rule 62 (E -> MENOS E .)
    IGUALQUE        reduce using rule 62 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 62 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 62 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 62 (E -> MENOS E .)
    R_END           reduce using rule 62 (E -> MENOS E .)
    R_ELSE          reduce using rule 62 (E -> MENOS E .)
    AND             reduce using rule 62 (E -> MENOS E .)
    OR              reduce using rule 62 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 62 (E -> MENOS E .)
    R_IF            reduce using rule 62 (E -> MENOS E .)
    R_FOR           reduce using rule 62 (E -> MENOS E .)
    R_WHILE         reduce using rule 62 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 62 (E -> MENOS E .)
    R_LOCAL         reduce using rule 62 (E -> MENOS E .)
    ID              reduce using rule 62 (E -> MENOS E .)
    R_PRINT         reduce using rule 62 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 62 (E -> MENOS E .)
    R_PARSE         reduce using rule 62 (E -> MENOS E .)
    R_TRUNC         reduce using rule 62 (E -> MENOS E .)
    R_FLOAT         reduce using rule 62 (E -> MENOS E .)
    R_SSTRING       reduce using rule 62 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 62 (E -> MENOS E .)
    R_PUSH          reduce using rule 62 (E -> MENOS E .)
    R_POP           reduce using rule 62 (E -> MENOS E .)
    R_MUTABLE       reduce using rule 62 (E -> MENOS E .)
    R_STRUCT        reduce using rule 62 (E -> MENOS E .)
    R_BREAK         reduce using rule 62 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 62 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 62 (E -> MENOS E .)
    PARIZQ          reduce using rule 62 (E -> MENOS E .)
    COMA            reduce using rule 62 (E -> MENOS E .)
    PARDER          reduce using rule 62 (E -> MENOS E .)
    CORDER          reduce using rule 62 (E -> MENOS E .)
    PTCOMA          reduce using rule 62 (E -> MENOS E .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODAL           [ shift and go to state 109 ]
  ! POTENCIA        [ shift and go to state 110 ]


state 112

    (63) E -> PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 193
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 113

    (64) E -> R_LOG10 PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 194

state 114

    (65) E -> R_SIN PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 195

state 115

    (66) E -> R_COS PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 196

state 116

    (67) E -> R_TAN PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 197

state 117

    (68) E -> R_SQRT PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 198

state 118

    (69) E -> R_UPPERCASE PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 199

state 119

    (70) E -> R_LOWERCASE PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 200

state 120

    (71) E -> R_LOG PARIZQ . E COMA E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 201

state 121

    (145) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (147) RANGO -> . E DOSPUNTOS E
    (148) RANGO -> . E
    (149) RANGO -> . ARREGLOS
    (150) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    ID              shift and go to state 202
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    CORIZQ          shift and go to state 86

    RANGO                          shift and go to state 203
    E                              shift and go to state 204
    ARREGLOS                       shift and go to state 205

state 122

    (143) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (123) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (125) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (126) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_BREAK
    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 206
    R_BREAK         shift and go to state 215
    R_CONTINUE      shift and go to state 216
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 207
    FORS                           shift and go to state 208
    WHILES                         shift and go to state 209
    ASIGNACION                     shift and go to state 210
    I                              shift and go to state 211
    LLAMADAS                       shift and go to state 212
    NATIVAS                        shift and go to state 213
    STRUCTS                        shift and go to state 214

state 123

    (144) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 217


state 124

    (133) INSTRUCCIONES_LOOP -> IFS .

    R_END           reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_BREAK         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_IF            reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_FOR           reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_WHILE         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_LOCAL         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    ID              reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINT         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_PARSE         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_TRUNC         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_FLOAT         reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_SSTRING       reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_PUSH          reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_POP           reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_MUTABLE       reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)
    R_STRUCT        reduce using rule 133 (INSTRUCCIONES_LOOP -> IFS .)


state 125

    (134) INSTRUCCIONES_LOOP -> FORS .

    R_END           reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_BREAK         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_IF            reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_FOR           reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_WHILE         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_LOCAL         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    ID              reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINT         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_PARSE         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_TRUNC         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_FLOAT         reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_SSTRING       reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_PUSH          reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_POP           reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_MUTABLE       reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)
    R_STRUCT        reduce using rule 134 (INSTRUCCIONES_LOOP -> FORS .)


state 126

    (135) INSTRUCCIONES_LOOP -> WHILES .

    R_END           reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_BREAK         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_IF            reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FOR           reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_WHILE         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    ID              reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINT         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PARSE         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_SSTRING       reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PUSH          reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_POP           reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_MUTABLE       reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)
    R_STRUCT        reduce using rule 135 (INSTRUCCIONES_LOOP -> WHILES .)


state 127

    (136) INSTRUCCIONES_LOOP -> ASIGNACION .

    R_END           reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    ID              reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_SSTRING       reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_MUTABLE       reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_STRUCT        reduce using rule 136 (INSTRUCCIONES_LOOP -> ASIGNACION .)


state 128

    (137) INSTRUCCIONES_LOOP -> I .

    R_END           reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_BREAK         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_CONTINUE      reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_IF            reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_FOR           reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_WHILE         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_GLOBAL        reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_LOCAL         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    ID              reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_PRINT         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_PRINTLN       reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_PARSE         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_TRUNC         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_FLOAT         reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_SSTRING       reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_TYPEOF        reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_PUSH          reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_POP           reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_MUTABLE       reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)
    R_STRUCT        reduce using rule 137 (INSTRUCCIONES_LOOP -> I .)


state 129

    (138) INSTRUCCIONES_LOOP -> LLAMADAS .

    R_END           reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_BREAK         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_CONTINUE      reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_IF            reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FOR           reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_WHILE         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_GLOBAL        reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_LOCAL         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    ID              reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINT         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINTLN       reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PARSE         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TRUNC         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FLOAT         reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_SSTRING       reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TYPEOF        reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PUSH          reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_POP           reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_MUTABLE       reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_STRUCT        reduce using rule 138 (INSTRUCCIONES_LOOP -> LLAMADAS .)


state 130

    (139) INSTRUCCIONES_LOOP -> NATIVAS .

    R_END           reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_BREAK         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_CONTINUE      reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_IF            reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FOR           reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_WHILE         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_GLOBAL        reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_LOCAL         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    ID              reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINT         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINTLN       reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PARSE         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TRUNC         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FLOAT         reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_SSTRING       reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TYPEOF        reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PUSH          reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_POP           reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_MUTABLE       reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_STRUCT        reduce using rule 139 (INSTRUCCIONES_LOOP -> NATIVAS .)


state 131

    (140) INSTRUCCIONES_LOOP -> STRUCTS .

    R_END           reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_BREAK         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_CONTINUE      reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_IF            reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FOR           reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_WHILE         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_GLOBAL        reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_LOCAL         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    ID              reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINT         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINTLN       reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PARSE         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TRUNC         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FLOAT         reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_SSTRING       reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TYPEOF        reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PUSH          reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_POP           reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_MUTABLE       reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_STRUCT        reduce using rule 140 (INSTRUCCIONES_LOOP -> STRUCTS .)


state 132

    (141) INSTRUCCIONES_LOOP -> R_BREAK .

    R_END           reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_BREAK         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_CONTINUE      reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_IF            reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_FOR           reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_WHILE         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_GLOBAL        reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_LOCAL         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    ID              reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PRINT         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PRINTLN       reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PARSE         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_TRUNC         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_FLOAT         reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_SSTRING       reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_TYPEOF        reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PUSH          reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_POP           reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_MUTABLE       reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_STRUCT        reduce using rule 141 (INSTRUCCIONES_LOOP -> R_BREAK .)


state 133

    (142) INSTRUCCIONES_LOOP -> R_CONTINUE .

    R_END           reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_BREAK         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_CONTINUE      reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_IF            reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_FOR           reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_WHILE         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_GLOBAL        reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_LOCAL         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    ID              reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PRINT         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PRINTLN       reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PARSE         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_TRUNC         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_FLOAT         reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_SSTRING       reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_TYPEOF        reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PUSH          reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_POP           reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_MUTABLE       reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_STRUCT        reduce using rule 142 (INSTRUCCIONES_LOOP -> R_CONTINUE .)


state 134

    (41) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA PTCOMA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 218
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 135

    (46) ASIGNACION -> R_GLOBAL ID PTCOMA .

    R_IF            reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FOR           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_WHILE         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_LOCAL         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    ID              reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINT         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PARSE         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TRUNC         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FLOAT         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_SSTRING       reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PUSH          reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_POP           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRUCT        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    $end            reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_END           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSE          reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_BREAK         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_RETURN        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID PTCOMA .)


state 136

    (42) ASIGNACION -> R_LOCAL ID IGUAL . LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_LOCAL ID IGUAL . LISTA PTCOMA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 219
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 137

    (47) ASIGNACION -> R_LOCAL ID PTCOMA .

    R_IF            reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FOR           reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_WHILE         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_LOCAL         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    ID              reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINT         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PARSE         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TRUNC         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FLOAT         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_SSTRING       reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PUSH          reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_POP           reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRUCT        reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    $end            reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_END           reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSE          reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_BREAK         reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_RETURN        reduce using rule 47 (ASIGNACION -> R_LOCAL ID PTCOMA .)


state 138

    (21) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (23) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 220
    COMA            shift and go to state 221


state 139

    (24) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 24 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 24 (IMPRESIONES -> IMPRESION .)


state 140

    (25) IMPRESION -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          reduce using rule 25 (IMPRESION -> E .)
    COMA            reduce using rule 25 (IMPRESION -> E .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 141

    (26) IMPRESION -> ARREGLOS .

    PARDER          reduce using rule 26 (IMPRESION -> ARREGLOS .)
    COMA            reduce using rule 26 (IMPRESION -> ARREGLOS .)


state 142

    (27) IMPRESION -> NATIVAS .

    PARDER          reduce using rule 27 (IMPRESION -> NATIVAS .)
    COMA            reduce using rule 27 (IMPRESION -> NATIVAS .)


state 143

    (28) IMPRESION -> DOLAR . PARIZQ E PARDER
    (29) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (30) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 222


state 144

    (77) E -> ID .
    (31) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (96) NATIVAS -> ID . PUNTO R_LENGTH

    MAS             reduce using rule 77 (E -> ID .)
    MENOS           reduce using rule 77 (E -> ID .)
    POR             reduce using rule 77 (E -> ID .)
    DIVIDIDO        reduce using rule 77 (E -> ID .)
    MODAL           reduce using rule 77 (E -> ID .)
    POTENCIA        reduce using rule 77 (E -> ID .)
    PARDER          reduce using rule 77 (E -> ID .)
    COMA            reduce using rule 77 (E -> ID .)
    CORIZQ          shift and go to state 166
    PUNTO           shift and go to state 43


state 145

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (23) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 223
    COMA            shift and go to state 221


state 146

    (89) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 224


state 147

    (48) TIPO -> R_NOTHING .

    COMA            reduce using rule 48 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 48 (TIPO -> R_NOTHING .)
    R_END           reduce using rule 48 (TIPO -> R_NOTHING .)


state 148

    (49) TIPO -> R_INT64 .

    COMA            reduce using rule 49 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 49 (TIPO -> R_INT64 .)
    R_END           reduce using rule 49 (TIPO -> R_INT64 .)


state 149

    (50) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 50 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 50 (TIPO -> R_FLOAT64 .)
    R_END           reduce using rule 50 (TIPO -> R_FLOAT64 .)


state 150

    (51) TIPO -> R_STRING .

    COMA            reduce using rule 51 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 51 (TIPO -> R_STRING .)
    R_END           reduce using rule 51 (TIPO -> R_STRING .)


state 151

    (52) TIPO -> R_CHAR .

    COMA            reduce using rule 52 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 52 (TIPO -> R_CHAR .)
    R_END           reduce using rule 52 (TIPO -> R_CHAR .)


state 152

    (53) TIPO -> R_BOOL .

    COMA            reduce using rule 53 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 53 (TIPO -> R_BOOL .)
    R_END           reduce using rule 53 (TIPO -> R_BOOL .)


state 153

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 225


state 154

    (91) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 226


state 155

    (92) NATIVAS -> R_SSTRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 227


state 156

    (93) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 228


state 157

    (94) NATIVAS -> R_PUSH DIFERENTE PARIZQ . ID COMA E PARDER

    ID              shift and go to state 229


state 158

    (95) NATIVAS -> R_POP DIFERENTE PARIZQ . ID PARDER

    ID              shift and go to state 230


state 159

    (151) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (153) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (155) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (156) ELEMENTOS -> . ELEMENTO
    (157) ELEMENTO -> . ID
    (158) ELEMENTO -> . ID DOSPUNTOS DOSPUNTOS TIPO

    R_END           shift and go to state 232
    ID              shift and go to state 160

    ELEMENTOS                      shift and go to state 231
    ELEMENTO                       shift and go to state 163

state 160

    (157) ELEMENTO -> ID .
    (158) ELEMENTO -> ID . DOSPUNTOS DOSPUNTOS TIPO

    PTCOMA          reduce using rule 157 (ELEMENTO -> ID .)
    COMA            reduce using rule 157 (ELEMENTO -> ID .)
    R_END           reduce using rule 157 (ELEMENTO -> ID .)
    DOSPUNTOS       shift and go to state 233


state 161

    (152) STRUCTS -> R_STRUCT ID ELEMENTOS . PTCOMA
    (155) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    PTCOMA          shift and go to state 234
    COMA            shift and go to state 235


state 162

    (154) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 236


state 163

    (156) ELEMENTOS -> ELEMENTO .

    PTCOMA          reduce using rule 156 (ELEMENTOS -> ELEMENTO .)
    COMA            reduce using rule 156 (ELEMENTOS -> ELEMENTO .)
    R_END           reduce using rule 156 (ELEMENTOS -> ELEMENTO .)


state 164

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER RETURN R_END PTCOMA
    (35) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 237
    COMA            shift and go to state 170


state 165

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (97) RETURN -> . R_RETURN LISTA
    (98) RETURN -> . R_RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 239
    R_RETURN        shift and go to state 241
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 238
    RETURN                         shift and go to state 240
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 166

    (31) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (33) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 242
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 167

    (43) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS . DOSPUNTOS TIPO PTCOMA

    DOSPUNTOS       shift and go to state 243


state 168

    (32) ARREGLOS -> CORIZQ LISTAS . CORDER
    (34) ARREGLOS -> CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (35) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 244
    COMA            shift and go to state 170


state 169

    (54) LLAMADAS -> ID PARIZQ LISTAS PARIZQ . PTCOMA

    PTCOMA          shift and go to state 245


state 170

    (35) LISTAS -> LISTAS COMA . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 246
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 171

    (55) LLAMADAS -> ID PARIZQ PARDER PTCOMA .

    R_IF            reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FOR           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_WHILE         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_LOCAL         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINT         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PARSE         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TRUNC         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FLOAT         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_SSTRING       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PUSH          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_POP           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_STRUCT        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARIZQ          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    COMA            reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_END           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSE          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_BREAK         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARDER          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    CORDER          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PTCOMA          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_RETURN        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)


state 172

    (107) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 247


state 173

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 249
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 248
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 174

    (109) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_SSTRING       reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 175

    (110) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_SSTRING       reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)


state 176

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 250
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 177

    (114) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 251


state 178

    (85) LO -> LO AND LO .
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO

    R_END           reduce using rule 85 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 85 (LO -> LO AND LO .)
    AND             reduce using rule 85 (LO -> LO AND LO .)
    OR              reduce using rule 85 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 85 (LO -> LO AND LO .)
    R_IF            reduce using rule 85 (LO -> LO AND LO .)
    R_FOR           reduce using rule 85 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 85 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 85 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 85 (LO -> LO AND LO .)
    ID              reduce using rule 85 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 85 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 85 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 85 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 85 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 85 (LO -> LO AND LO .)
    R_SSTRING       reduce using rule 85 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 85 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 85 (LO -> LO AND LO .)
    R_POP           reduce using rule 85 (LO -> LO AND LO .)
    R_MUTABLE       reduce using rule 85 (LO -> LO AND LO .)
    R_STRUCT        reduce using rule 85 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 85 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 85 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 95 ]
  ! OR              [ shift and go to state 96 ]


state 179

    (86) LO -> LO OR LO .
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO

    R_END           reduce using rule 86 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 86 (LO -> LO OR LO .)
    OR              reduce using rule 86 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 86 (LO -> LO OR LO .)
    R_IF            reduce using rule 86 (LO -> LO OR LO .)
    R_FOR           reduce using rule 86 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 86 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 86 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 86 (LO -> LO OR LO .)
    ID              reduce using rule 86 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 86 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 86 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 86 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 86 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 86 (LO -> LO OR LO .)
    R_SSTRING       reduce using rule 86 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 86 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 86 (LO -> LO OR LO .)
    R_POP           reduce using rule 86 (LO -> LO OR LO .)
    R_MUTABLE       reduce using rule 86 (LO -> LO OR LO .)
    R_STRUCT        reduce using rule 86 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 86 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 86 (LO -> LO OR LO .)
    AND             shift and go to state 95

  ! AND             [ reduce using rule 86 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 96 ]


state 180

    (115) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (118) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO . ELSEIF
    (121) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (85) LO -> LO . AND LO
    (86) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 253
    R_ELSE          shift and go to state 254
    AND             shift and go to state 95
    OR              shift and go to state 96
    R_ELSEIF        shift and go to state 97
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 252
    ELSEIF                         shift and go to state 255
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 181

    (78) RE -> RE MENQUE RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 78 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 78 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 78 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 78 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 78 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 78 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 78 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 78 (RE -> RE MENQUE RE .)
    AND             reduce using rule 78 (RE -> RE MENQUE RE .)
    OR              reduce using rule 78 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 78 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 78 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 78 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 78 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 78 (RE -> RE MENQUE RE .)
    ID              reduce using rule 78 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 78 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_SSTRING       reduce using rule 78 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 78 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 78 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 78 (RE -> RE MENQUE RE .)
    R_MUTABLE       reduce using rule 78 (RE -> RE MENQUE RE .)
    R_STRUCT        reduce using rule 78 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 78 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 78 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]


state 182

    (79) RE -> RE MAYQUE RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 79 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 79 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 79 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 79 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 79 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 79 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 79 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 79 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_SSTRING       reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_MUTABLE       reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_STRUCT        reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 79 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 79 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]


state 183

    (80) RE -> RE IGUALQUE RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 80 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 80 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 80 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_SSTRING       reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_MUTABLE       reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_STRUCT        reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 80 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 80 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENORIGUAL      shift and go to state 103
    MAYORIGUAL      shift and go to state 104

  ! MENQUE          [ reduce using rule 80 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 80 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 80 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 80 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]


state 184

    (81) RE -> RE NIGUALQUE RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_SSTRING       reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_MUTABLE       reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_STRUCT        reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 81 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 99
    MAYQUE          shift and go to state 100
    MENORIGUAL      shift and go to state 103
    MAYORIGUAL      shift and go to state 104

  ! MENQUE          [ reduce using rule 81 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 81 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 81 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]


state 185

    (82) RE -> RE MENORIGUAL RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_SSTRING       reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_MUTABLE       reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_STRUCT        reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 82 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 82 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]


state 186

    (83) RE -> RE MAYORIGUAL RE .
    (78) RE -> RE . MENQUE RE
    (79) RE -> RE . MAYQUE RE
    (80) RE -> RE . IGUALQUE RE
    (81) RE -> RE . NIGUALQUE RE
    (82) RE -> RE . MENORIGUAL RE
    (83) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_SSTRING       reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_MUTABLE       reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_STRUCT        reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 83 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 83 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 99 ]
  ! MAYQUE          [ shift and go to state 100 ]
  ! IGUALQUE        [ shift and go to state 101 ]
  ! NIGUALQUE       [ shift and go to state 102 ]
  ! MENORIGUAL      [ shift and go to state 103 ]
  ! MAYORIGUAL      [ shift and go to state 104 ]


state 187

    (56) E -> E MAS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 56 (E -> E MAS E .)
    MENOS           reduce using rule 56 (E -> E MAS E .)
    MENQUE          reduce using rule 56 (E -> E MAS E .)
    MAYQUE          reduce using rule 56 (E -> E MAS E .)
    IGUALQUE        reduce using rule 56 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 56 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 56 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 56 (E -> E MAS E .)
    R_END           reduce using rule 56 (E -> E MAS E .)
    R_ELSE          reduce using rule 56 (E -> E MAS E .)
    AND             reduce using rule 56 (E -> E MAS E .)
    OR              reduce using rule 56 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 56 (E -> E MAS E .)
    R_IF            reduce using rule 56 (E -> E MAS E .)
    R_FOR           reduce using rule 56 (E -> E MAS E .)
    R_WHILE         reduce using rule 56 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 56 (E -> E MAS E .)
    R_LOCAL         reduce using rule 56 (E -> E MAS E .)
    ID              reduce using rule 56 (E -> E MAS E .)
    R_PRINT         reduce using rule 56 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 56 (E -> E MAS E .)
    R_PARSE         reduce using rule 56 (E -> E MAS E .)
    R_TRUNC         reduce using rule 56 (E -> E MAS E .)
    R_FLOAT         reduce using rule 56 (E -> E MAS E .)
    R_SSTRING       reduce using rule 56 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 56 (E -> E MAS E .)
    R_PUSH          reduce using rule 56 (E -> E MAS E .)
    R_POP           reduce using rule 56 (E -> E MAS E .)
    R_MUTABLE       reduce using rule 56 (E -> E MAS E .)
    R_STRUCT        reduce using rule 56 (E -> E MAS E .)
    R_BREAK         reduce using rule 56 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 56 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 56 (E -> E MAS E .)
    PARIZQ          reduce using rule 56 (E -> E MAS E .)
    COMA            reduce using rule 56 (E -> E MAS E .)
    PARDER          reduce using rule 56 (E -> E MAS E .)
    CORDER          reduce using rule 56 (E -> E MAS E .)
    PTCOMA          reduce using rule 56 (E -> E MAS E .)
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110

  ! POR             [ reduce using rule 56 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 56 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 56 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 56 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]


state 188

    (57) E -> E MENOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 57 (E -> E MENOS E .)
    MENOS           reduce using rule 57 (E -> E MENOS E .)
    MENQUE          reduce using rule 57 (E -> E MENOS E .)
    MAYQUE          reduce using rule 57 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 57 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 57 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 57 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 57 (E -> E MENOS E .)
    R_END           reduce using rule 57 (E -> E MENOS E .)
    R_ELSE          reduce using rule 57 (E -> E MENOS E .)
    AND             reduce using rule 57 (E -> E MENOS E .)
    OR              reduce using rule 57 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 57 (E -> E MENOS E .)
    R_IF            reduce using rule 57 (E -> E MENOS E .)
    R_FOR           reduce using rule 57 (E -> E MENOS E .)
    R_WHILE         reduce using rule 57 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 57 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 57 (E -> E MENOS E .)
    ID              reduce using rule 57 (E -> E MENOS E .)
    R_PRINT         reduce using rule 57 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 57 (E -> E MENOS E .)
    R_PARSE         reduce using rule 57 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 57 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 57 (E -> E MENOS E .)
    R_SSTRING       reduce using rule 57 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 57 (E -> E MENOS E .)
    R_PUSH          reduce using rule 57 (E -> E MENOS E .)
    R_POP           reduce using rule 57 (E -> E MENOS E .)
    R_MUTABLE       reduce using rule 57 (E -> E MENOS E .)
    R_STRUCT        reduce using rule 57 (E -> E MENOS E .)
    R_BREAK         reduce using rule 57 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 57 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 57 (E -> E MENOS E .)
    PARIZQ          reduce using rule 57 (E -> E MENOS E .)
    COMA            reduce using rule 57 (E -> E MENOS E .)
    PARDER          reduce using rule 57 (E -> E MENOS E .)
    CORDER          reduce using rule 57 (E -> E MENOS E .)
    PTCOMA          reduce using rule 57 (E -> E MENOS E .)
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110

  ! POR             [ reduce using rule 57 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 57 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 57 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 57 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]


state 189

    (58) E -> E POR E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 58 (E -> E POR E .)
    MENOS           reduce using rule 58 (E -> E POR E .)
    POR             reduce using rule 58 (E -> E POR E .)
    DIVIDIDO        reduce using rule 58 (E -> E POR E .)
    MODAL           reduce using rule 58 (E -> E POR E .)
    MENQUE          reduce using rule 58 (E -> E POR E .)
    MAYQUE          reduce using rule 58 (E -> E POR E .)
    IGUALQUE        reduce using rule 58 (E -> E POR E .)
    NIGUALQUE       reduce using rule 58 (E -> E POR E .)
    MENORIGUAL      reduce using rule 58 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 58 (E -> E POR E .)
    R_END           reduce using rule 58 (E -> E POR E .)
    R_ELSE          reduce using rule 58 (E -> E POR E .)
    AND             reduce using rule 58 (E -> E POR E .)
    OR              reduce using rule 58 (E -> E POR E .)
    R_ELSEIF        reduce using rule 58 (E -> E POR E .)
    R_IF            reduce using rule 58 (E -> E POR E .)
    R_FOR           reduce using rule 58 (E -> E POR E .)
    R_WHILE         reduce using rule 58 (E -> E POR E .)
    R_GLOBAL        reduce using rule 58 (E -> E POR E .)
    R_LOCAL         reduce using rule 58 (E -> E POR E .)
    ID              reduce using rule 58 (E -> E POR E .)
    R_PRINT         reduce using rule 58 (E -> E POR E .)
    R_PRINTLN       reduce using rule 58 (E -> E POR E .)
    R_PARSE         reduce using rule 58 (E -> E POR E .)
    R_TRUNC         reduce using rule 58 (E -> E POR E .)
    R_FLOAT         reduce using rule 58 (E -> E POR E .)
    R_SSTRING       reduce using rule 58 (E -> E POR E .)
    R_TYPEOF        reduce using rule 58 (E -> E POR E .)
    R_PUSH          reduce using rule 58 (E -> E POR E .)
    R_POP           reduce using rule 58 (E -> E POR E .)
    R_MUTABLE       reduce using rule 58 (E -> E POR E .)
    R_STRUCT        reduce using rule 58 (E -> E POR E .)
    R_BREAK         reduce using rule 58 (E -> E POR E .)
    R_CONTINUE      reduce using rule 58 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 58 (E -> E POR E .)
    PARIZQ          reduce using rule 58 (E -> E POR E .)
    COMA            reduce using rule 58 (E -> E POR E .)
    PARDER          reduce using rule 58 (E -> E POR E .)
    CORDER          reduce using rule 58 (E -> E POR E .)
    PTCOMA          reduce using rule 58 (E -> E POR E .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 58 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODAL           [ shift and go to state 109 ]


state 190

    (59) E -> E DIVIDIDO E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 59 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 59 (E -> E DIVIDIDO E .)
    POR             reduce using rule 59 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 59 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 59 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 59 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 59 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 59 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 59 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 59 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 59 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 59 (E -> E DIVIDIDO E .)
    AND             reduce using rule 59 (E -> E DIVIDIDO E .)
    OR              reduce using rule 59 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 59 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 59 (E -> E DIVIDIDO E .)
    ID              reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_SSTRING       reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_MUTABLE       reduce using rule 59 (E -> E DIVIDIDO E .)
    R_STRUCT        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 59 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 59 (E -> E DIVIDIDO E .)
    PARIZQ          reduce using rule 59 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 59 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 59 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 59 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 59 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 59 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODAL           [ shift and go to state 109 ]


state 191

    (60) E -> E MODAL E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 60 (E -> E MODAL E .)
    MENOS           reduce using rule 60 (E -> E MODAL E .)
    POR             reduce using rule 60 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 60 (E -> E MODAL E .)
    MODAL           reduce using rule 60 (E -> E MODAL E .)
    MENQUE          reduce using rule 60 (E -> E MODAL E .)
    MAYQUE          reduce using rule 60 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 60 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 60 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 60 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 60 (E -> E MODAL E .)
    R_END           reduce using rule 60 (E -> E MODAL E .)
    R_ELSE          reduce using rule 60 (E -> E MODAL E .)
    AND             reduce using rule 60 (E -> E MODAL E .)
    OR              reduce using rule 60 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 60 (E -> E MODAL E .)
    R_IF            reduce using rule 60 (E -> E MODAL E .)
    R_FOR           reduce using rule 60 (E -> E MODAL E .)
    R_WHILE         reduce using rule 60 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 60 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 60 (E -> E MODAL E .)
    ID              reduce using rule 60 (E -> E MODAL E .)
    R_PRINT         reduce using rule 60 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 60 (E -> E MODAL E .)
    R_PARSE         reduce using rule 60 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 60 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 60 (E -> E MODAL E .)
    R_SSTRING       reduce using rule 60 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 60 (E -> E MODAL E .)
    R_PUSH          reduce using rule 60 (E -> E MODAL E .)
    R_POP           reduce using rule 60 (E -> E MODAL E .)
    R_MUTABLE       reduce using rule 60 (E -> E MODAL E .)
    R_STRUCT        reduce using rule 60 (E -> E MODAL E .)
    R_BREAK         reduce using rule 60 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 60 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 60 (E -> E MODAL E .)
    PARIZQ          reduce using rule 60 (E -> E MODAL E .)
    COMA            reduce using rule 60 (E -> E MODAL E .)
    PARDER          reduce using rule 60 (E -> E MODAL E .)
    CORDER          reduce using rule 60 (E -> E MODAL E .)
    PTCOMA          reduce using rule 60 (E -> E MODAL E .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 60 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODAL           [ shift and go to state 109 ]


state 192

    (61) E -> E POTENCIA E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    MAS             reduce using rule 61 (E -> E POTENCIA E .)
    MENOS           reduce using rule 61 (E -> E POTENCIA E .)
    POR             reduce using rule 61 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 61 (E -> E POTENCIA E .)
    MODAL           reduce using rule 61 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 61 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 61 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 61 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 61 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 61 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 61 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 61 (E -> E POTENCIA E .)
    R_END           reduce using rule 61 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 61 (E -> E POTENCIA E .)
    AND             reduce using rule 61 (E -> E POTENCIA E .)
    OR              reduce using rule 61 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 61 (E -> E POTENCIA E .)
    R_IF            reduce using rule 61 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 61 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 61 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 61 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 61 (E -> E POTENCIA E .)
    ID              reduce using rule 61 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 61 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 61 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 61 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 61 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 61 (E -> E POTENCIA E .)
    R_SSTRING       reduce using rule 61 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 61 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 61 (E -> E POTENCIA E .)
    R_POP           reduce using rule 61 (E -> E POTENCIA E .)
    R_MUTABLE       reduce using rule 61 (E -> E POTENCIA E .)
    R_STRUCT        reduce using rule 61 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 61 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 61 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 61 (E -> E POTENCIA E .)
    PARIZQ          reduce using rule 61 (E -> E POTENCIA E .)
    COMA            reduce using rule 61 (E -> E POTENCIA E .)
    PARDER          reduce using rule 61 (E -> E POTENCIA E .)
    CORDER          reduce using rule 61 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 61 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 105 ]
  ! MENOS           [ shift and go to state 106 ]
  ! POR             [ shift and go to state 107 ]
  ! DIVIDIDO        [ shift and go to state 108 ]
  ! MODAL           [ shift and go to state 109 ]
  ! POTENCIA        [ shift and go to state 110 ]


state 193

    (63) E -> PARIZQ E PARDER .

    MAS             reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 63 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 63 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 63 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 63 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 63 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 63 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 63 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 63 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 63 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 63 (E -> PARIZQ E PARDER .)
    PARIZQ          reduce using rule 63 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 63 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 63 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 63 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 63 (E -> PARIZQ E PARDER .)


state 194

    (64) E -> R_LOG10 PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 256
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 195

    (65) E -> R_SIN PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 257
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 196

    (66) E -> R_COS PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 258
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 197

    (67) E -> R_TAN PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 259
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 198

    (68) E -> R_SQRT PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 260
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 199

    (69) E -> R_UPPERCASE PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 261
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 200

    (70) E -> R_LOWERCASE PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 262
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 201

    (71) E -> R_LOG PARIZQ E . COMA E PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    COMA            shift and go to state 263
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 202

    (150) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (77) E -> ID .
    (31) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    CORIZQ          shift and go to state 264
    DOSPUNTOS       reduce using rule 77 (E -> ID .)
    MAS             reduce using rule 77 (E -> ID .)
    MENOS           reduce using rule 77 (E -> ID .)
    POR             reduce using rule 77 (E -> ID .)
    DIVIDIDO        reduce using rule 77 (E -> ID .)
    MODAL           reduce using rule 77 (E -> ID .)
    POTENCIA        reduce using rule 77 (E -> ID .)
    R_END           reduce using rule 77 (E -> ID .)
    R_BREAK         reduce using rule 77 (E -> ID .)
    R_CONTINUE      reduce using rule 77 (E -> ID .)
    R_IF            reduce using rule 77 (E -> ID .)
    R_FOR           reduce using rule 77 (E -> ID .)
    R_WHILE         reduce using rule 77 (E -> ID .)
    R_GLOBAL        reduce using rule 77 (E -> ID .)
    R_LOCAL         reduce using rule 77 (E -> ID .)
    ID              reduce using rule 77 (E -> ID .)
    R_PRINT         reduce using rule 77 (E -> ID .)
    R_PRINTLN       reduce using rule 77 (E -> ID .)
    R_PARSE         reduce using rule 77 (E -> ID .)
    R_TRUNC         reduce using rule 77 (E -> ID .)
    R_FLOAT         reduce using rule 77 (E -> ID .)
    R_SSTRING       reduce using rule 77 (E -> ID .)
    R_TYPEOF        reduce using rule 77 (E -> ID .)
    R_PUSH          reduce using rule 77 (E -> ID .)
    R_POP           reduce using rule 77 (E -> ID .)
    R_MUTABLE       reduce using rule 77 (E -> ID .)
    R_STRUCT        reduce using rule 77 (E -> ID .)


state 203

    (145) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (123) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (124) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (125) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (126) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (129) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (130) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (131) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_BREAK
    (132) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_CONTINUE
    (133) INSTRUCCIONES_LOOP -> . IFS
    (134) INSTRUCCIONES_LOOP -> . FORS
    (135) INSTRUCCIONES_LOOP -> . WHILES
    (136) INSTRUCCIONES_LOOP -> . ASIGNACION
    (137) INSTRUCCIONES_LOOP -> . I
    (138) INSTRUCCIONES_LOOP -> . LLAMADAS
    (139) INSTRUCCIONES_LOOP -> . NATIVAS
    (140) INSTRUCCIONES_LOOP -> . STRUCTS
    (141) INSTRUCCIONES_LOOP -> . R_BREAK
    (142) INSTRUCCIONES_LOOP -> . R_CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 266
    R_BREAK         shift and go to state 132
    R_CONTINUE      shift and go to state 133
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES_LOOP             shift and go to state 265
    IFS                            shift and go to state 124
    FORS                           shift and go to state 125
    WHILES                         shift and go to state 126
    ASIGNACION                     shift and go to state 127
    I                              shift and go to state 128
    LLAMADAS                       shift and go to state 129
    NATIVAS                        shift and go to state 130
    STRUCTS                        shift and go to state 131

state 204

    (147) RANGO -> E . DOSPUNTOS E
    (148) RANGO -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    DOSPUNTOS       shift and go to state 267
    R_END           reduce using rule 148 (RANGO -> E .)
    R_BREAK         reduce using rule 148 (RANGO -> E .)
    R_CONTINUE      reduce using rule 148 (RANGO -> E .)
    R_IF            reduce using rule 148 (RANGO -> E .)
    R_FOR           reduce using rule 148 (RANGO -> E .)
    R_WHILE         reduce using rule 148 (RANGO -> E .)
    R_GLOBAL        reduce using rule 148 (RANGO -> E .)
    R_LOCAL         reduce using rule 148 (RANGO -> E .)
    ID              reduce using rule 148 (RANGO -> E .)
    R_PRINT         reduce using rule 148 (RANGO -> E .)
    R_PRINTLN       reduce using rule 148 (RANGO -> E .)
    R_PARSE         reduce using rule 148 (RANGO -> E .)
    R_TRUNC         reduce using rule 148 (RANGO -> E .)
    R_FLOAT         reduce using rule 148 (RANGO -> E .)
    R_SSTRING       reduce using rule 148 (RANGO -> E .)
    R_TYPEOF        reduce using rule 148 (RANGO -> E .)
    R_PUSH          reduce using rule 148 (RANGO -> E .)
    R_POP           reduce using rule 148 (RANGO -> E .)
    R_MUTABLE       reduce using rule 148 (RANGO -> E .)
    R_STRUCT        reduce using rule 148 (RANGO -> E .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 205

    (149) RANGO -> ARREGLOS .

    R_END           reduce using rule 149 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 149 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 149 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 149 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 149 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 149 (RANGO -> ARREGLOS .)
    ID              reduce using rule 149 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 149 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 149 (RANGO -> ARREGLOS .)
    R_SSTRING       reduce using rule 149 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 149 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 149 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 149 (RANGO -> ARREGLOS .)
    R_MUTABLE       reduce using rule 149 (RANGO -> ARREGLOS .)
    R_STRUCT        reduce using rule 149 (RANGO -> ARREGLOS .)


state 206

    (143) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 268


state 207

    (123) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .

    R_END           reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_BREAK         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_CONTINUE      reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_IF            reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FOR           reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_WHILE         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_GLOBAL        reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_LOCAL         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    ID              reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINT         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINTLN       reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PARSE         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TRUNC         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FLOAT         reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_SSTRING       reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TYPEOF        reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PUSH          reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_POP           reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_MUTABLE       reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_STRUCT        reduce using rule 123 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)


state 208

    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .

    R_END           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_BREAK         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_CONTINUE      reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_IF            reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FOR           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_WHILE         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_GLOBAL        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_LOCAL         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    ID              reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINT         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINTLN       reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PARSE         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TRUNC         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FLOAT         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_SSTRING       reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TYPEOF        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PUSH          reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_POP           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_MUTABLE       reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_STRUCT        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)


state 209

    (125) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .

    R_END           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_BREAK         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_CONTINUE      reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_IF            reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FOR           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_WHILE         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_GLOBAL        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_LOCAL         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    ID              reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINT         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINTLN       reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PARSE         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TRUNC         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FLOAT         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_SSTRING       reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TYPEOF        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PUSH          reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_POP           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_MUTABLE       reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_STRUCT        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)


state 210

    (126) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .

    R_END           reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_BREAK         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_CONTINUE      reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_IF            reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FOR           reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_WHILE         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_GLOBAL        reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_LOCAL         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    ID              reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINT         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINTLN       reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PARSE         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TRUNC         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FLOAT         reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_SSTRING       reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TYPEOF        reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PUSH          reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_POP           reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_MUTABLE       reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_STRUCT        reduce using rule 126 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)


state 211

    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .

    R_END           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_BREAK         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_CONTINUE      reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_IF            reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FOR           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_WHILE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_GLOBAL        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_LOCAL         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    ID              reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINTLN       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PARSE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TRUNC         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FLOAT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_SSTRING       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TYPEOF        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PUSH          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_POP           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_MUTABLE       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_STRUCT        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)


state 212

    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .

    R_END           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_BREAK         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_CONTINUE      reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_IF            reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FOR           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_WHILE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_GLOBAL        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_LOCAL         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    ID              reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINTLN       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PARSE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TRUNC         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FLOAT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_SSTRING       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TYPEOF        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PUSH          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_POP           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_MUTABLE       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_STRUCT        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)


state 213

    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .

    R_END           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_BREAK         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_CONTINUE      reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_IF            reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FOR           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_WHILE         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_GLOBAL        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_LOCAL         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    ID              reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINT         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINTLN       reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PARSE         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TRUNC         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FLOAT         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_SSTRING       reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TYPEOF        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PUSH          reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_POP           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_MUTABLE       reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_STRUCT        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)


state 214

    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .

    R_END           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_BREAK         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_CONTINUE      reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_IF            reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FOR           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_WHILE         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_GLOBAL        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_LOCAL         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    ID              reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINT         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINTLN       reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PARSE         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TRUNC         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FLOAT         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_SSTRING       reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TYPEOF        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PUSH          reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_POP           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_MUTABLE       reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_STRUCT        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)


state 215

    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .

    R_END           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_BREAK         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_CONTINUE      reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_IF            reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_FOR           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_WHILE         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_GLOBAL        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_LOCAL         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    ID              reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PRINT         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PRINTLN       reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PARSE         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_TRUNC         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_FLOAT         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_SSTRING       reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_TYPEOF        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PUSH          reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_POP           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_MUTABLE       reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_STRUCT        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)


state 216

    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .

    R_END           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_BREAK         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_CONTINUE      reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_IF            reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_FOR           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_WHILE         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_GLOBAL        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_LOCAL         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    ID              reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PRINT         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PRINTLN       reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PARSE         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_TRUNC         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_FLOAT         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_SSTRING       reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_TYPEOF        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PUSH          reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_POP           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_MUTABLE       reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_STRUCT        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)


state 217

    (144) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_SSTRING       reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 144 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 218

    (41) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 269
    PTCOMA          shift and go to state 270


state 219

    (42) ASIGNACION -> R_LOCAL ID IGUAL LISTA . DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_LOCAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 271
    PTCOMA          shift and go to state 272


state 220

    (21) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 273


state 221

    (23) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (25) IMPRESION -> . E
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . NATIVAS
    (28) IMPRESION -> . DOLAR PARIZQ E PARDER
    (29) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (30) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH

    DOLAR           shift and go to state 143
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 144
    CORIZQ          shift and go to state 86
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27

    IMPRESION                      shift and go to state 274
    E                              shift and go to state 140
    ARREGLOS                       shift and go to state 141
    NATIVAS                        shift and go to state 142

state 222

    (28) IMPRESION -> DOLAR PARIZQ . E PARDER
    (29) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (30) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 144
    CORIZQ          shift and go to state 86
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27

    E                              shift and go to state 275
    ARREGLOS                       shift and go to state 276
    NATIVAS                        shift and go to state 277

state 223

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 278


state 224

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 279
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 225

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 280
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 226

    (91) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    R_IF            reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_SSTRING       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FUNCTION      reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    $end            reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PTCOMA          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 227

    (92) NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .

    R_IF            reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_SSTRING       reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_FUNCTION      reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    $end            reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    PTCOMA          reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 92 (NATIVAS -> R_SSTRING PARIZQ LISTA PARDER .)


state 228

    (93) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    R_IF            reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_SSTRING       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FUNCTION      reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    $end            reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PTCOMA          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 229

    (94) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID . COMA E PARDER

    COMA            shift and go to state 281


state 230

    (95) NATIVAS -> R_POP DIFERENTE PARIZQ ID . PARDER

    PARDER          shift and go to state 282


state 231

    (151) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (155) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    R_END           shift and go to state 283
    COMA            shift and go to state 235


state 232

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 284


state 233

    (158) ELEMENTO -> ID DOSPUNTOS . DOSPUNTOS TIPO

    DOSPUNTOS       shift and go to state 285


state 234

    (152) STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .

    R_IF            reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FOR           reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_WHILE         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_GLOBAL        reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOCAL         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ID              reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINT         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINTLN       reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PARSE         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUNC         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FLOAT         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_SSTRING       reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TYPEOF        reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PUSH          reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_POP           reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_MUTABLE       reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRUCT        reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FUNCTION      reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    $end            reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_END           reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSE          reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSEIF        reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_BREAK         reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_CONTINUE      reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_RETURN        reduce using rule 152 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)


state 235

    (155) ELEMENTOS -> ELEMENTOS COMA . ELEMENTO
    (157) ELEMENTO -> . ID
    (158) ELEMENTO -> . ID DOSPUNTOS DOSPUNTOS TIPO

    ID              shift and go to state 160

    ELEMENTO                       shift and go to state 286

state 236

    (154) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_SSTRING       reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 154 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 237

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (97) RETURN -> . R_RETURN LISTA
    (98) RETURN -> . R_RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 288
    R_RETURN        shift and go to state 241
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 287
    RETURN                         shift and go to state 289
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 238

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (97) RETURN -> . R_RETURN LISTA
    (98) RETURN -> . R_RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 290
    R_RETURN        shift and go to state 241
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    RETURN                         shift and go to state 291
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 239

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 292


state 240

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 293


state 241

    (97) RETURN -> R_RETURN . LISTA
    (98) RETURN -> R_RETURN .
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    R_END           reduce using rule 98 (RETURN -> R_RETURN .)
    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTA                          shift and go to state 294
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 242

    (31) ARREGLOS -> ID CORIZQ LISTAS . CORDER
    (33) ARREGLOS -> ID CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (35) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 295
    COMA            shift and go to state 170


state 243

    (43) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS . TIPO PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 296

state 244

    (32) ARREGLOS -> CORIZQ LISTAS CORDER .
    (34) ARREGLOS -> CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_SSTRING       reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 32 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 297


state 245

    (54) LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .

    R_IF            reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FOR           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_WHILE         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_GLOBAL        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_LOCAL         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    ID              reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINT         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINTLN       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PARSE         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TRUNC         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FLOAT         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_SSTRING       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TYPEOF        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PUSH          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_POP           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_MUTABLE       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_STRUCT        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FUNCTION      reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    $end            reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    DOSPUNTOS       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARIZQ          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    COMA            reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_END           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSE          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSEIF        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_BREAK         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_CONTINUE      reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARDER          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    CORDER          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PTCOMA          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_RETURN        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)


state 246

    (35) LISTAS -> LISTAS COMA LISTA .

    PARIZQ          reduce using rule 35 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 35 (LISTAS -> LISTAS COMA LISTA .)
    PARDER          reduce using rule 35 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 35 (LISTAS -> LISTAS COMA LISTA .)


state 247

    (107) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 248

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 298
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 249

    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 299


state 250

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 300


state 251

    (114) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_SSTRING       reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 252

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 301
    R_ELSE          shift and go to state 302
    R_ELSEIF        shift and go to state 97
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    ELSEIF                         shift and go to state 303
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 253

    (118) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 304


state 254

    (119) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 306
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 305
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 255

    (120) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_SSTRING       reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 256

    (64) E -> R_LOG10 PARIZQ E PARDER .

    MAS             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PARIZQ          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)


state 257

    (65) E -> R_SIN PARIZQ E PARDER .

    MAS             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)


state 258

    (66) E -> R_COS PARIZQ E PARDER .

    MAS             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PARIZQ          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)


state 259

    (67) E -> R_TAN PARIZQ E PARDER .

    MAS             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)


state 260

    (68) E -> R_SQRT PARIZQ E PARDER .

    MAS             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PARIZQ          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)


state 261

    (69) E -> R_UPPERCASE PARIZQ E PARDER .

    MAS             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 262

    (70) E -> R_LOWERCASE PARIZQ E PARDER .

    MAS             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_SSTRING       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 263

    (71) E -> R_LOG PARIZQ E COMA . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 307

state 264

    (150) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (31) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (33) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    E                              shift and go to state 308
    LISTAS                         shift and go to state 242
    LISTA                          shift and go to state 89
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 265

    (145) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (123) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (125) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (126) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_BREAK
    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 309
    R_BREAK         shift and go to state 215
    R_CONTINUE      shift and go to state 216
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 207
    FORS                           shift and go to state 208
    WHILES                         shift and go to state 209
    ASIGNACION                     shift and go to state 210
    I                              shift and go to state 211
    LLAMADAS                       shift and go to state 212
    NATIVAS                        shift and go to state 213
    STRUCTS                        shift and go to state 214

state 266

    (146) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 310


state 267

    (147) RANGO -> E DOSPUNTOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 311

state 268

    (143) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SSTRING       reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 143 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 269

    (41) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS . DOSPUNTOS TIPO PTCOMA

    DOSPUNTOS       shift and go to state 312


state 270

    (44) ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_SSTRING       reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 44 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)


state 271

    (42) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS . DOSPUNTOS TIPO PTCOMA

    DOSPUNTOS       shift and go to state 313


state 272

    (45) ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_SSTRING       reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 45 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)


state 273

    (21) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SSTRING       reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 274

    (23) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 23 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 23 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 275

    (28) IMPRESION -> DOLAR PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 314
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 276

    (29) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER

    PARDER          shift and go to state 315


state 277

    (30) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER

    PARDER          shift and go to state 316


state 278

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SSTRING       reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 279

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 317


state 280

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 318


state 281

    (94) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 319

state 282

    (95) NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .

    R_IF            reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FOR           reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_WHILE         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_GLOBAL        reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOCAL         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ID              reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINT         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINTLN       reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PARSE         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUNC         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FLOAT         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_SSTRING       reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TYPEOF        reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PUSH          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_POP           reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_MUTABLE       reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRUCT        reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FUNCTION      reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    $end            reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARIZQ          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    COMA            reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_END           reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSE          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSEIF        reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_BREAK         reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_CONTINUE      reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARDER          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CORDER          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PTCOMA          reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_RETURN        reduce using rule 95 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)


state 283

    (151) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 320


state 284

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_SSTRING       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 285

    (158) ELEMENTO -> ID DOSPUNTOS DOSPUNTOS . TIPO
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 321

state 286

    (155) ELEMENTOS -> ELEMENTOS COMA ELEMENTO .

    PTCOMA          reduce using rule 155 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    COMA            reduce using rule 155 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    R_END           reduce using rule 155 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)


state 287

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . R_END PTCOMA
    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (97) RETURN -> . R_RETURN LISTA
    (98) RETURN -> . R_RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 322
    R_RETURN        shift and go to state 241
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    RETURN                         shift and go to state 323
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 288

    (101) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 324


state 289

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 325


state 290

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 326


state 291

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 327


state 292

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_SSTRING       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 293

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 328


state 294

    (97) RETURN -> R_RETURN LISTA .

    R_END           reduce using rule 97 (RETURN -> R_RETURN LISTA .)


state 295

    (31) ARREGLOS -> ID CORIZQ LISTAS CORDER .
    (33) ARREGLOS -> ID CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    ID              reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_SSTRING       reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 31 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 329


state 296

    (43) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 330


state 297

    (34) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 331
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 298

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 332


state 299

    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SSTRING       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 300

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 301

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 333


state 302

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS
    (20) INSTRUCCIONES -> . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 335
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 334
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 303

    (117) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_SSTRING       reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 304

    (118) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_SSTRING       reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 305

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 336
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 306

    (122) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 337


state 307

    (71) E -> R_LOG PARIZQ E COMA E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 338
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 308

    (150) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E
    (37) LISTA -> E .

    DOSPUNTOS       shift and go to state 339
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110
    CORDER          reduce using rule 37 (LISTA -> E .)
    COMA            reduce using rule 37 (LISTA -> E .)


state 309

    (145) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 340


state 310

    (146) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_SSTRING       reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 146 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 311

    (147) RANGO -> E DOSPUNTOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    R_END           reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_BREAK         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_CONTINUE      reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_IF            reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_FOR           reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_WHILE         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_GLOBAL        reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_LOCAL         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    ID              reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_PRINT         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_PRINTLN       reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_PARSE         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_TRUNC         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_FLOAT         reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_SSTRING       reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_TYPEOF        reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_PUSH          reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_POP           reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_MUTABLE       reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    R_STRUCT        reduce using rule 147 (RANGO -> E DOSPUNTOS E .)
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 312

    (41) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS . TIPO PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 341

state 313

    (42) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS . TIPO PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 147
    R_INT64         shift and go to state 148
    R_FLOAT64       shift and go to state 149
    R_STRING        shift and go to state 150
    R_CHAR          shift and go to state 151
    R_BOOL          shift and go to state 152

    TIPO                           shift and go to state 342

state 314

    (28) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 28 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 28 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 315

    (29) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 29 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 29 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 316

    (30) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 30 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 30 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 317

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    R_IF            reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_SSTRING       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FUNCTION      reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    $end            reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PTCOMA          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 318

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    R_IF            reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_SSTRING       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FUNCTION      reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    $end            reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PTCOMA          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 319

    (94) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 343
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 320

    (151) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_IF            reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SSTRING       reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FUNCTION      reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_END           reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSE          reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSEIF        reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 151 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 321

    (158) ELEMENTO -> ID DOSPUNTOS DOSPUNTOS TIPO .

    PTCOMA          reduce using rule 158 (ELEMENTO -> ID DOSPUNTOS DOSPUNTOS TIPO .)
    COMA            reduce using rule 158 (ELEMENTO -> ID DOSPUNTOS DOSPUNTOS TIPO .)
    R_END           reduce using rule 158 (ELEMENTO -> ID DOSPUNTOS DOSPUNTOS TIPO .)


state 322

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 344


state 323

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 345


state 324

    (101) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    ID              reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_SSTRING       reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    $end            reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)


state 325

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 346


state 326

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 327

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 347


state 328

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_SSTRING       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)


state 329

    (33) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (35) LISTAS -> . LISTAS COMA LISTA
    (36) LISTAS -> . LISTA
    (37) LISTA -> . E
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (31) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (32) ARREGLOS -> . CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 80
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 86

    LISTAS                         shift and go to state 348
    LISTA                          shift and go to state 89
    E                              shift and go to state 82
    NATIVAS                        shift and go to state 83
    ARREGLOS                       shift and go to state 84
    LLAMADAS                       shift and go to state 85

state 330

    (43) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_SSTRING       reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 43 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)


state 331

    (34) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (35) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 349
    COMA            shift and go to state 170


state 332

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 333

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 334

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (145) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (143) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (144) WHILES -> . R_WHILE LO R_END PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (55) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_SSTRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (95) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (96) NATIVAS -> . ID PUNTO R_LENGTH
    (151) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (152) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 350
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_SSTRING       shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 335

    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 351


state 336

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 352


state 337

    (122) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_SSTRING       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 338

    (71) E -> R_LOG PARIZQ E COMA E PARDER .

    MAS             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_SSTRING       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_MUTABLE       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRUCT        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARIZQ          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 339

    (150) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . CADENA
    (77) E -> . ID

    MENOS           shift and go to state 48
    PARIZQ          shift and go to state 49
    R_LOG10         shift and go to state 50
    R_SIN           shift and go to state 51
    R_COS           shift and go to state 52
    R_TAN           shift and go to state 53
    R_SQRT          shift and go to state 54
    R_UPPERCASE     shift and go to state 55
    R_LOWERCASE     shift and go to state 56
    R_LOG           shift and go to state 57
    DECIMAL         shift and go to state 58
    ENTERO          shift and go to state 59
    R_TRUE          shift and go to state 60
    R_FALSE         shift and go to state 61
    CADENA          shift and go to state 62
    ID              shift and go to state 63

    E                              shift and go to state 353

state 340

    (145) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SSTRING       reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 145 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 341

    (41) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 354


state 342

    (42) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 355


state 343

    (94) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .

    R_IF            reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FOR           reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_WHILE         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_GLOBAL        reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOCAL         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ID              reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINT         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINTLN       reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PARSE         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUNC         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FLOAT         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_SSTRING       reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TYPEOF        reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PUSH          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_POP           reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_MUTABLE       reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRUCT        reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FUNCTION      reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    $end            reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTOS       reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARIZQ          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    COMA            reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_END           reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSE          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSEIF        reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_BREAK         reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_CONTINUE      reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARDER          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CORDER          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PTCOMA          reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_RETURN        reduce using rule 94 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)


state 344

    (99) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 99 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)


state 345

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 356


state 346

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_SSTRING       reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)


state 347

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_SSTRING       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 348

    (33) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (35) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 357
    COMA            shift and go to state 170


state 349

    (34) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_SSTRING       reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 34 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 350

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 358


state 351

    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SSTRING       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 352

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 353

    (150) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    CORDER          shift and go to state 359
    MAS             shift and go to state 105
    MENOS           shift and go to state 106
    POR             shift and go to state 107
    DIVIDIDO        shift and go to state 108
    MODAL           shift and go to state 109
    POTENCIA        shift and go to state 110


state 354

    (41) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_SSTRING       reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)


state 355

    (42) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_SSTRING       reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 42 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS DOSPUNTOS TIPO PTCOMA .)


state 356

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_SSTRING       reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 357

    (33) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_SSTRING       reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 33 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 358

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SSTRING       reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 359

    (150) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_SSTRING       reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_MUTABLE       reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRUCT        reduce using rule 150 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 3 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_SSTRING in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 3 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 3 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 31 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 31 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 31 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 31 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 31 resolved as shift
WARNING: shift/reduce conflict for R_SSTRING in state 31 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 31 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 31 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 31 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 80 resolved as shift
