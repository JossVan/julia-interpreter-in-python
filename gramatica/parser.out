Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO INIT
Rule 2     INICIO -> INIT
Rule 3     INIT -> FUNCIONES
Rule 4     INIT -> INSTRUCCIONES
Rule 5     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 6     INSTRUCCIONES -> INSTRUCCION
Rule 7     INSTRUCCION -> IFS
Rule 8     INSTRUCCION -> FORS
Rule 9     INSTRUCCION -> WHILES
Rule 10    INSTRUCCION -> ASIGNACION
Rule 11    INSTRUCCION -> I
Rule 12    INSTRUCCION -> LLAMADAS PTCOMA
Rule 13    INSTRUCCION -> NATIVAS PTCOMA
Rule 14    INSTRUCCION -> STRUCTS
Rule 15    INSTRUCCION -> BREAK
Rule 16    INSTRUCCION -> CONTINUE
Rule 17    INSTRUCCION -> RETURN
Rule 18    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 19    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 20    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 21    IMPRESIONES -> IMPRESION
Rule 22    IMPRESION -> ARREGLOS
Rule 23    IMPRESION -> LO
Rule 24    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 25    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 26    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 27    ARREGLOS -> ARREGLOS COMA ARREGLO
Rule 28    ARREGLOS -> ARREGLO
Rule 29    ARREGLO -> CORIZQ LISTAS CORDER
Rule 30    LISTAS -> LISTAS COMA LISTA
Rule 31    LISTAS -> LISTA
Rule 32    LISTA -> ARREGLOS
Rule 33    LISTA -> LO
Rule 34    ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 35    ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 36    ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 37    ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA
Rule 38    ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA
Rule 39    ASIGNACION -> E IGUAL LISTA PTCOMA
Rule 40    ASIGNACION -> R_GLOBAL E PTCOMA
Rule 41    ASIGNACION -> R_LOCAL E PTCOMA
Rule 42    BREAK -> R_BREAK PTCOMA
Rule 43    TIPO -> R_NOTHING
Rule 44    TIPO -> R_INT64
Rule 45    TIPO -> R_FLOAT64
Rule 46    TIPO -> R_STRING
Rule 47    TIPO -> R_CHAR
Rule 48    TIPO -> R_BOOL
Rule 49    LLAMADAS -> ID PARIZQ LISTAS PARDER
Rule 50    LLAMADAS -> ID PARIZQ PARDER
Rule 51    E -> E MAS E
Rule 52    E -> E MENOS E
Rule 53    E -> E POR E
Rule 54    E -> E DIVIDIDO E
Rule 55    E -> E MODAL E
Rule 56    E -> E POTENCIA E
Rule 57    E -> MENOS E
Rule 58    E -> PARIZQ E PARDER
Rule 59    E -> R_LOG10 PARIZQ E PARDER
Rule 60    E -> R_SIN PARIZQ E PARDER
Rule 61    E -> R_COS PARIZQ E PARDER
Rule 62    E -> R_TAN PARIZQ E PARDER
Rule 63    E -> R_SQRT PARIZQ E PARDER
Rule 64    E -> R_UPPERCASE PARIZQ E PARDER
Rule 65    E -> R_LOWERCASE PARIZQ E PARDER
Rule 66    E -> R_LOG PARIZQ E COMA E PARDER
Rule 67    E -> DECIMAL
Rule 68    E -> ENTERO
Rule 69    E -> R_TRUE
Rule 70    E -> R_FALSE
Rule 71    E -> CADENA
Rule 72    E -> ID
Rule 73    E -> ID ARRAYS
Rule 74    ARRAYS -> ARRAYS ARRAY
Rule 75    ARRAYS -> ARRAY
Rule 76    ARRAY -> CORIZQ E CORDER
Rule 77    E -> NATIVAS
Rule 78    E -> LLAMADAS
Rule 79    RE -> RE MENQUE RE
Rule 80    RE -> RE MAYQUE RE
Rule 81    RE -> RE IGUALQUE RE
Rule 82    RE -> RE NIGUALQUE RE
Rule 83    RE -> RE MENORIGUAL RE
Rule 84    RE -> RE MAYORIGUAL RE
Rule 85    RE -> PARIZQ RE PARDER
Rule 86    RE -> E
Rule 87    LO -> LO AND LO
Rule 88    LO -> LO OR LO
Rule 89    LO -> DIFERENTE LO
Rule 90    LO -> PARIZQ LO PARDER
Rule 91    LO -> RE
Rule 92    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 93    NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 94    NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 95    NATIVAS -> R_STRING PARIZQ LISTA PARDER
Rule 96    NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 97    NATIVAS -> R_TRUNC PARIZQ LISTA PARDER
Rule 98    NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
Rule 99    NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER
Rule 100   NATIVAS -> R_LENGTH PARIZQ E PARDER
Rule 101   RETURN -> R_RETURN LISTA PTCOMA
Rule 102   RETURN -> R_RETURN PTCOMA
Rule 103   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
Rule 104   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
Rule 105   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 106   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 107   PARAMETROS -> PARAMETROS COMA PARAMETRO
Rule 108   PARAMETROS -> PARAMETRO
Rule 109   PARAMETRO -> ID
Rule 110   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 111   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 112   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 113   IFS -> R_IF LO R_END PTCOMA
Rule 114   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 115   IFS -> R_IF LO ELSEIF
Rule 116   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 117   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 118   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 119   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 120   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 121   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 122   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 123   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 124   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 125   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 126   CONTINUE -> R_CONTINUE PTCOMA
Rule 127   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP
Rule 128   INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP
Rule 129   INSTRUCCION_LOOP -> IFS
Rule 130   INSTRUCCION_LOOP -> FORS
Rule 131   INSTRUCCION_LOOP -> WHILES
Rule 132   INSTRUCCION_LOOP -> ASIGNACION
Rule 133   INSTRUCCION_LOOP -> I
Rule 134   INSTRUCCION_LOOP -> LLAMADAS PTCOMA
Rule 135   INSTRUCCION_LOOP -> NATIVAS
Rule 136   INSTRUCCION_LOOP -> STRUCTS
Rule 137   INSTRUCCION_LOOP -> BREAK
Rule 138   INSTRUCCION_LOOP -> CONTINUE
Rule 139   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 140   WHILES -> R_WHILE LO R_END PTCOMA
Rule 141   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 142   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 143   RANGO -> E DOSPUNTITOS E
Rule 144   RANGO -> E
Rule 145   RANGO -> ARREGLOS
Rule 146   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 147   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 148   STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA
Rule 149   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 150   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 151   ELEMENTOS -> ELEMENTOS COMA ELEMENTO
Rule 152   ELEMENTOS -> ELEMENTO
Rule 153   ELEMENTO -> ID
Rule 154   ELEMENTO -> ID DOSPUNTOS TIPO

Terminals, with rules where they appear

AND                  : 87
CADENA               : 71
COMA                 : 20 27 30 66 92 93 98 107 151
CORDER               : 29 76 146
CORIZQ               : 29 76 146
DECIMAL              : 67
DIFERENTE            : 89 98 99
DIVIDIDO             : 54
DOLAR                : 24 25 26
DOSPUNTITOS          : 143
DOSPUNTOS            : 34 35 36 146 154
ENTERO               : 68
ID                   : 49 50 72 73 98 99 103 104 105 106 109 141 142 146 147 148 149 150 153 154
IGUAL                : 34 35 36 37 38 39
IGUALQUE             : 81
MAS                  : 51
MAYORIGUAL           : 84
MAYQUE               : 80
MENORIGUAL           : 83
MENOS                : 52 57
MENQUE               : 79
MODAL                : 55
NIGUALQUE            : 82
OR                   : 88
PARDER               : 18 19 24 25 26 49 50 58 59 60 61 62 63 64 65 66 85 90 92 93 94 95 96 97 98 99 100 103 104 105 106
PARIZQ               : 18 19 24 25 26 49 50 58 59 60 61 62 63 64 65 66 85 90 92 93 94 95 96 97 98 99 100 103 104 105 106
POR                  : 53
POTENCIA             : 56
PTCOMA               : 12 13 18 19 34 35 36 37 38 39 40 41 42 101 102 103 104 105 106 110 111 113 114 116 117 118 119 121 122 124 125 126 134 139 140 141 142 147 148 149 150
PUNTO                : 
R_BOOL               : 48
R_BREAK              : 42
R_CHAR               : 47
R_CONTINUE           : 126
R_COS                : 61
R_ELSE               : 111 114 116 117 119 122 124 125
R_ELSEIF             : 118 119 120 121 122 123 124 125
R_END                : 103 104 105 106 110 111 113 114 116 117 118 119 121 122 124 125 139 140 141 142 147 149 150
R_FALSE              : 70
R_FLOAT              : 94
R_FLOAT64            : 45
R_FOR                : 141 142
R_FUNCTION           : 103 104 105 106
R_GLOBAL             : 34 37 40
R_IF                 : 110 111 112 113 114 115 116 117
R_IN                 : 141 142
R_INT64              : 44
R_LENGTH             : 100
R_LOCAL              : 35 38 41
R_LOG                : 66
R_LOG10              : 59
R_LOWERCASE          : 65
R_MUTABLE            : 147 149
R_NOTHING            : 43
R_PARSE              : 92
R_POP                : 99
R_PRINT              : 18
R_PRINTLN            : 19
R_PUSH               : 98
R_RETURN             : 101 102
R_SIN                : 60
R_SQRT               : 63
R_STRING             : 46 95
R_STRUCT             : 147 148 149 150
R_TAN                : 62
R_TRUE               : 69
R_TRUNC              : 93 97
R_TYPEOF             : 96
R_UPPERCASE          : 64
R_WHILE              : 139 140
error                : 

Nonterminals, with rules where they appear

ARRAY                : 74 75
ARRAYS               : 73 74
ARREGLO              : 27 28
ARREGLOS             : 22 25 27 32 145
ASIGNACION           : 10 132
BREAK                : 15 137
CONTINUE             : 16 138
E                    : 24 34 35 36 37 38 39 40 41 51 51 52 52 53 53 54 54 55 55 56 56 57 58 59 60 61 62 63 64 65 66 66 76 86 98 100 143 143 144 146 146
ELEMENTO             : 151 152
ELEMENTOS            : 147 148 151
ELSEIF               : 112 115 120 123
FORS                 : 8 130
FUNCIONES            : 3
I                    : 11 133
IFS                  : 7 129
IMPRESION            : 20 21
IMPRESIONES          : 18 19 20
INICIO               : 1 0
INIT                 : 1 2
INSTRUCCION          : 5 6
INSTRUCCIONES        : 4 5 103 105 110 111 111 112 114 116 118 119 119 120 122 124
INSTRUCCIONES_LOOP   : 127 139 141
INSTRUCCION_LOOP     : 127 128
LISTA                : 30 31 34 35 36 37 38 39 92 93 94 95 96 97 101
LISTAS               : 29 30 49
LLAMADAS             : 12 78 134
LO                   : 23 33 87 87 88 88 89 90 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 139 140
NATIVAS              : 13 26 77 135
PARAMETRO            : 107 108
PARAMETROS           : 103 104 107
RANGO                : 141 142
RE                   : 79 79 80 80 81 81 82 82 83 83 84 84 85 91
RETURN               : 17
STRUCTS              : 14 136
TIPO                 : 34 35 36 92 93 154
WHILES               : 9 131

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO INIT
    (2) INICIO -> . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_FUNCTION      shift and go to state 5
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INICIO                         shift and go to state 1
    INIT                           shift and go to state 2
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_FUNCTION      shift and go to state 5
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INIT                           shift and go to state 55
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 2

    (2) INICIO -> INIT .

    R_FUNCTION      reduce using rule 2 (INICIO -> INIT .)
    R_IF            reduce using rule 2 (INICIO -> INIT .)
    R_FOR           reduce using rule 2 (INICIO -> INIT .)
    R_WHILE         reduce using rule 2 (INICIO -> INIT .)
    R_GLOBAL        reduce using rule 2 (INICIO -> INIT .)
    R_LOCAL         reduce using rule 2 (INICIO -> INIT .)
    R_PRINT         reduce using rule 2 (INICIO -> INIT .)
    R_PRINTLN       reduce using rule 2 (INICIO -> INIT .)
    ID              reduce using rule 2 (INICIO -> INIT .)
    R_PARSE         reduce using rule 2 (INICIO -> INIT .)
    R_TRUNC         reduce using rule 2 (INICIO -> INIT .)
    R_FLOAT         reduce using rule 2 (INICIO -> INIT .)
    R_STRING        reduce using rule 2 (INICIO -> INIT .)
    R_TYPEOF        reduce using rule 2 (INICIO -> INIT .)
    R_PUSH          reduce using rule 2 (INICIO -> INIT .)
    R_POP           reduce using rule 2 (INICIO -> INIT .)
    R_LENGTH        reduce using rule 2 (INICIO -> INIT .)
    R_MUTABLE       reduce using rule 2 (INICIO -> INIT .)
    R_STRUCT        reduce using rule 2 (INICIO -> INIT .)
    R_BREAK         reduce using rule 2 (INICIO -> INIT .)
    R_CONTINUE      reduce using rule 2 (INICIO -> INIT .)
    R_RETURN        reduce using rule 2 (INICIO -> INIT .)
    MENOS           reduce using rule 2 (INICIO -> INIT .)
    PARIZQ          reduce using rule 2 (INICIO -> INIT .)
    R_LOG10         reduce using rule 2 (INICIO -> INIT .)
    R_SIN           reduce using rule 2 (INICIO -> INIT .)
    R_COS           reduce using rule 2 (INICIO -> INIT .)
    R_TAN           reduce using rule 2 (INICIO -> INIT .)
    R_SQRT          reduce using rule 2 (INICIO -> INIT .)
    R_UPPERCASE     reduce using rule 2 (INICIO -> INIT .)
    R_LOWERCASE     reduce using rule 2 (INICIO -> INIT .)
    R_LOG           reduce using rule 2 (INICIO -> INIT .)
    DECIMAL         reduce using rule 2 (INICIO -> INIT .)
    ENTERO          reduce using rule 2 (INICIO -> INIT .)
    R_TRUE          reduce using rule 2 (INICIO -> INIT .)
    R_FALSE         reduce using rule 2 (INICIO -> INIT .)
    CADENA          reduce using rule 2 (INICIO -> INIT .)
    $end            reduce using rule 2 (INICIO -> INIT .)


state 3

    (3) INIT -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INIT -> FUNCIONES .)
    R_IF            reduce using rule 3 (INIT -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INIT -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INIT -> FUNCIONES .)
    ID              reduce using rule 3 (INIT -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INIT -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRING        reduce using rule 3 (INIT -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INIT -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INIT -> FUNCIONES .)
    R_POP           reduce using rule 3 (INIT -> FUNCIONES .)
    R_LENGTH        reduce using rule 3 (INIT -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INIT -> FUNCIONES .)
    R_BREAK         reduce using rule 3 (INIT -> FUNCIONES .)
    R_CONTINUE      reduce using rule 3 (INIT -> FUNCIONES .)
    R_RETURN        reduce using rule 3 (INIT -> FUNCIONES .)
    MENOS           reduce using rule 3 (INIT -> FUNCIONES .)
    PARIZQ          reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOG10         reduce using rule 3 (INIT -> FUNCIONES .)
    R_SIN           reduce using rule 3 (INIT -> FUNCIONES .)
    R_COS           reduce using rule 3 (INIT -> FUNCIONES .)
    R_TAN           reduce using rule 3 (INIT -> FUNCIONES .)
    R_SQRT          reduce using rule 3 (INIT -> FUNCIONES .)
    R_UPPERCASE     reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOWERCASE     reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOG           reduce using rule 3 (INIT -> FUNCIONES .)
    DECIMAL         reduce using rule 3 (INIT -> FUNCIONES .)
    ENTERO          reduce using rule 3 (INIT -> FUNCIONES .)
    R_TRUE          reduce using rule 3 (INIT -> FUNCIONES .)
    R_FALSE         reduce using rule 3 (INIT -> FUNCIONES .)
    CADENA          reduce using rule 3 (INIT -> FUNCIONES .)
    $end            reduce using rule 3 (INIT -> FUNCIONES .)


state 4

    (4) INIT -> INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_LENGTH resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
  ! shift/reduce conflict for R_BREAK resolved as shift
  ! shift/reduce conflict for R_CONTINUE resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for R_LOG10 resolved as shift
  ! shift/reduce conflict for R_SIN resolved as shift
  ! shift/reduce conflict for R_COS resolved as shift
  ! shift/reduce conflict for R_TAN resolved as shift
  ! shift/reduce conflict for R_SQRT resolved as shift
  ! shift/reduce conflict for R_UPPERCASE resolved as shift
  ! shift/reduce conflict for R_LOWERCASE resolved as shift
  ! shift/reduce conflict for R_LOG resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for R_TRUE resolved as shift
  ! shift/reduce conflict for R_FALSE resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    R_FUNCTION      reduce using rule 4 (INIT -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INIT -> INSTRUCCIONES .)
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

  ! R_IF            [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LENGTH        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_BREAK         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_CONTINUE      [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_RETURN        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! MENOS           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! PARIZQ          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOG10         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_SIN           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_COS           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TAN           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_SQRT          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_UPPERCASE     [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOWERCASE     [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOG           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! DECIMAL         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! ENTERO          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TRUE          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FALSE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! CADENA          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 5

    (103) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA

    ID              shift and go to state 57


state 6

    (49) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (50) LLAMADAS -> ID . PARIZQ PARDER
    (72) E -> ID .
    (73) E -> ID . ARRAYS
    (74) ARRAYS -> . ARRAYS ARRAY
    (75) ARRAYS -> . ARRAY
    (76) ARRAY -> . CORIZQ E CORDER

    PARIZQ          shift and go to state 58
    IGUAL           reduce using rule 72 (E -> ID .)
    MAS             reduce using rule 72 (E -> ID .)
    MENOS           reduce using rule 72 (E -> ID .)
    POR             reduce using rule 72 (E -> ID .)
    DIVIDIDO        reduce using rule 72 (E -> ID .)
    MODAL           reduce using rule 72 (E -> ID .)
    POTENCIA        reduce using rule 72 (E -> ID .)
    CORIZQ          shift and go to state 61

    ARRAYS                         shift and go to state 59
    ARRAY                          shift and go to state 60

state 7

    (58) E -> PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 62
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 8

    (6) INSTRUCCIONES -> INSTRUCCION .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRING        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LENGTH        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_BREAK         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_CONTINUE      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    MENOS           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    PARIZQ          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOG10         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_SIN           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_COS           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TAN           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_SQRT          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_UPPERCASE     reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOWERCASE     reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOG           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    DECIMAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    ENTERO          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TRUE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FALSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    CADENA          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)


state 9

    (7) INSTRUCCION -> IFS .

    R_IF            reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FOR           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_WHILE         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LOCAL         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PRINT         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCION -> IFS .)
    ID              reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PARSE         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TRUNC         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FLOAT         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_STRING        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PUSH          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_POP           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LENGTH        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCION -> IFS .)
    R_STRUCT        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_BREAK         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_CONTINUE      reduce using rule 7 (INSTRUCCION -> IFS .)
    R_RETURN        reduce using rule 7 (INSTRUCCION -> IFS .)
    MENOS           reduce using rule 7 (INSTRUCCION -> IFS .)
    PARIZQ          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LOG10         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_SIN           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_COS           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TAN           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_SQRT          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_UPPERCASE     reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LOWERCASE     reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LOG           reduce using rule 7 (INSTRUCCION -> IFS .)
    DECIMAL         reduce using rule 7 (INSTRUCCION -> IFS .)
    ENTERO          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TRUE          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FALSE         reduce using rule 7 (INSTRUCCION -> IFS .)
    CADENA          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCION -> IFS .)
    $end            reduce using rule 7 (INSTRUCCION -> IFS .)
    R_END           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_ELSE          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCION -> IFS .)


state 10

    (8) INSTRUCCION -> FORS .

    R_IF            reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FOR           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_WHILE         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LOCAL         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PRINT         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCION -> FORS .)
    ID              reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PARSE         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TRUNC         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FLOAT         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_STRING        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PUSH          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_POP           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LENGTH        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCION -> FORS .)
    R_STRUCT        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_BREAK         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_CONTINUE      reduce using rule 8 (INSTRUCCION -> FORS .)
    R_RETURN        reduce using rule 8 (INSTRUCCION -> FORS .)
    MENOS           reduce using rule 8 (INSTRUCCION -> FORS .)
    PARIZQ          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LOG10         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_SIN           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_COS           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TAN           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_SQRT          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_UPPERCASE     reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LOWERCASE     reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LOG           reduce using rule 8 (INSTRUCCION -> FORS .)
    DECIMAL         reduce using rule 8 (INSTRUCCION -> FORS .)
    ENTERO          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TRUE          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FALSE         reduce using rule 8 (INSTRUCCION -> FORS .)
    CADENA          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCION -> FORS .)
    $end            reduce using rule 8 (INSTRUCCION -> FORS .)
    R_END           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_ELSE          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCION -> FORS .)


state 11

    (9) INSTRUCCION -> WHILES .

    R_IF            reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FOR           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_WHILE         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LOCAL         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PRINT         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCION -> WHILES .)
    ID              reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PARSE         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TRUNC         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FLOAT         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_STRING        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PUSH          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_POP           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LENGTH        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_STRUCT        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_BREAK         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_CONTINUE      reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_RETURN        reduce using rule 9 (INSTRUCCION -> WHILES .)
    MENOS           reduce using rule 9 (INSTRUCCION -> WHILES .)
    PARIZQ          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LOG10         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_SIN           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_COS           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TAN           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_SQRT          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_UPPERCASE     reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LOWERCASE     reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LOG           reduce using rule 9 (INSTRUCCION -> WHILES .)
    DECIMAL         reduce using rule 9 (INSTRUCCION -> WHILES .)
    ENTERO          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TRUE          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FALSE         reduce using rule 9 (INSTRUCCION -> WHILES .)
    CADENA          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCION -> WHILES .)
    $end            reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_END           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_ELSE          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCION -> WHILES .)


state 12

    (10) INSTRUCCION -> ASIGNACION .

    R_IF            reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FOR           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_WHILE         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LOCAL         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PRINT         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    ID              reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PARSE         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TRUNC         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FLOAT         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_STRING        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PUSH          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_POP           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LENGTH        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_STRUCT        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_BREAK         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_CONTINUE      reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_RETURN        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    MENOS           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    PARIZQ          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LOG10         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_SIN           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_COS           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TAN           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_SQRT          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_UPPERCASE     reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LOWERCASE     reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LOG           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    DECIMAL         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    ENTERO          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TRUE          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FALSE         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    CADENA          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_END           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_ELSE          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)


state 13

    (11) INSTRUCCION -> I .

    R_IF            reduce using rule 11 (INSTRUCCION -> I .)
    R_FOR           reduce using rule 11 (INSTRUCCION -> I .)
    R_WHILE         reduce using rule 11 (INSTRUCCION -> I .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCION -> I .)
    R_LOCAL         reduce using rule 11 (INSTRUCCION -> I .)
    R_PRINT         reduce using rule 11 (INSTRUCCION -> I .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCION -> I .)
    ID              reduce using rule 11 (INSTRUCCION -> I .)
    R_PARSE         reduce using rule 11 (INSTRUCCION -> I .)
    R_TRUNC         reduce using rule 11 (INSTRUCCION -> I .)
    R_FLOAT         reduce using rule 11 (INSTRUCCION -> I .)
    R_STRING        reduce using rule 11 (INSTRUCCION -> I .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCION -> I .)
    R_PUSH          reduce using rule 11 (INSTRUCCION -> I .)
    R_POP           reduce using rule 11 (INSTRUCCION -> I .)
    R_LENGTH        reduce using rule 11 (INSTRUCCION -> I .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCION -> I .)
    R_STRUCT        reduce using rule 11 (INSTRUCCION -> I .)
    R_BREAK         reduce using rule 11 (INSTRUCCION -> I .)
    R_CONTINUE      reduce using rule 11 (INSTRUCCION -> I .)
    R_RETURN        reduce using rule 11 (INSTRUCCION -> I .)
    MENOS           reduce using rule 11 (INSTRUCCION -> I .)
    PARIZQ          reduce using rule 11 (INSTRUCCION -> I .)
    R_LOG10         reduce using rule 11 (INSTRUCCION -> I .)
    R_SIN           reduce using rule 11 (INSTRUCCION -> I .)
    R_COS           reduce using rule 11 (INSTRUCCION -> I .)
    R_TAN           reduce using rule 11 (INSTRUCCION -> I .)
    R_SQRT          reduce using rule 11 (INSTRUCCION -> I .)
    R_UPPERCASE     reduce using rule 11 (INSTRUCCION -> I .)
    R_LOWERCASE     reduce using rule 11 (INSTRUCCION -> I .)
    R_LOG           reduce using rule 11 (INSTRUCCION -> I .)
    DECIMAL         reduce using rule 11 (INSTRUCCION -> I .)
    ENTERO          reduce using rule 11 (INSTRUCCION -> I .)
    R_TRUE          reduce using rule 11 (INSTRUCCION -> I .)
    R_FALSE         reduce using rule 11 (INSTRUCCION -> I .)
    CADENA          reduce using rule 11 (INSTRUCCION -> I .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCION -> I .)
    $end            reduce using rule 11 (INSTRUCCION -> I .)
    R_END           reduce using rule 11 (INSTRUCCION -> I .)
    R_ELSE          reduce using rule 11 (INSTRUCCION -> I .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCION -> I .)


state 14

    (12) INSTRUCCION -> LLAMADAS . PTCOMA
    (78) E -> LLAMADAS .

    PTCOMA          shift and go to state 66
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)


state 15

    (13) INSTRUCCION -> NATIVAS . PTCOMA
    (77) E -> NATIVAS .

    PTCOMA          shift and go to state 67
    IGUAL           reduce using rule 77 (E -> NATIVAS .)
    MAS             reduce using rule 77 (E -> NATIVAS .)
    MENOS           reduce using rule 77 (E -> NATIVAS .)
    POR             reduce using rule 77 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 77 (E -> NATIVAS .)
    MODAL           reduce using rule 77 (E -> NATIVAS .)
    POTENCIA        reduce using rule 77 (E -> NATIVAS .)


state 16

    (14) INSTRUCCION -> STRUCTS .

    R_IF            reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FOR           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_WHILE         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LOCAL         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PRINT         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    ID              reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PARSE         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TRUNC         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FLOAT         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_STRING        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PUSH          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_POP           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LENGTH        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_STRUCT        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_BREAK         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_CONTINUE      reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_RETURN        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    MENOS           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    PARIZQ          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LOG10         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_SIN           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_COS           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TAN           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_SQRT          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_UPPERCASE     reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LOWERCASE     reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LOG           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    DECIMAL         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    ENTERO          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TRUE          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FALSE         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    CADENA          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    $end            reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_END           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_ELSE          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCION -> STRUCTS .)


state 17

    (15) INSTRUCCION -> BREAK .

    R_IF            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FOR           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_WHILE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOCAL         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCION -> BREAK .)
    ID              reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PARSE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TRUNC         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FLOAT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRING        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PUSH          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_POP           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LENGTH        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRUCT        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_BREAK         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_CONTINUE      reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_RETURN        reduce using rule 15 (INSTRUCCION -> BREAK .)
    MENOS           reduce using rule 15 (INSTRUCCION -> BREAK .)
    PARIZQ          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOG10         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_SIN           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_COS           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TAN           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_SQRT          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_UPPERCASE     reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOWERCASE     reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOG           reduce using rule 15 (INSTRUCCION -> BREAK .)
    DECIMAL         reduce using rule 15 (INSTRUCCION -> BREAK .)
    ENTERO          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TRUE          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FALSE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    CADENA          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCION -> BREAK .)
    $end            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_END           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSE          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCION -> BREAK .)


state 18

    (16) INSTRUCCION -> CONTINUE .

    R_IF            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FOR           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_WHILE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOCAL         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    ID              reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PARSE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TRUNC         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FLOAT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRING        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PUSH          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_POP           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LENGTH        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRUCT        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_BREAK         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_CONTINUE      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_RETURN        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    MENOS           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    PARIZQ          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOG10         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_SIN           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_COS           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TAN           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_SQRT          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_UPPERCASE     reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOWERCASE     reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOG           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    DECIMAL         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    ENTERO          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TRUE          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FALSE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    CADENA          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    $end            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_END           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSE          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)


state 19

    (17) INSTRUCCION -> RETURN .

    R_IF            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FOR           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_WHILE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOCAL         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCION -> RETURN .)
    ID              reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PARSE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TRUNC         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FLOAT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRING        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PUSH          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_POP           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LENGTH        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRUCT        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_BREAK         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_CONTINUE      reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_RETURN        reduce using rule 17 (INSTRUCCION -> RETURN .)
    MENOS           reduce using rule 17 (INSTRUCCION -> RETURN .)
    PARIZQ          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOG10         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_SIN           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_COS           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TAN           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_SQRT          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_UPPERCASE     reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOWERCASE     reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOG           reduce using rule 17 (INSTRUCCION -> RETURN .)
    DECIMAL         reduce using rule 17 (INSTRUCCION -> RETURN .)
    ENTERO          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TRUE          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FALSE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    CADENA          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCION -> RETURN .)
    $end            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_END           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSE          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCION -> RETURN .)


state 20

    (110) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (113) IFS -> R_IF . LO R_END PTCOMA
    (114) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> R_IF . LO ELSEIF
    (116) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 68
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 21

    (141) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 73


state 22

    (139) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> R_WHILE . LO R_END PTCOMA
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 74
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 23

    (34) ASIGNACION -> R_GLOBAL . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> R_GLOBAL . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> R_GLOBAL . E PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 75
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 24

    (36) ASIGNACION -> E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> E . IGUAL LISTA PTCOMA
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           shift and go to state 76
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 25

    (35) ASIGNACION -> R_LOCAL . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_LOCAL . E IGUAL LISTA PTCOMA
    (41) ASIGNACION -> R_LOCAL . E PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 83
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 26

    (18) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 84


state 27

    (19) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 85


state 28

    (92) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 86


state 29

    (93) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER
    (97) NATIVAS -> R_TRUNC . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 87


state 30

    (94) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 88


state 31

    (95) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 89


state 32

    (96) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 90


state 33

    (98) NATIVAS -> R_PUSH . DIFERENTE PARIZQ ID COMA E PARDER

    DIFERENTE       shift and go to state 91


state 34

    (99) NATIVAS -> R_POP . DIFERENTE PARIZQ ID PARDER

    DIFERENTE       shift and go to state 92


state 35

    (100) NATIVAS -> R_LENGTH . PARIZQ E PARDER

    PARIZQ          shift and go to state 93


state 36

    (147) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (149) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 94


state 37

    (148) STRUCTS -> R_STRUCT . ID ELEMENTOS PTCOMA
    (150) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 95


state 38

    (42) BREAK -> R_BREAK . PTCOMA

    PTCOMA          shift and go to state 96


state 39

    (126) CONTINUE -> R_CONTINUE . PTCOMA

    PTCOMA          shift and go to state 97


state 40

    (101) RETURN -> R_RETURN . LISTA PTCOMA
    (102) RETURN -> R_RETURN . PTCOMA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PTCOMA          shift and go to state 99
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 98
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 41

    (57) E -> MENOS . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 104
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 42

    (59) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 105


state 43

    (60) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 106


state 44

    (61) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 107


state 45

    (62) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 108


state 46

    (63) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 109


state 47

    (64) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 110


state 48

    (65) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 111


state 49

    (66) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 112


state 50

    (67) E -> DECIMAL .

    IGUAL           reduce using rule 67 (E -> DECIMAL .)
    MAS             reduce using rule 67 (E -> DECIMAL .)
    MENOS           reduce using rule 67 (E -> DECIMAL .)
    POR             reduce using rule 67 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 67 (E -> DECIMAL .)
    MODAL           reduce using rule 67 (E -> DECIMAL .)
    POTENCIA        reduce using rule 67 (E -> DECIMAL .)
    PARDER          reduce using rule 67 (E -> DECIMAL .)
    MENQUE          reduce using rule 67 (E -> DECIMAL .)
    MAYQUE          reduce using rule 67 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 67 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 67 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 67 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 67 (E -> DECIMAL .)
    R_END           reduce using rule 67 (E -> DECIMAL .)
    R_ELSE          reduce using rule 67 (E -> DECIMAL .)
    AND             reduce using rule 67 (E -> DECIMAL .)
    OR              reduce using rule 67 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 67 (E -> DECIMAL .)
    R_IF            reduce using rule 67 (E -> DECIMAL .)
    R_FOR           reduce using rule 67 (E -> DECIMAL .)
    R_WHILE         reduce using rule 67 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 67 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 67 (E -> DECIMAL .)
    R_PRINT         reduce using rule 67 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 67 (E -> DECIMAL .)
    ID              reduce using rule 67 (E -> DECIMAL .)
    R_PARSE         reduce using rule 67 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 67 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 67 (E -> DECIMAL .)
    R_STRING        reduce using rule 67 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 67 (E -> DECIMAL .)
    R_PUSH          reduce using rule 67 (E -> DECIMAL .)
    R_POP           reduce using rule 67 (E -> DECIMAL .)
    R_LENGTH        reduce using rule 67 (E -> DECIMAL .)
    R_MUTABLE       reduce using rule 67 (E -> DECIMAL .)
    R_STRUCT        reduce using rule 67 (E -> DECIMAL .)
    R_BREAK         reduce using rule 67 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 67 (E -> DECIMAL .)
    R_RETURN        reduce using rule 67 (E -> DECIMAL .)
    PARIZQ          reduce using rule 67 (E -> DECIMAL .)
    R_LOG10         reduce using rule 67 (E -> DECIMAL .)
    R_SIN           reduce using rule 67 (E -> DECIMAL .)
    R_COS           reduce using rule 67 (E -> DECIMAL .)
    R_TAN           reduce using rule 67 (E -> DECIMAL .)
    R_SQRT          reduce using rule 67 (E -> DECIMAL .)
    R_UPPERCASE     reduce using rule 67 (E -> DECIMAL .)
    R_LOWERCASE     reduce using rule 67 (E -> DECIMAL .)
    R_LOG           reduce using rule 67 (E -> DECIMAL .)
    DECIMAL         reduce using rule 67 (E -> DECIMAL .)
    ENTERO          reduce using rule 67 (E -> DECIMAL .)
    R_TRUE          reduce using rule 67 (E -> DECIMAL .)
    R_FALSE         reduce using rule 67 (E -> DECIMAL .)
    CADENA          reduce using rule 67 (E -> DECIMAL .)
    PTCOMA          reduce using rule 67 (E -> DECIMAL .)
    COMA            reduce using rule 67 (E -> DECIMAL .)
    CORDER          reduce using rule 67 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 67 (E -> DECIMAL .)
    DOSPUNTITOS     reduce using rule 67 (E -> DECIMAL .)


state 51

    (68) E -> ENTERO .

    IGUAL           reduce using rule 68 (E -> ENTERO .)
    MAS             reduce using rule 68 (E -> ENTERO .)
    MENOS           reduce using rule 68 (E -> ENTERO .)
    POR             reduce using rule 68 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 68 (E -> ENTERO .)
    MODAL           reduce using rule 68 (E -> ENTERO .)
    POTENCIA        reduce using rule 68 (E -> ENTERO .)
    PARDER          reduce using rule 68 (E -> ENTERO .)
    MENQUE          reduce using rule 68 (E -> ENTERO .)
    MAYQUE          reduce using rule 68 (E -> ENTERO .)
    IGUALQUE        reduce using rule 68 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 68 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 68 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 68 (E -> ENTERO .)
    R_END           reduce using rule 68 (E -> ENTERO .)
    R_ELSE          reduce using rule 68 (E -> ENTERO .)
    AND             reduce using rule 68 (E -> ENTERO .)
    OR              reduce using rule 68 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 68 (E -> ENTERO .)
    R_IF            reduce using rule 68 (E -> ENTERO .)
    R_FOR           reduce using rule 68 (E -> ENTERO .)
    R_WHILE         reduce using rule 68 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 68 (E -> ENTERO .)
    R_LOCAL         reduce using rule 68 (E -> ENTERO .)
    R_PRINT         reduce using rule 68 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 68 (E -> ENTERO .)
    ID              reduce using rule 68 (E -> ENTERO .)
    R_PARSE         reduce using rule 68 (E -> ENTERO .)
    R_TRUNC         reduce using rule 68 (E -> ENTERO .)
    R_FLOAT         reduce using rule 68 (E -> ENTERO .)
    R_STRING        reduce using rule 68 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 68 (E -> ENTERO .)
    R_PUSH          reduce using rule 68 (E -> ENTERO .)
    R_POP           reduce using rule 68 (E -> ENTERO .)
    R_LENGTH        reduce using rule 68 (E -> ENTERO .)
    R_MUTABLE       reduce using rule 68 (E -> ENTERO .)
    R_STRUCT        reduce using rule 68 (E -> ENTERO .)
    R_BREAK         reduce using rule 68 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 68 (E -> ENTERO .)
    R_RETURN        reduce using rule 68 (E -> ENTERO .)
    PARIZQ          reduce using rule 68 (E -> ENTERO .)
    R_LOG10         reduce using rule 68 (E -> ENTERO .)
    R_SIN           reduce using rule 68 (E -> ENTERO .)
    R_COS           reduce using rule 68 (E -> ENTERO .)
    R_TAN           reduce using rule 68 (E -> ENTERO .)
    R_SQRT          reduce using rule 68 (E -> ENTERO .)
    R_UPPERCASE     reduce using rule 68 (E -> ENTERO .)
    R_LOWERCASE     reduce using rule 68 (E -> ENTERO .)
    R_LOG           reduce using rule 68 (E -> ENTERO .)
    DECIMAL         reduce using rule 68 (E -> ENTERO .)
    ENTERO          reduce using rule 68 (E -> ENTERO .)
    R_TRUE          reduce using rule 68 (E -> ENTERO .)
    R_FALSE         reduce using rule 68 (E -> ENTERO .)
    CADENA          reduce using rule 68 (E -> ENTERO .)
    PTCOMA          reduce using rule 68 (E -> ENTERO .)
    COMA            reduce using rule 68 (E -> ENTERO .)
    CORDER          reduce using rule 68 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 68 (E -> ENTERO .)
    DOSPUNTITOS     reduce using rule 68 (E -> ENTERO .)


state 52

    (69) E -> R_TRUE .

    IGUAL           reduce using rule 69 (E -> R_TRUE .)
    MAS             reduce using rule 69 (E -> R_TRUE .)
    MENOS           reduce using rule 69 (E -> R_TRUE .)
    POR             reduce using rule 69 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 69 (E -> R_TRUE .)
    MODAL           reduce using rule 69 (E -> R_TRUE .)
    POTENCIA        reduce using rule 69 (E -> R_TRUE .)
    PARDER          reduce using rule 69 (E -> R_TRUE .)
    MENQUE          reduce using rule 69 (E -> R_TRUE .)
    MAYQUE          reduce using rule 69 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 69 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 69 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 69 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 69 (E -> R_TRUE .)
    R_END           reduce using rule 69 (E -> R_TRUE .)
    R_ELSE          reduce using rule 69 (E -> R_TRUE .)
    AND             reduce using rule 69 (E -> R_TRUE .)
    OR              reduce using rule 69 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 69 (E -> R_TRUE .)
    R_IF            reduce using rule 69 (E -> R_TRUE .)
    R_FOR           reduce using rule 69 (E -> R_TRUE .)
    R_WHILE         reduce using rule 69 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 69 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 69 (E -> R_TRUE .)
    R_PRINT         reduce using rule 69 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 69 (E -> R_TRUE .)
    ID              reduce using rule 69 (E -> R_TRUE .)
    R_PARSE         reduce using rule 69 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 69 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 69 (E -> R_TRUE .)
    R_STRING        reduce using rule 69 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 69 (E -> R_TRUE .)
    R_PUSH          reduce using rule 69 (E -> R_TRUE .)
    R_POP           reduce using rule 69 (E -> R_TRUE .)
    R_LENGTH        reduce using rule 69 (E -> R_TRUE .)
    R_MUTABLE       reduce using rule 69 (E -> R_TRUE .)
    R_STRUCT        reduce using rule 69 (E -> R_TRUE .)
    R_BREAK         reduce using rule 69 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 69 (E -> R_TRUE .)
    R_RETURN        reduce using rule 69 (E -> R_TRUE .)
    PARIZQ          reduce using rule 69 (E -> R_TRUE .)
    R_LOG10         reduce using rule 69 (E -> R_TRUE .)
    R_SIN           reduce using rule 69 (E -> R_TRUE .)
    R_COS           reduce using rule 69 (E -> R_TRUE .)
    R_TAN           reduce using rule 69 (E -> R_TRUE .)
    R_SQRT          reduce using rule 69 (E -> R_TRUE .)
    R_UPPERCASE     reduce using rule 69 (E -> R_TRUE .)
    R_LOWERCASE     reduce using rule 69 (E -> R_TRUE .)
    R_LOG           reduce using rule 69 (E -> R_TRUE .)
    DECIMAL         reduce using rule 69 (E -> R_TRUE .)
    ENTERO          reduce using rule 69 (E -> R_TRUE .)
    R_TRUE          reduce using rule 69 (E -> R_TRUE .)
    R_FALSE         reduce using rule 69 (E -> R_TRUE .)
    CADENA          reduce using rule 69 (E -> R_TRUE .)
    PTCOMA          reduce using rule 69 (E -> R_TRUE .)
    COMA            reduce using rule 69 (E -> R_TRUE .)
    CORDER          reduce using rule 69 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 69 (E -> R_TRUE .)
    DOSPUNTITOS     reduce using rule 69 (E -> R_TRUE .)


state 53

    (70) E -> R_FALSE .

    IGUAL           reduce using rule 70 (E -> R_FALSE .)
    MAS             reduce using rule 70 (E -> R_FALSE .)
    MENOS           reduce using rule 70 (E -> R_FALSE .)
    POR             reduce using rule 70 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 70 (E -> R_FALSE .)
    MODAL           reduce using rule 70 (E -> R_FALSE .)
    POTENCIA        reduce using rule 70 (E -> R_FALSE .)
    PARDER          reduce using rule 70 (E -> R_FALSE .)
    MENQUE          reduce using rule 70 (E -> R_FALSE .)
    MAYQUE          reduce using rule 70 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 70 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 70 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 70 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 70 (E -> R_FALSE .)
    R_END           reduce using rule 70 (E -> R_FALSE .)
    R_ELSE          reduce using rule 70 (E -> R_FALSE .)
    AND             reduce using rule 70 (E -> R_FALSE .)
    OR              reduce using rule 70 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 70 (E -> R_FALSE .)
    R_IF            reduce using rule 70 (E -> R_FALSE .)
    R_FOR           reduce using rule 70 (E -> R_FALSE .)
    R_WHILE         reduce using rule 70 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 70 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 70 (E -> R_FALSE .)
    R_PRINT         reduce using rule 70 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 70 (E -> R_FALSE .)
    ID              reduce using rule 70 (E -> R_FALSE .)
    R_PARSE         reduce using rule 70 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 70 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 70 (E -> R_FALSE .)
    R_STRING        reduce using rule 70 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 70 (E -> R_FALSE .)
    R_PUSH          reduce using rule 70 (E -> R_FALSE .)
    R_POP           reduce using rule 70 (E -> R_FALSE .)
    R_LENGTH        reduce using rule 70 (E -> R_FALSE .)
    R_MUTABLE       reduce using rule 70 (E -> R_FALSE .)
    R_STRUCT        reduce using rule 70 (E -> R_FALSE .)
    R_BREAK         reduce using rule 70 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 70 (E -> R_FALSE .)
    R_RETURN        reduce using rule 70 (E -> R_FALSE .)
    PARIZQ          reduce using rule 70 (E -> R_FALSE .)
    R_LOG10         reduce using rule 70 (E -> R_FALSE .)
    R_SIN           reduce using rule 70 (E -> R_FALSE .)
    R_COS           reduce using rule 70 (E -> R_FALSE .)
    R_TAN           reduce using rule 70 (E -> R_FALSE .)
    R_SQRT          reduce using rule 70 (E -> R_FALSE .)
    R_UPPERCASE     reduce using rule 70 (E -> R_FALSE .)
    R_LOWERCASE     reduce using rule 70 (E -> R_FALSE .)
    R_LOG           reduce using rule 70 (E -> R_FALSE .)
    DECIMAL         reduce using rule 70 (E -> R_FALSE .)
    ENTERO          reduce using rule 70 (E -> R_FALSE .)
    R_TRUE          reduce using rule 70 (E -> R_FALSE .)
    R_FALSE         reduce using rule 70 (E -> R_FALSE .)
    CADENA          reduce using rule 70 (E -> R_FALSE .)
    PTCOMA          reduce using rule 70 (E -> R_FALSE .)
    COMA            reduce using rule 70 (E -> R_FALSE .)
    CORDER          reduce using rule 70 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 70 (E -> R_FALSE .)
    DOSPUNTITOS     reduce using rule 70 (E -> R_FALSE .)


state 54

    (71) E -> CADENA .

    IGUAL           reduce using rule 71 (E -> CADENA .)
    MAS             reduce using rule 71 (E -> CADENA .)
    MENOS           reduce using rule 71 (E -> CADENA .)
    POR             reduce using rule 71 (E -> CADENA .)
    DIVIDIDO        reduce using rule 71 (E -> CADENA .)
    MODAL           reduce using rule 71 (E -> CADENA .)
    POTENCIA        reduce using rule 71 (E -> CADENA .)
    PARDER          reduce using rule 71 (E -> CADENA .)
    MENQUE          reduce using rule 71 (E -> CADENA .)
    MAYQUE          reduce using rule 71 (E -> CADENA .)
    IGUALQUE        reduce using rule 71 (E -> CADENA .)
    NIGUALQUE       reduce using rule 71 (E -> CADENA .)
    MENORIGUAL      reduce using rule 71 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 71 (E -> CADENA .)
    R_END           reduce using rule 71 (E -> CADENA .)
    R_ELSE          reduce using rule 71 (E -> CADENA .)
    AND             reduce using rule 71 (E -> CADENA .)
    OR              reduce using rule 71 (E -> CADENA .)
    R_ELSEIF        reduce using rule 71 (E -> CADENA .)
    R_IF            reduce using rule 71 (E -> CADENA .)
    R_FOR           reduce using rule 71 (E -> CADENA .)
    R_WHILE         reduce using rule 71 (E -> CADENA .)
    R_GLOBAL        reduce using rule 71 (E -> CADENA .)
    R_LOCAL         reduce using rule 71 (E -> CADENA .)
    R_PRINT         reduce using rule 71 (E -> CADENA .)
    R_PRINTLN       reduce using rule 71 (E -> CADENA .)
    ID              reduce using rule 71 (E -> CADENA .)
    R_PARSE         reduce using rule 71 (E -> CADENA .)
    R_TRUNC         reduce using rule 71 (E -> CADENA .)
    R_FLOAT         reduce using rule 71 (E -> CADENA .)
    R_STRING        reduce using rule 71 (E -> CADENA .)
    R_TYPEOF        reduce using rule 71 (E -> CADENA .)
    R_PUSH          reduce using rule 71 (E -> CADENA .)
    R_POP           reduce using rule 71 (E -> CADENA .)
    R_LENGTH        reduce using rule 71 (E -> CADENA .)
    R_MUTABLE       reduce using rule 71 (E -> CADENA .)
    R_STRUCT        reduce using rule 71 (E -> CADENA .)
    R_BREAK         reduce using rule 71 (E -> CADENA .)
    R_CONTINUE      reduce using rule 71 (E -> CADENA .)
    R_RETURN        reduce using rule 71 (E -> CADENA .)
    PARIZQ          reduce using rule 71 (E -> CADENA .)
    R_LOG10         reduce using rule 71 (E -> CADENA .)
    R_SIN           reduce using rule 71 (E -> CADENA .)
    R_COS           reduce using rule 71 (E -> CADENA .)
    R_TAN           reduce using rule 71 (E -> CADENA .)
    R_SQRT          reduce using rule 71 (E -> CADENA .)
    R_UPPERCASE     reduce using rule 71 (E -> CADENA .)
    R_LOWERCASE     reduce using rule 71 (E -> CADENA .)
    R_LOG           reduce using rule 71 (E -> CADENA .)
    DECIMAL         reduce using rule 71 (E -> CADENA .)
    ENTERO          reduce using rule 71 (E -> CADENA .)
    R_TRUE          reduce using rule 71 (E -> CADENA .)
    R_FALSE         reduce using rule 71 (E -> CADENA .)
    CADENA          reduce using rule 71 (E -> CADENA .)
    PTCOMA          reduce using rule 71 (E -> CADENA .)
    COMA            reduce using rule 71 (E -> CADENA .)
    CORDER          reduce using rule 71 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 71 (E -> CADENA .)
    DOSPUNTITOS     reduce using rule 71 (E -> CADENA .)


state 55

    (1) INICIO -> INICIO INIT .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_IF            reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO INIT .)
    ID              reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRING        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_POP           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LENGTH        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_BREAK         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_CONTINUE      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_RETURN        reduce using rule 1 (INICIO -> INICIO INIT .)
    MENOS           reduce using rule 1 (INICIO -> INICIO INIT .)
    PARIZQ          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOG10         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_SIN           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_COS           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TAN           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_SQRT          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_UPPERCASE     reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOWERCASE     reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOG           reduce using rule 1 (INICIO -> INICIO INIT .)
    DECIMAL         reduce using rule 1 (INICIO -> INICIO INIT .)
    ENTERO          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TRUE          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FALSE         reduce using rule 1 (INICIO -> INICIO INIT .)
    CADENA          reduce using rule 1 (INICIO -> INICIO INIT .)
    $end            reduce using rule 1 (INICIO -> INICIO INIT .)


state 56

    (5) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    R_IF            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FOR           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_WHILE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_GLOBAL        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOCAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINTLN       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ID              reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PARSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TRUNC         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FLOAT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRING        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TYPEOF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PUSH          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_POP           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LENGTH        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_MUTABLE       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRUCT        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_BREAK         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_CONTINUE      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_RETURN        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    MENOS           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PARIZQ          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOG10         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_SIN           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_COS           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TAN           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_SQRT          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_UPPERCASE     reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOWERCASE     reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOG           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DECIMAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ENTERO          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TRUE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FALSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    CADENA          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FUNCTION      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_END           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSEIF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 57

    (103) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA

    PARIZQ          shift and go to state 113


state 58

    (49) LLAMADAS -> ID PARIZQ . LISTAS PARDER
    (50) LLAMADAS -> ID PARIZQ . PARDER
    (30) LISTAS -> . LISTAS COMA LISTA
    (31) LISTAS -> . LISTA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARDER          shift and go to state 115
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTAS                         shift and go to state 114
    LISTA                          shift and go to state 116
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 59

    (73) E -> ID ARRAYS .
    (74) ARRAYS -> ARRAYS . ARRAY
    (76) ARRAY -> . CORIZQ E CORDER

    IGUAL           reduce using rule 73 (E -> ID ARRAYS .)
    MAS             reduce using rule 73 (E -> ID ARRAYS .)
    MENOS           reduce using rule 73 (E -> ID ARRAYS .)
    POR             reduce using rule 73 (E -> ID ARRAYS .)
    DIVIDIDO        reduce using rule 73 (E -> ID ARRAYS .)
    MODAL           reduce using rule 73 (E -> ID ARRAYS .)
    POTENCIA        reduce using rule 73 (E -> ID ARRAYS .)
    PARDER          reduce using rule 73 (E -> ID ARRAYS .)
    MENQUE          reduce using rule 73 (E -> ID ARRAYS .)
    MAYQUE          reduce using rule 73 (E -> ID ARRAYS .)
    IGUALQUE        reduce using rule 73 (E -> ID ARRAYS .)
    NIGUALQUE       reduce using rule 73 (E -> ID ARRAYS .)
    MENORIGUAL      reduce using rule 73 (E -> ID ARRAYS .)
    MAYORIGUAL      reduce using rule 73 (E -> ID ARRAYS .)
    R_END           reduce using rule 73 (E -> ID ARRAYS .)
    R_ELSE          reduce using rule 73 (E -> ID ARRAYS .)
    AND             reduce using rule 73 (E -> ID ARRAYS .)
    OR              reduce using rule 73 (E -> ID ARRAYS .)
    R_ELSEIF        reduce using rule 73 (E -> ID ARRAYS .)
    R_IF            reduce using rule 73 (E -> ID ARRAYS .)
    R_FOR           reduce using rule 73 (E -> ID ARRAYS .)
    R_WHILE         reduce using rule 73 (E -> ID ARRAYS .)
    R_GLOBAL        reduce using rule 73 (E -> ID ARRAYS .)
    R_LOCAL         reduce using rule 73 (E -> ID ARRAYS .)
    R_PRINT         reduce using rule 73 (E -> ID ARRAYS .)
    R_PRINTLN       reduce using rule 73 (E -> ID ARRAYS .)
    ID              reduce using rule 73 (E -> ID ARRAYS .)
    R_PARSE         reduce using rule 73 (E -> ID ARRAYS .)
    R_TRUNC         reduce using rule 73 (E -> ID ARRAYS .)
    R_FLOAT         reduce using rule 73 (E -> ID ARRAYS .)
    R_STRING        reduce using rule 73 (E -> ID ARRAYS .)
    R_TYPEOF        reduce using rule 73 (E -> ID ARRAYS .)
    R_PUSH          reduce using rule 73 (E -> ID ARRAYS .)
    R_POP           reduce using rule 73 (E -> ID ARRAYS .)
    R_LENGTH        reduce using rule 73 (E -> ID ARRAYS .)
    R_MUTABLE       reduce using rule 73 (E -> ID ARRAYS .)
    R_STRUCT        reduce using rule 73 (E -> ID ARRAYS .)
    R_BREAK         reduce using rule 73 (E -> ID ARRAYS .)
    R_CONTINUE      reduce using rule 73 (E -> ID ARRAYS .)
    R_RETURN        reduce using rule 73 (E -> ID ARRAYS .)
    PARIZQ          reduce using rule 73 (E -> ID ARRAYS .)
    R_LOG10         reduce using rule 73 (E -> ID ARRAYS .)
    R_SIN           reduce using rule 73 (E -> ID ARRAYS .)
    R_COS           reduce using rule 73 (E -> ID ARRAYS .)
    R_TAN           reduce using rule 73 (E -> ID ARRAYS .)
    R_SQRT          reduce using rule 73 (E -> ID ARRAYS .)
    R_UPPERCASE     reduce using rule 73 (E -> ID ARRAYS .)
    R_LOWERCASE     reduce using rule 73 (E -> ID ARRAYS .)
    R_LOG           reduce using rule 73 (E -> ID ARRAYS .)
    DECIMAL         reduce using rule 73 (E -> ID ARRAYS .)
    ENTERO          reduce using rule 73 (E -> ID ARRAYS .)
    R_TRUE          reduce using rule 73 (E -> ID ARRAYS .)
    R_FALSE         reduce using rule 73 (E -> ID ARRAYS .)
    CADENA          reduce using rule 73 (E -> ID ARRAYS .)
    PTCOMA          reduce using rule 73 (E -> ID ARRAYS .)
    COMA            reduce using rule 73 (E -> ID ARRAYS .)
    CORDER          reduce using rule 73 (E -> ID ARRAYS .)
    DOSPUNTOS       reduce using rule 73 (E -> ID ARRAYS .)
    DOSPUNTITOS     reduce using rule 73 (E -> ID ARRAYS .)
    CORIZQ          shift and go to state 61

    ARRAY                          shift and go to state 117

state 60

    (75) ARRAYS -> ARRAY .

    CORIZQ          reduce using rule 75 (ARRAYS -> ARRAY .)
    IGUAL           reduce using rule 75 (ARRAYS -> ARRAY .)
    MAS             reduce using rule 75 (ARRAYS -> ARRAY .)
    MENOS           reduce using rule 75 (ARRAYS -> ARRAY .)
    POR             reduce using rule 75 (ARRAYS -> ARRAY .)
    DIVIDIDO        reduce using rule 75 (ARRAYS -> ARRAY .)
    MODAL           reduce using rule 75 (ARRAYS -> ARRAY .)
    POTENCIA        reduce using rule 75 (ARRAYS -> ARRAY .)
    PARDER          reduce using rule 75 (ARRAYS -> ARRAY .)
    MENQUE          reduce using rule 75 (ARRAYS -> ARRAY .)
    MAYQUE          reduce using rule 75 (ARRAYS -> ARRAY .)
    IGUALQUE        reduce using rule 75 (ARRAYS -> ARRAY .)
    NIGUALQUE       reduce using rule 75 (ARRAYS -> ARRAY .)
    MENORIGUAL      reduce using rule 75 (ARRAYS -> ARRAY .)
    MAYORIGUAL      reduce using rule 75 (ARRAYS -> ARRAY .)
    R_END           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_ELSE          reduce using rule 75 (ARRAYS -> ARRAY .)
    AND             reduce using rule 75 (ARRAYS -> ARRAY .)
    OR              reduce using rule 75 (ARRAYS -> ARRAY .)
    R_ELSEIF        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_IF            reduce using rule 75 (ARRAYS -> ARRAY .)
    R_FOR           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_WHILE         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_GLOBAL        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_LOCAL         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_PRINT         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_PRINTLN       reduce using rule 75 (ARRAYS -> ARRAY .)
    ID              reduce using rule 75 (ARRAYS -> ARRAY .)
    R_PARSE         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_TRUNC         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_FLOAT         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_STRING        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_TYPEOF        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_PUSH          reduce using rule 75 (ARRAYS -> ARRAY .)
    R_POP           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_LENGTH        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_MUTABLE       reduce using rule 75 (ARRAYS -> ARRAY .)
    R_STRUCT        reduce using rule 75 (ARRAYS -> ARRAY .)
    R_BREAK         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_CONTINUE      reduce using rule 75 (ARRAYS -> ARRAY .)
    R_RETURN        reduce using rule 75 (ARRAYS -> ARRAY .)
    PARIZQ          reduce using rule 75 (ARRAYS -> ARRAY .)
    R_LOG10         reduce using rule 75 (ARRAYS -> ARRAY .)
    R_SIN           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_COS           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_TAN           reduce using rule 75 (ARRAYS -> ARRAY .)
    R_SQRT          reduce using rule 75 (ARRAYS -> ARRAY .)
    R_UPPERCASE     reduce using rule 75 (ARRAYS -> ARRAY .)
    R_LOWERCASE     reduce using rule 75 (ARRAYS -> ARRAY .)
    R_LOG           reduce using rule 75 (ARRAYS -> ARRAY .)
    DECIMAL         reduce using rule 75 (ARRAYS -> ARRAY .)
    ENTERO          reduce using rule 75 (ARRAYS -> ARRAY .)
    R_TRUE          reduce using rule 75 (ARRAYS -> ARRAY .)
    R_FALSE         reduce using rule 75 (ARRAYS -> ARRAY .)
    CADENA          reduce using rule 75 (ARRAYS -> ARRAY .)
    PTCOMA          reduce using rule 75 (ARRAYS -> ARRAY .)
    COMA            reduce using rule 75 (ARRAYS -> ARRAY .)
    CORDER          reduce using rule 75 (ARRAYS -> ARRAY .)
    DOSPUNTOS       reduce using rule 75 (ARRAYS -> ARRAY .)
    DOSPUNTITOS     reduce using rule 75 (ARRAYS -> ARRAY .)


state 61

    (76) ARRAY -> CORIZQ . E CORDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 118
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 62

    (58) E -> PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 119
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 63

    (72) E -> ID .
    (73) E -> ID . ARRAYS
    (49) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (50) LLAMADAS -> ID . PARIZQ PARDER
    (74) ARRAYS -> . ARRAYS ARRAY
    (75) ARRAYS -> . ARRAY
    (76) ARRAY -> . CORIZQ E CORDER

  ! shift/reduce conflict for PARIZQ resolved as shift
    PARDER          reduce using rule 72 (E -> ID .)
    MAS             reduce using rule 72 (E -> ID .)
    MENOS           reduce using rule 72 (E -> ID .)
    POR             reduce using rule 72 (E -> ID .)
    DIVIDIDO        reduce using rule 72 (E -> ID .)
    MODAL           reduce using rule 72 (E -> ID .)
    POTENCIA        reduce using rule 72 (E -> ID .)
    MENQUE          reduce using rule 72 (E -> ID .)
    MAYQUE          reduce using rule 72 (E -> ID .)
    IGUALQUE        reduce using rule 72 (E -> ID .)
    NIGUALQUE       reduce using rule 72 (E -> ID .)
    MENORIGUAL      reduce using rule 72 (E -> ID .)
    MAYORIGUAL      reduce using rule 72 (E -> ID .)
    R_END           reduce using rule 72 (E -> ID .)
    R_ELSE          reduce using rule 72 (E -> ID .)
    AND             reduce using rule 72 (E -> ID .)
    OR              reduce using rule 72 (E -> ID .)
    R_ELSEIF        reduce using rule 72 (E -> ID .)
    R_IF            reduce using rule 72 (E -> ID .)
    R_FOR           reduce using rule 72 (E -> ID .)
    R_WHILE         reduce using rule 72 (E -> ID .)
    R_GLOBAL        reduce using rule 72 (E -> ID .)
    R_LOCAL         reduce using rule 72 (E -> ID .)
    R_PRINT         reduce using rule 72 (E -> ID .)
    R_PRINTLN       reduce using rule 72 (E -> ID .)
    ID              reduce using rule 72 (E -> ID .)
    R_PARSE         reduce using rule 72 (E -> ID .)
    R_TRUNC         reduce using rule 72 (E -> ID .)
    R_FLOAT         reduce using rule 72 (E -> ID .)
    R_STRING        reduce using rule 72 (E -> ID .)
    R_TYPEOF        reduce using rule 72 (E -> ID .)
    R_PUSH          reduce using rule 72 (E -> ID .)
    R_POP           reduce using rule 72 (E -> ID .)
    R_LENGTH        reduce using rule 72 (E -> ID .)
    R_MUTABLE       reduce using rule 72 (E -> ID .)
    R_STRUCT        reduce using rule 72 (E -> ID .)
    R_BREAK         reduce using rule 72 (E -> ID .)
    R_CONTINUE      reduce using rule 72 (E -> ID .)
    R_RETURN        reduce using rule 72 (E -> ID .)
    R_LOG10         reduce using rule 72 (E -> ID .)
    R_SIN           reduce using rule 72 (E -> ID .)
    R_COS           reduce using rule 72 (E -> ID .)
    R_TAN           reduce using rule 72 (E -> ID .)
    R_SQRT          reduce using rule 72 (E -> ID .)
    R_UPPERCASE     reduce using rule 72 (E -> ID .)
    R_LOWERCASE     reduce using rule 72 (E -> ID .)
    R_LOG           reduce using rule 72 (E -> ID .)
    DECIMAL         reduce using rule 72 (E -> ID .)
    ENTERO          reduce using rule 72 (E -> ID .)
    R_TRUE          reduce using rule 72 (E -> ID .)
    R_FALSE         reduce using rule 72 (E -> ID .)
    CADENA          reduce using rule 72 (E -> ID .)
    IGUAL           reduce using rule 72 (E -> ID .)
    PTCOMA          reduce using rule 72 (E -> ID .)
    COMA            reduce using rule 72 (E -> ID .)
    CORDER          reduce using rule 72 (E -> ID .)
    DOSPUNTOS       reduce using rule 72 (E -> ID .)
    DOSPUNTITOS     reduce using rule 72 (E -> ID .)
    PARIZQ          shift and go to state 58
    CORIZQ          shift and go to state 61

  ! PARIZQ          [ reduce using rule 72 (E -> ID .) ]

    ARRAYS                         shift and go to state 59
    ARRAY                          shift and go to state 60

state 64

    (77) E -> NATIVAS .

    PARDER          reduce using rule 77 (E -> NATIVAS .)
    MAS             reduce using rule 77 (E -> NATIVAS .)
    MENOS           reduce using rule 77 (E -> NATIVAS .)
    POR             reduce using rule 77 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 77 (E -> NATIVAS .)
    MODAL           reduce using rule 77 (E -> NATIVAS .)
    POTENCIA        reduce using rule 77 (E -> NATIVAS .)
    MENQUE          reduce using rule 77 (E -> NATIVAS .)
    MAYQUE          reduce using rule 77 (E -> NATIVAS .)
    IGUALQUE        reduce using rule 77 (E -> NATIVAS .)
    NIGUALQUE       reduce using rule 77 (E -> NATIVAS .)
    MENORIGUAL      reduce using rule 77 (E -> NATIVAS .)
    MAYORIGUAL      reduce using rule 77 (E -> NATIVAS .)
    R_END           reduce using rule 77 (E -> NATIVAS .)
    R_ELSE          reduce using rule 77 (E -> NATIVAS .)
    AND             reduce using rule 77 (E -> NATIVAS .)
    OR              reduce using rule 77 (E -> NATIVAS .)
    R_ELSEIF        reduce using rule 77 (E -> NATIVAS .)
    R_IF            reduce using rule 77 (E -> NATIVAS .)
    R_FOR           reduce using rule 77 (E -> NATIVAS .)
    R_WHILE         reduce using rule 77 (E -> NATIVAS .)
    R_GLOBAL        reduce using rule 77 (E -> NATIVAS .)
    R_LOCAL         reduce using rule 77 (E -> NATIVAS .)
    R_PRINT         reduce using rule 77 (E -> NATIVAS .)
    R_PRINTLN       reduce using rule 77 (E -> NATIVAS .)
    ID              reduce using rule 77 (E -> NATIVAS .)
    R_PARSE         reduce using rule 77 (E -> NATIVAS .)
    R_TRUNC         reduce using rule 77 (E -> NATIVAS .)
    R_FLOAT         reduce using rule 77 (E -> NATIVAS .)
    R_STRING        reduce using rule 77 (E -> NATIVAS .)
    R_TYPEOF        reduce using rule 77 (E -> NATIVAS .)
    R_PUSH          reduce using rule 77 (E -> NATIVAS .)
    R_POP           reduce using rule 77 (E -> NATIVAS .)
    R_LENGTH        reduce using rule 77 (E -> NATIVAS .)
    R_MUTABLE       reduce using rule 77 (E -> NATIVAS .)
    R_STRUCT        reduce using rule 77 (E -> NATIVAS .)
    R_BREAK         reduce using rule 77 (E -> NATIVAS .)
    R_CONTINUE      reduce using rule 77 (E -> NATIVAS .)
    R_RETURN        reduce using rule 77 (E -> NATIVAS .)
    PARIZQ          reduce using rule 77 (E -> NATIVAS .)
    R_LOG10         reduce using rule 77 (E -> NATIVAS .)
    R_SIN           reduce using rule 77 (E -> NATIVAS .)
    R_COS           reduce using rule 77 (E -> NATIVAS .)
    R_TAN           reduce using rule 77 (E -> NATIVAS .)
    R_SQRT          reduce using rule 77 (E -> NATIVAS .)
    R_UPPERCASE     reduce using rule 77 (E -> NATIVAS .)
    R_LOWERCASE     reduce using rule 77 (E -> NATIVAS .)
    R_LOG           reduce using rule 77 (E -> NATIVAS .)
    DECIMAL         reduce using rule 77 (E -> NATIVAS .)
    ENTERO          reduce using rule 77 (E -> NATIVAS .)
    R_TRUE          reduce using rule 77 (E -> NATIVAS .)
    R_FALSE         reduce using rule 77 (E -> NATIVAS .)
    CADENA          reduce using rule 77 (E -> NATIVAS .)
    IGUAL           reduce using rule 77 (E -> NATIVAS .)
    PTCOMA          reduce using rule 77 (E -> NATIVAS .)
    COMA            reduce using rule 77 (E -> NATIVAS .)
    CORDER          reduce using rule 77 (E -> NATIVAS .)
    DOSPUNTOS       reduce using rule 77 (E -> NATIVAS .)
    DOSPUNTITOS     reduce using rule 77 (E -> NATIVAS .)


state 65

    (78) E -> LLAMADAS .

    PARDER          reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)
    MENQUE          reduce using rule 78 (E -> LLAMADAS .)
    MAYQUE          reduce using rule 78 (E -> LLAMADAS .)
    IGUALQUE        reduce using rule 78 (E -> LLAMADAS .)
    NIGUALQUE       reduce using rule 78 (E -> LLAMADAS .)
    MENORIGUAL      reduce using rule 78 (E -> LLAMADAS .)
    MAYORIGUAL      reduce using rule 78 (E -> LLAMADAS .)
    R_END           reduce using rule 78 (E -> LLAMADAS .)
    R_ELSE          reduce using rule 78 (E -> LLAMADAS .)
    AND             reduce using rule 78 (E -> LLAMADAS .)
    OR              reduce using rule 78 (E -> LLAMADAS .)
    R_ELSEIF        reduce using rule 78 (E -> LLAMADAS .)
    R_IF            reduce using rule 78 (E -> LLAMADAS .)
    R_FOR           reduce using rule 78 (E -> LLAMADAS .)
    R_WHILE         reduce using rule 78 (E -> LLAMADAS .)
    R_GLOBAL        reduce using rule 78 (E -> LLAMADAS .)
    R_LOCAL         reduce using rule 78 (E -> LLAMADAS .)
    R_PRINT         reduce using rule 78 (E -> LLAMADAS .)
    R_PRINTLN       reduce using rule 78 (E -> LLAMADAS .)
    ID              reduce using rule 78 (E -> LLAMADAS .)
    R_PARSE         reduce using rule 78 (E -> LLAMADAS .)
    R_TRUNC         reduce using rule 78 (E -> LLAMADAS .)
    R_FLOAT         reduce using rule 78 (E -> LLAMADAS .)
    R_STRING        reduce using rule 78 (E -> LLAMADAS .)
    R_TYPEOF        reduce using rule 78 (E -> LLAMADAS .)
    R_PUSH          reduce using rule 78 (E -> LLAMADAS .)
    R_POP           reduce using rule 78 (E -> LLAMADAS .)
    R_LENGTH        reduce using rule 78 (E -> LLAMADAS .)
    R_MUTABLE       reduce using rule 78 (E -> LLAMADAS .)
    R_STRUCT        reduce using rule 78 (E -> LLAMADAS .)
    R_BREAK         reduce using rule 78 (E -> LLAMADAS .)
    R_CONTINUE      reduce using rule 78 (E -> LLAMADAS .)
    R_RETURN        reduce using rule 78 (E -> LLAMADAS .)
    PARIZQ          reduce using rule 78 (E -> LLAMADAS .)
    R_LOG10         reduce using rule 78 (E -> LLAMADAS .)
    R_SIN           reduce using rule 78 (E -> LLAMADAS .)
    R_COS           reduce using rule 78 (E -> LLAMADAS .)
    R_TAN           reduce using rule 78 (E -> LLAMADAS .)
    R_SQRT          reduce using rule 78 (E -> LLAMADAS .)
    R_UPPERCASE     reduce using rule 78 (E -> LLAMADAS .)
    R_LOWERCASE     reduce using rule 78 (E -> LLAMADAS .)
    R_LOG           reduce using rule 78 (E -> LLAMADAS .)
    DECIMAL         reduce using rule 78 (E -> LLAMADAS .)
    ENTERO          reduce using rule 78 (E -> LLAMADAS .)
    R_TRUE          reduce using rule 78 (E -> LLAMADAS .)
    R_FALSE         reduce using rule 78 (E -> LLAMADAS .)
    CADENA          reduce using rule 78 (E -> LLAMADAS .)
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    PTCOMA          reduce using rule 78 (E -> LLAMADAS .)
    COMA            reduce using rule 78 (E -> LLAMADAS .)
    CORDER          reduce using rule 78 (E -> LLAMADAS .)
    DOSPUNTOS       reduce using rule 78 (E -> LLAMADAS .)
    DOSPUNTITOS     reduce using rule 78 (E -> LLAMADAS .)


state 66

    (12) INSTRUCCION -> LLAMADAS PTCOMA .

    R_IF            reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    ID              reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LENGTH        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRUCT        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_RETURN        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    MENOS           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    PARIZQ          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOG10         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_SIN           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_COS           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TAN           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_SQRT          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_UPPERCASE     reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOWERCASE     reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOG           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    DECIMAL         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    ENTERO          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TRUE          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FALSE         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    CADENA          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    $end            reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_END           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSE          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)


state 67

    (13) INSTRUCCION -> NATIVAS PTCOMA .

    R_IF            reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    ID              reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LENGTH        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    MENOS           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    PARIZQ          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOG10         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_SIN           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_COS           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TAN           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_SQRT          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_UPPERCASE     reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOWERCASE     reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOG           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    DECIMAL         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    ENTERO          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TRUE          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FALSE         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    CADENA          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    $end            reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_END           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)


state 68

    (110) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (111) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (113) IFS -> R_IF LO . R_END PTCOMA
    (114) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> R_IF LO . ELSEIF
    (116) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (118) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO ELSEIF
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 121
    R_ELSE          shift and go to state 122
    AND             shift and go to state 124
    OR              shift and go to state 125
    R_ELSEIF        shift and go to state 126
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 120
    ELSEIF                         shift and go to state 123
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 69

    (89) LO -> DIFERENTE . LO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 127
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 70

    (90) LO -> PARIZQ . LO PARDER
    (85) RE -> PARIZQ . RE PARDER
    (58) E -> PARIZQ . E PARDER
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 128
    RE                             shift and go to state 129
    E                              shift and go to state 130
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 71

    (91) LO -> RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 91 (LO -> RE .)
    R_ELSE          reduce using rule 91 (LO -> RE .)
    AND             reduce using rule 91 (LO -> RE .)
    OR              reduce using rule 91 (LO -> RE .)
    R_ELSEIF        reduce using rule 91 (LO -> RE .)
    R_IF            reduce using rule 91 (LO -> RE .)
    R_FOR           reduce using rule 91 (LO -> RE .)
    R_WHILE         reduce using rule 91 (LO -> RE .)
    R_GLOBAL        reduce using rule 91 (LO -> RE .)
    R_LOCAL         reduce using rule 91 (LO -> RE .)
    R_PRINT         reduce using rule 91 (LO -> RE .)
    R_PRINTLN       reduce using rule 91 (LO -> RE .)
    ID              reduce using rule 91 (LO -> RE .)
    R_PARSE         reduce using rule 91 (LO -> RE .)
    R_TRUNC         reduce using rule 91 (LO -> RE .)
    R_FLOAT         reduce using rule 91 (LO -> RE .)
    R_STRING        reduce using rule 91 (LO -> RE .)
    R_TYPEOF        reduce using rule 91 (LO -> RE .)
    R_PUSH          reduce using rule 91 (LO -> RE .)
    R_POP           reduce using rule 91 (LO -> RE .)
    R_LENGTH        reduce using rule 91 (LO -> RE .)
    R_MUTABLE       reduce using rule 91 (LO -> RE .)
    R_STRUCT        reduce using rule 91 (LO -> RE .)
    R_BREAK         reduce using rule 91 (LO -> RE .)
    R_CONTINUE      reduce using rule 91 (LO -> RE .)
    R_RETURN        reduce using rule 91 (LO -> RE .)
    MENOS           reduce using rule 91 (LO -> RE .)
    PARIZQ          reduce using rule 91 (LO -> RE .)
    R_LOG10         reduce using rule 91 (LO -> RE .)
    R_SIN           reduce using rule 91 (LO -> RE .)
    R_COS           reduce using rule 91 (LO -> RE .)
    R_TAN           reduce using rule 91 (LO -> RE .)
    R_SQRT          reduce using rule 91 (LO -> RE .)
    R_UPPERCASE     reduce using rule 91 (LO -> RE .)
    R_LOWERCASE     reduce using rule 91 (LO -> RE .)
    R_LOG           reduce using rule 91 (LO -> RE .)
    DECIMAL         reduce using rule 91 (LO -> RE .)
    ENTERO          reduce using rule 91 (LO -> RE .)
    R_TRUE          reduce using rule 91 (LO -> RE .)
    R_FALSE         reduce using rule 91 (LO -> RE .)
    CADENA          reduce using rule 91 (LO -> RE .)
    PTCOMA          reduce using rule 91 (LO -> RE .)
    PARDER          reduce using rule 91 (LO -> RE .)
    COMA            reduce using rule 91 (LO -> RE .)
    DOSPUNTOS       reduce using rule 91 (LO -> RE .)
    CORDER          reduce using rule 91 (LO -> RE .)
    MENQUE          shift and go to state 131
    MAYQUE          shift and go to state 132
    IGUALQUE        shift and go to state 133
    NIGUALQUE       shift and go to state 134
    MENORIGUAL      shift and go to state 135
    MAYORIGUAL      shift and go to state 136


state 72

    (86) RE -> E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    MENQUE          reduce using rule 86 (RE -> E .)
    MAYQUE          reduce using rule 86 (RE -> E .)
    IGUALQUE        reduce using rule 86 (RE -> E .)
    NIGUALQUE       reduce using rule 86 (RE -> E .)
    MENORIGUAL      reduce using rule 86 (RE -> E .)
    MAYORIGUAL      reduce using rule 86 (RE -> E .)
    R_END           reduce using rule 86 (RE -> E .)
    R_ELSE          reduce using rule 86 (RE -> E .)
    AND             reduce using rule 86 (RE -> E .)
    OR              reduce using rule 86 (RE -> E .)
    R_ELSEIF        reduce using rule 86 (RE -> E .)
    R_IF            reduce using rule 86 (RE -> E .)
    R_FOR           reduce using rule 86 (RE -> E .)
    R_WHILE         reduce using rule 86 (RE -> E .)
    R_GLOBAL        reduce using rule 86 (RE -> E .)
    R_LOCAL         reduce using rule 86 (RE -> E .)
    R_PRINT         reduce using rule 86 (RE -> E .)
    R_PRINTLN       reduce using rule 86 (RE -> E .)
    ID              reduce using rule 86 (RE -> E .)
    R_PARSE         reduce using rule 86 (RE -> E .)
    R_TRUNC         reduce using rule 86 (RE -> E .)
    R_FLOAT         reduce using rule 86 (RE -> E .)
    R_STRING        reduce using rule 86 (RE -> E .)
    R_TYPEOF        reduce using rule 86 (RE -> E .)
    R_PUSH          reduce using rule 86 (RE -> E .)
    R_POP           reduce using rule 86 (RE -> E .)
    R_LENGTH        reduce using rule 86 (RE -> E .)
    R_MUTABLE       reduce using rule 86 (RE -> E .)
    R_STRUCT        reduce using rule 86 (RE -> E .)
    R_BREAK         reduce using rule 86 (RE -> E .)
    R_CONTINUE      reduce using rule 86 (RE -> E .)
    R_RETURN        reduce using rule 86 (RE -> E .)
    PARIZQ          reduce using rule 86 (RE -> E .)
    R_LOG10         reduce using rule 86 (RE -> E .)
    R_SIN           reduce using rule 86 (RE -> E .)
    R_COS           reduce using rule 86 (RE -> E .)
    R_TAN           reduce using rule 86 (RE -> E .)
    R_SQRT          reduce using rule 86 (RE -> E .)
    R_UPPERCASE     reduce using rule 86 (RE -> E .)
    R_LOWERCASE     reduce using rule 86 (RE -> E .)
    R_LOG           reduce using rule 86 (RE -> E .)
    DECIMAL         reduce using rule 86 (RE -> E .)
    ENTERO          reduce using rule 86 (RE -> E .)
    R_TRUE          reduce using rule 86 (RE -> E .)
    R_FALSE         reduce using rule 86 (RE -> E .)
    CADENA          reduce using rule 86 (RE -> E .)
    PTCOMA          reduce using rule 86 (RE -> E .)
    PARDER          reduce using rule 86 (RE -> E .)
    COMA            reduce using rule 86 (RE -> E .)
    DOSPUNTOS       reduce using rule 86 (RE -> E .)
    CORDER          reduce using rule 86 (RE -> E .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! MENOS           [ reduce using rule 86 (RE -> E .) ]


state 73

    (141) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 137


state 74

    (139) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> R_WHILE LO . R_END PTCOMA
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (129) INSTRUCCION_LOOP -> . IFS
    (130) INSTRUCCION_LOOP -> . FORS
    (131) INSTRUCCION_LOOP -> . WHILES
    (132) INSTRUCCION_LOOP -> . ASIGNACION
    (133) INSTRUCCION_LOOP -> . I
    (134) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (135) INSTRUCCION_LOOP -> . NATIVAS
    (136) INSTRUCCION_LOOP -> . STRUCTS
    (137) INSTRUCCION_LOOP -> . BREAK
    (138) INSTRUCCION_LOOP -> . CONTINUE
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 139
    AND             shift and go to state 124
    OR              shift and go to state 125
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES_LOOP             shift and go to state 138
    INSTRUCCION_LOOP               shift and go to state 140
    IFS                            shift and go to state 141
    FORS                           shift and go to state 142
    WHILES                         shift and go to state 143
    ASIGNACION                     shift and go to state 144
    I                              shift and go to state 145
    LLAMADAS                       shift and go to state 146
    NATIVAS                        shift and go to state 147
    STRUCTS                        shift and go to state 148
    BREAK                          shift and go to state 149
    CONTINUE                       shift and go to state 150
    E                              shift and go to state 24

state 75

    (34) ASIGNACION -> R_GLOBAL E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> R_GLOBAL E . IGUAL LISTA PTCOMA
    (40) ASIGNACION -> R_GLOBAL E . PTCOMA
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           shift and go to state 151
    PTCOMA          shift and go to state 152
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 76

    (36) ASIGNACION -> E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> E IGUAL . LISTA PTCOMA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 72
    LISTA                          shift and go to state 153
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 77

    (51) E -> E MAS . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 154
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 78

    (52) E -> E MENOS . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 155
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 79

    (53) E -> E POR . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 156
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 80

    (54) E -> E DIVIDIDO . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 157
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 81

    (55) E -> E MODAL . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 158
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 82

    (56) E -> E POTENCIA . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 159
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 83

    (35) ASIGNACION -> R_LOCAL E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_LOCAL E . IGUAL LISTA PTCOMA
    (41) ASIGNACION -> R_LOCAL E . PTCOMA
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           shift and go to state 160
    PTCOMA          shift and go to state 161
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 84

    (18) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (20) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (21) IMPRESIONES -> . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 166
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    IMPRESIONES                    shift and go to state 162
    IMPRESION                      shift and go to state 163
    ARREGLOS                       shift and go to state 164
    LO                             shift and go to state 165
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    LLAMADAS                       shift and go to state 65

state 85

    (19) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (20) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (21) IMPRESIONES -> . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 166
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    IMPRESIONES                    shift and go to state 167
    IMPRESION                      shift and go to state 163
    ARREGLOS                       shift and go to state 164
    LO                             shift and go to state 165
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    LLAMADAS                       shift and go to state 65

state 86

    (92) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 172
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174

    TIPO                           shift and go to state 168

state 87

    (93) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (97) NATIVAS -> R_TRUNC PARIZQ . LISTA PARDER
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 177
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    TIPO                           shift and go to state 175
    LISTA                          shift and go to state 176
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 88

    (94) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 178
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 89

    (95) NATIVAS -> R_STRING PARIZQ . LISTA PARDER
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 179
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 90

    (96) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 180
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 91

    (98) NATIVAS -> R_PUSH DIFERENTE . PARIZQ ID COMA E PARDER

    PARIZQ          shift and go to state 181


state 92

    (99) NATIVAS -> R_POP DIFERENTE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 182


state 93

    (100) NATIVAS -> R_LENGTH PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 183
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 94

    (147) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (149) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 184


state 95

    (148) STRUCTS -> R_STRUCT ID . ELEMENTOS PTCOMA
    (150) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (151) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (152) ELEMENTOS -> . ELEMENTO
    (153) ELEMENTO -> . ID
    (154) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 187
    ID              shift and go to state 185

    ELEMENTOS                      shift and go to state 186
    ELEMENTO                       shift and go to state 188

state 96

    (42) BREAK -> R_BREAK PTCOMA .

    R_IF            reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_FOR           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_WHILE         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_GLOBAL        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_LOCAL         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_PRINT         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_PRINTLN       reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    ID              reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_PARSE         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_TRUNC         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_FLOAT         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_STRING        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_TYPEOF        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_PUSH          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_POP           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_LENGTH        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_MUTABLE       reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_STRUCT        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_BREAK         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_CONTINUE      reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_RETURN        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    MENOS           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    PARIZQ          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_LOG10         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_SIN           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_COS           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_TAN           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_SQRT          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_UPPERCASE     reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_LOWERCASE     reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_LOG           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    DECIMAL         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    ENTERO          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_TRUE          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_FALSE         reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    CADENA          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_FUNCTION      reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    $end            reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_END           reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_ELSE          reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)
    R_ELSEIF        reduce using rule 42 (BREAK -> R_BREAK PTCOMA .)


state 97

    (126) CONTINUE -> R_CONTINUE PTCOMA .

    R_IF            reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FOR           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_WHILE         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_GLOBAL        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOCAL         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINT         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINTLN       reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    ID              reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PARSE         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUNC         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FLOAT         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRING        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TYPEOF        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PUSH          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_POP           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LENGTH        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_MUTABLE       reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRUCT        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_BREAK         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_CONTINUE      reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_RETURN        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    MENOS           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOG10         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_SIN           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_COS           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TAN           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_SQRT          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_UPPERCASE     reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOWERCASE     reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOG           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    ENTERO          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUE          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FALSE         reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    CADENA          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FUNCTION      reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    $end            reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_END           reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSE          reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSEIF        reduce using rule 126 (CONTINUE -> R_CONTINUE PTCOMA .)


state 98

    (101) RETURN -> R_RETURN LISTA . PTCOMA

    PTCOMA          shift and go to state 189


state 99

    (102) RETURN -> R_RETURN PTCOMA .

    R_IF            reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_FOR           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_WHILE         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_GLOBAL        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_LOCAL         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_PRINT         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_PRINTLN       reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    ID              reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_PARSE         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_TRUNC         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_FLOAT         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_STRING        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_TYPEOF        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_PUSH          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_POP           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_LENGTH        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_MUTABLE       reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_STRUCT        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_BREAK         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_CONTINUE      reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_RETURN        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    MENOS           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    PARIZQ          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_LOG10         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_SIN           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_COS           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_TAN           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_SQRT          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_UPPERCASE     reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_LOWERCASE     reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_LOG           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    DECIMAL         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    ENTERO          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_TRUE          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_FALSE         reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    CADENA          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_FUNCTION      reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    $end            reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_END           reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_ELSE          reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)
    R_ELSEIF        reduce using rule 102 (RETURN -> R_RETURN PTCOMA .)


state 100

    (32) LISTA -> ARREGLOS .
    (27) ARREGLOS -> ARREGLOS . COMA ARREGLO

  ! shift/reduce conflict for COMA resolved as shift
    PTCOMA          reduce using rule 32 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 32 (LISTA -> ARREGLOS .)
    DOSPUNTOS       reduce using rule 32 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 32 (LISTA -> ARREGLOS .)
    COMA            shift and go to state 190

  ! COMA            [ reduce using rule 32 (LISTA -> ARREGLOS .) ]


state 101

    (33) LISTA -> LO .
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    PTCOMA          reduce using rule 33 (LISTA -> LO .)
    PARDER          reduce using rule 33 (LISTA -> LO .)
    COMA            reduce using rule 33 (LISTA -> LO .)
    DOSPUNTOS       reduce using rule 33 (LISTA -> LO .)
    CORDER          reduce using rule 33 (LISTA -> LO .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 102

    (28) ARREGLOS -> ARREGLO .

    COMA            reduce using rule 28 (ARREGLOS -> ARREGLO .)
    PTCOMA          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    PARDER          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    DOSPUNTOS       reduce using rule 28 (ARREGLOS -> ARREGLO .)
    CORDER          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_END           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_IF            reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_FOR           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_WHILE         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_GLOBAL        reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_LOCAL         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_PRINT         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_PRINTLN       reduce using rule 28 (ARREGLOS -> ARREGLO .)
    ID              reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_PARSE         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_TRUNC         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_FLOAT         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_STRING        reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_TYPEOF        reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_PUSH          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_POP           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_LENGTH        reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_MUTABLE       reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_STRUCT        reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_BREAK         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_CONTINUE      reduce using rule 28 (ARREGLOS -> ARREGLO .)
    MENOS           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    PARIZQ          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_LOG10         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_SIN           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_COS           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_TAN           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_SQRT          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_UPPERCASE     reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_LOWERCASE     reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_LOG           reduce using rule 28 (ARREGLOS -> ARREGLO .)
    DECIMAL         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    ENTERO          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_TRUE          reduce using rule 28 (ARREGLOS -> ARREGLO .)
    R_FALSE         reduce using rule 28 (ARREGLOS -> ARREGLO .)
    CADENA          reduce using rule 28 (ARREGLOS -> ARREGLO .)


state 103

    (29) ARREGLO -> CORIZQ . LISTAS CORDER
    (30) LISTAS -> . LISTAS COMA LISTA
    (31) LISTAS -> . LISTA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTAS                         shift and go to state 191
    LISTA                          shift and go to state 116
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 104

    (57) E -> MENOS E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 57 (E -> MENOS E .)
    MAS             reduce using rule 57 (E -> MENOS E .)
    MENOS           reduce using rule 57 (E -> MENOS E .)
    POR             reduce using rule 57 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 57 (E -> MENOS E .)
    MODAL           reduce using rule 57 (E -> MENOS E .)
    POTENCIA        reduce using rule 57 (E -> MENOS E .)
    PARDER          reduce using rule 57 (E -> MENOS E .)
    MENQUE          reduce using rule 57 (E -> MENOS E .)
    MAYQUE          reduce using rule 57 (E -> MENOS E .)
    IGUALQUE        reduce using rule 57 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 57 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 57 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 57 (E -> MENOS E .)
    R_END           reduce using rule 57 (E -> MENOS E .)
    R_ELSE          reduce using rule 57 (E -> MENOS E .)
    AND             reduce using rule 57 (E -> MENOS E .)
    OR              reduce using rule 57 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 57 (E -> MENOS E .)
    R_IF            reduce using rule 57 (E -> MENOS E .)
    R_FOR           reduce using rule 57 (E -> MENOS E .)
    R_WHILE         reduce using rule 57 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 57 (E -> MENOS E .)
    R_LOCAL         reduce using rule 57 (E -> MENOS E .)
    R_PRINT         reduce using rule 57 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 57 (E -> MENOS E .)
    ID              reduce using rule 57 (E -> MENOS E .)
    R_PARSE         reduce using rule 57 (E -> MENOS E .)
    R_TRUNC         reduce using rule 57 (E -> MENOS E .)
    R_FLOAT         reduce using rule 57 (E -> MENOS E .)
    R_STRING        reduce using rule 57 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 57 (E -> MENOS E .)
    R_PUSH          reduce using rule 57 (E -> MENOS E .)
    R_POP           reduce using rule 57 (E -> MENOS E .)
    R_LENGTH        reduce using rule 57 (E -> MENOS E .)
    R_MUTABLE       reduce using rule 57 (E -> MENOS E .)
    R_STRUCT        reduce using rule 57 (E -> MENOS E .)
    R_BREAK         reduce using rule 57 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 57 (E -> MENOS E .)
    R_RETURN        reduce using rule 57 (E -> MENOS E .)
    PARIZQ          reduce using rule 57 (E -> MENOS E .)
    R_LOG10         reduce using rule 57 (E -> MENOS E .)
    R_SIN           reduce using rule 57 (E -> MENOS E .)
    R_COS           reduce using rule 57 (E -> MENOS E .)
    R_TAN           reduce using rule 57 (E -> MENOS E .)
    R_SQRT          reduce using rule 57 (E -> MENOS E .)
    R_UPPERCASE     reduce using rule 57 (E -> MENOS E .)
    R_LOWERCASE     reduce using rule 57 (E -> MENOS E .)
    R_LOG           reduce using rule 57 (E -> MENOS E .)
    DECIMAL         reduce using rule 57 (E -> MENOS E .)
    ENTERO          reduce using rule 57 (E -> MENOS E .)
    R_TRUE          reduce using rule 57 (E -> MENOS E .)
    R_FALSE         reduce using rule 57 (E -> MENOS E .)
    CADENA          reduce using rule 57 (E -> MENOS E .)
    PTCOMA          reduce using rule 57 (E -> MENOS E .)
    COMA            reduce using rule 57 (E -> MENOS E .)
    CORDER          reduce using rule 57 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 57 (E -> MENOS E .)
    DOSPUNTITOS     reduce using rule 57 (E -> MENOS E .)

  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! DIVIDIDO        [ shift and go to state 80 ]
  ! MODAL           [ shift and go to state 81 ]
  ! POTENCIA        [ shift and go to state 82 ]


state 105

    (59) E -> R_LOG10 PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 192
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 106

    (60) E -> R_SIN PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 193
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 107

    (61) E -> R_COS PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 194
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 108

    (62) E -> R_TAN PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 195
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 109

    (63) E -> R_SQRT PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 196
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 110

    (64) E -> R_UPPERCASE PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 197
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 111

    (65) E -> R_LOWERCASE PARIZQ . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 198
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 112

    (66) E -> R_LOG PARIZQ . E COMA E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 199
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 113

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (107) PARAMETROS -> . PARAMETROS COMA PARAMETRO
    (108) PARAMETROS -> . PARAMETRO
    (109) PARAMETRO -> . ID

    PARDER          shift and go to state 202
    ID              shift and go to state 200

    PARAMETROS                     shift and go to state 201
    PARAMETRO                      shift and go to state 203

state 114

    (49) LLAMADAS -> ID PARIZQ LISTAS . PARDER
    (30) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 204
    COMA            shift and go to state 205


state 115

    (50) LLAMADAS -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MAS             reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    POR             reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MODAL           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_END           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSE          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    AND             reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    OR              reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSEIF        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_IF            reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FOR           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_WHILE         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_GLOBAL        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOCAL         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINT         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINTLN       reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    ID              reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PARSE         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TRUNC         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FLOAT         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_STRING        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TYPEOF        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PUSH          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_POP           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LENGTH        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_MUTABLE       reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_STRUCT        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_BREAK         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_CONTINUE      reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_RETURN        reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    PARIZQ          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOG10         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_SIN           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_COS           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TAN           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_SQRT          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_UPPERCASE     reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOWERCASE     reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOG           reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    DECIMAL         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    ENTERO          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TRUE          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FALSE         reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    CADENA          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    COMA            reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTITOS     reduce using rule 50 (LLAMADAS -> ID PARIZQ PARDER .)


state 116

    (31) LISTAS -> LISTA .

    PARDER          reduce using rule 31 (LISTAS -> LISTA .)
    COMA            reduce using rule 31 (LISTAS -> LISTA .)
    CORDER          reduce using rule 31 (LISTAS -> LISTA .)


state 117

    (74) ARRAYS -> ARRAYS ARRAY .

    CORIZQ          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    IGUAL           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MAS             reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MENOS           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    POR             reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    DIVIDIDO        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MODAL           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    POTENCIA        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    PARDER          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MENQUE          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MAYQUE          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    IGUALQUE        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    NIGUALQUE       reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MENORIGUAL      reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    MAYORIGUAL      reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_END           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_ELSE          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    AND             reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    OR              reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_ELSEIF        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_IF            reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_FOR           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_WHILE         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_GLOBAL        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_LOCAL         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_PRINT         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_PRINTLN       reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    ID              reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_PARSE         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_TRUNC         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_FLOAT         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_STRING        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_TYPEOF        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_PUSH          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_POP           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_LENGTH        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_MUTABLE       reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_STRUCT        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_BREAK         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_CONTINUE      reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_RETURN        reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    PARIZQ          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_LOG10         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_SIN           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_COS           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_TAN           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_SQRT          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_UPPERCASE     reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_LOWERCASE     reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_LOG           reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    DECIMAL         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    ENTERO          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_TRUE          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    R_FALSE         reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    CADENA          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    PTCOMA          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    COMA            reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    CORDER          reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    DOSPUNTOS       reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)
    DOSPUNTITOS     reduce using rule 74 (ARRAYS -> ARRAYS ARRAY .)


state 118

    (76) ARRAY -> CORIZQ E . CORDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    CORDER          shift and go to state 206
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 119

    (58) E -> PARIZQ E PARDER .

    IGUAL           reduce using rule 58 (E -> PARIZQ E PARDER .)
    MAS             reduce using rule 58 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 58 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 58 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 58 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 58 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 58 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 58 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 58 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 58 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 58 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 58 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 58 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 58 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 58 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 58 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_STRING        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_RETURN        reduce using rule 58 (E -> PARIZQ E PARDER .)
    PARIZQ          reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_LOG10         reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_SIN           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_COS           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_TAN           reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_SQRT          reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_LOG           reduce using rule 58 (E -> PARIZQ E PARDER .)
    DECIMAL         reduce using rule 58 (E -> PARIZQ E PARDER .)
    ENTERO          reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_TRUE          reduce using rule 58 (E -> PARIZQ E PARDER .)
    R_FALSE         reduce using rule 58 (E -> PARIZQ E PARDER .)
    CADENA          reduce using rule 58 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 58 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 58 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 58 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 58 (E -> PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 58 (E -> PARIZQ E PARDER .)


state 120

    (110) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (111) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (116) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (118) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO ELSEIF
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 207
    R_ELSE          shift and go to state 208
    R_ELSEIF        shift and go to state 126
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    ELSEIF                         shift and go to state 209
    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 121

    (113) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 210


state 122

    (114) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (117) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 212
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 211
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 123

    (115) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_STRING        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_LENGTH        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    MENOS           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    PARIZQ          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_LOG10         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_SIN           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_COS           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_TAN           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_SQRT          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_UPPERCASE     reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_LOWERCASE     reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_LOG           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    DECIMAL         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    ENTERO          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_TRUE          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_FALSE         reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    CADENA          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 115 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 115 (IFS -> R_IF LO ELSEIF .)


state 124

    (87) LO -> LO AND . LO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 213
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 125

    (88) LO -> LO OR . LO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 214
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 126

    (118) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (121) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> R_ELSEIF . LO ELSEIF
    (124) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LO                             shift and go to state 215
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 127

    (89) LO -> DIFERENTE LO .
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    R_END           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 89 (LO -> DIFERENTE LO .)
    AND             reduce using rule 89 (LO -> DIFERENTE LO .)
    OR              reduce using rule 89 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 89 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 89 (LO -> DIFERENTE LO .)
    ID              reduce using rule 89 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_STRING        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 89 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_LENGTH        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_MUTABLE       reduce using rule 89 (LO -> DIFERENTE LO .)
    R_STRUCT        reduce using rule 89 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 89 (LO -> DIFERENTE LO .)
    R_RETURN        reduce using rule 89 (LO -> DIFERENTE LO .)
    MENOS           reduce using rule 89 (LO -> DIFERENTE LO .)
    PARIZQ          reduce using rule 89 (LO -> DIFERENTE LO .)
    R_LOG10         reduce using rule 89 (LO -> DIFERENTE LO .)
    R_SIN           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_COS           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_TAN           reduce using rule 89 (LO -> DIFERENTE LO .)
    R_SQRT          reduce using rule 89 (LO -> DIFERENTE LO .)
    R_UPPERCASE     reduce using rule 89 (LO -> DIFERENTE LO .)
    R_LOWERCASE     reduce using rule 89 (LO -> DIFERENTE LO .)
    R_LOG           reduce using rule 89 (LO -> DIFERENTE LO .)
    DECIMAL         reduce using rule 89 (LO -> DIFERENTE LO .)
    ENTERO          reduce using rule 89 (LO -> DIFERENTE LO .)
    R_TRUE          reduce using rule 89 (LO -> DIFERENTE LO .)
    R_FALSE         reduce using rule 89 (LO -> DIFERENTE LO .)
    CADENA          reduce using rule 89 (LO -> DIFERENTE LO .)
    PTCOMA          reduce using rule 89 (LO -> DIFERENTE LO .)
    PARDER          reduce using rule 89 (LO -> DIFERENTE LO .)
    COMA            reduce using rule 89 (LO -> DIFERENTE LO .)
    DOSPUNTOS       reduce using rule 89 (LO -> DIFERENTE LO .)
    CORDER          reduce using rule 89 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 125 ]


state 128

    (90) LO -> PARIZQ LO . PARDER
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    PARDER          shift and go to state 216
    AND             shift and go to state 124
    OR              shift and go to state 125


state 129

    (85) RE -> PARIZQ RE . PARDER
    (91) LO -> RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 217
    AND             reduce using rule 91 (LO -> RE .)
    OR              reduce using rule 91 (LO -> RE .)
    MENQUE          shift and go to state 131
    MAYQUE          shift and go to state 132
    IGUALQUE        shift and go to state 133
    NIGUALQUE       shift and go to state 134
    MENORIGUAL      shift and go to state 135
    MAYORIGUAL      shift and go to state 136

  ! PARDER          [ reduce using rule 91 (LO -> RE .) ]


state 130

    (58) E -> PARIZQ E . PARDER
    (86) RE -> E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 119
    MENQUE          reduce using rule 86 (RE -> E .)
    MAYQUE          reduce using rule 86 (RE -> E .)
    IGUALQUE        reduce using rule 86 (RE -> E .)
    NIGUALQUE       reduce using rule 86 (RE -> E .)
    MENORIGUAL      reduce using rule 86 (RE -> E .)
    MAYORIGUAL      reduce using rule 86 (RE -> E .)
    AND             reduce using rule 86 (RE -> E .)
    OR              reduce using rule 86 (RE -> E .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! PARDER          [ reduce using rule 86 (RE -> E .) ]


state 131

    (79) RE -> RE MENQUE . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 218
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 132

    (80) RE -> RE MAYQUE . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 220
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 133

    (81) RE -> RE IGUALQUE . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 221
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 134

    (82) RE -> RE NIGUALQUE . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 222
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 135

    (83) RE -> RE MENORIGUAL . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 223
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 136

    (84) RE -> RE MAYORIGUAL . RE
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 224
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 137

    (141) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (143) RANGO -> . E DOSPUNTITOS E
    (144) RANGO -> . E
    (145) RANGO -> . ARREGLOS
    (146) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (29) ARREGLO -> . CORIZQ LISTAS CORDER

    ID              shift and go to state 225
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    CORIZQ          shift and go to state 103

    RANGO                          shift and go to state 226
    E                              shift and go to state 227
    ARREGLOS                       shift and go to state 228
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65
    ARREGLO                        shift and go to state 102

state 138

    (139) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (129) INSTRUCCION_LOOP -> . IFS
    (130) INSTRUCCION_LOOP -> . FORS
    (131) INSTRUCCION_LOOP -> . WHILES
    (132) INSTRUCCION_LOOP -> . ASIGNACION
    (133) INSTRUCCION_LOOP -> . I
    (134) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (135) INSTRUCCION_LOOP -> . NATIVAS
    (136) INSTRUCCION_LOOP -> . STRUCTS
    (137) INSTRUCCION_LOOP -> . BREAK
    (138) INSTRUCCION_LOOP -> . CONTINUE
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 229
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION_LOOP               shift and go to state 230
    IFS                            shift and go to state 141
    FORS                           shift and go to state 142
    WHILES                         shift and go to state 143
    ASIGNACION                     shift and go to state 144
    I                              shift and go to state 145
    LLAMADAS                       shift and go to state 146
    NATIVAS                        shift and go to state 147
    STRUCTS                        shift and go to state 148
    BREAK                          shift and go to state 149
    CONTINUE                       shift and go to state 150
    E                              shift and go to state 24

state 139

    (140) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 231


state 140

    (128) INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .

    R_END           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_IF            reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    ID              reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_POP           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LENGTH        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_MUTABLE       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_STRUCT        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    MENOS           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    PARIZQ          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOG10         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_SIN           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_COS           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TAN           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_SQRT          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_UPPERCASE     reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOWERCASE     reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOG           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    DECIMAL         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    ENTERO          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TRUE          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FALSE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    CADENA          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)


state 141

    (129) INSTRUCCION_LOOP -> IFS .

    R_END           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_IF            reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_FOR           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_WHILE         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_LOCAL         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_PRINT         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    ID              reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_PARSE         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_TRUNC         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_FLOAT         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_STRING        reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_PUSH          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_POP           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_LENGTH        reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_MUTABLE       reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_STRUCT        reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_BREAK         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    MENOS           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    PARIZQ          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_LOG10         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_SIN           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_COS           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_TAN           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_SQRT          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_UPPERCASE     reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_LOWERCASE     reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_LOG           reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    DECIMAL         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    ENTERO          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_TRUE          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    R_FALSE         reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)
    CADENA          reduce using rule 129 (INSTRUCCION_LOOP -> IFS .)


state 142

    (130) INSTRUCCION_LOOP -> FORS .

    R_END           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_IF            reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_FOR           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_WHILE         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_LOCAL         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_PRINT         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    ID              reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_PARSE         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_TRUNC         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_FLOAT         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_STRING        reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_PUSH          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_POP           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_LENGTH        reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_MUTABLE       reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_STRUCT        reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_BREAK         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    MENOS           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    PARIZQ          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_LOG10         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_SIN           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_COS           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_TAN           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_SQRT          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_UPPERCASE     reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_LOWERCASE     reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_LOG           reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    DECIMAL         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    ENTERO          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_TRUE          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    R_FALSE         reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)
    CADENA          reduce using rule 130 (INSTRUCCION_LOOP -> FORS .)


state 143

    (131) INSTRUCCION_LOOP -> WHILES .

    R_END           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_IF            reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_FOR           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_WHILE         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINT         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    ID              reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_PARSE         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_STRING        reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_PUSH          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_POP           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_LENGTH        reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_MUTABLE       reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_STRUCT        reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_BREAK         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    MENOS           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    PARIZQ          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_LOG10         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_SIN           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_COS           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_TAN           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_SQRT          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_UPPERCASE     reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_LOWERCASE     reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_LOG           reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    DECIMAL         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    ENTERO          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_TRUE          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    R_FALSE         reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)
    CADENA          reduce using rule 131 (INSTRUCCION_LOOP -> WHILES .)


state 144

    (132) INSTRUCCION_LOOP -> ASIGNACION .

    R_END           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    ID              reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_STRING        reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LENGTH        reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_MUTABLE       reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_STRUCT        reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    MENOS           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    PARIZQ          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOG10         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_SIN           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_COS           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TAN           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_SQRT          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_UPPERCASE     reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOWERCASE     reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOG           reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    DECIMAL         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    ENTERO          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TRUE          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FALSE         reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)
    CADENA          reduce using rule 132 (INSTRUCCION_LOOP -> ASIGNACION .)


state 145

    (133) INSTRUCCION_LOOP -> I .

    R_END           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_IF            reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_FOR           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_WHILE         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_GLOBAL        reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_LOCAL         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_PRINT         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_PRINTLN       reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    ID              reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_PARSE         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_TRUNC         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_FLOAT         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_STRING        reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_TYPEOF        reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_PUSH          reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_POP           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_LENGTH        reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_MUTABLE       reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_STRUCT        reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_BREAK         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_CONTINUE      reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    MENOS           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    PARIZQ          reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_LOG10         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_SIN           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_COS           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_TAN           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_SQRT          reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_UPPERCASE     reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_LOWERCASE     reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_LOG           reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    DECIMAL         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    ENTERO          reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_TRUE          reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    R_FALSE         reduce using rule 133 (INSTRUCCION_LOOP -> I .)
    CADENA          reduce using rule 133 (INSTRUCCION_LOOP -> I .)


state 146

    (134) INSTRUCCION_LOOP -> LLAMADAS . PTCOMA
    (78) E -> LLAMADAS .

    PTCOMA          shift and go to state 232
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)


state 147

    (135) INSTRUCCION_LOOP -> NATIVAS .
    (77) E -> NATIVAS .

  ! reduce/reduce conflict for MENOS resolved using rule 77 (E -> NATIVAS .)
    R_END           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_IF            reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_FOR           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_WHILE         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LOCAL         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PRINT         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    ID              reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PARSE         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TRUNC         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_FLOAT         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_STRING        reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PUSH          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_POP           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LENGTH        reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_MUTABLE       reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_STRUCT        reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_BREAK         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    PARIZQ          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LOG10         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_SIN           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_COS           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TAN           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_SQRT          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_UPPERCASE     reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LOWERCASE     reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LOG           reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    DECIMAL         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    ENTERO          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TRUE          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    R_FALSE         reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    CADENA          reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .)
    IGUAL           reduce using rule 77 (E -> NATIVAS .)
    MAS             reduce using rule 77 (E -> NATIVAS .)
    MENOS           reduce using rule 77 (E -> NATIVAS .)
    POR             reduce using rule 77 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 77 (E -> NATIVAS .)
    MODAL           reduce using rule 77 (E -> NATIVAS .)
    POTENCIA        reduce using rule 77 (E -> NATIVAS .)

  ! MENOS           [ reduce using rule 135 (INSTRUCCION_LOOP -> NATIVAS .) ]


state 148

    (136) INSTRUCCION_LOOP -> STRUCTS .

    R_END           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_IF            reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_FOR           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_WHILE         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_GLOBAL        reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LOCAL         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PRINT         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PRINTLN       reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    ID              reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PARSE         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TRUNC         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_FLOAT         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_STRING        reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TYPEOF        reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PUSH          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_POP           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LENGTH        reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_MUTABLE       reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_STRUCT        reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_BREAK         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_CONTINUE      reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    MENOS           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    PARIZQ          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LOG10         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_SIN           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_COS           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TAN           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_SQRT          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_UPPERCASE     reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LOWERCASE     reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LOG           reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    DECIMAL         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    ENTERO          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TRUE          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    R_FALSE         reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)
    CADENA          reduce using rule 136 (INSTRUCCION_LOOP -> STRUCTS .)


state 149

    (137) INSTRUCCION_LOOP -> BREAK .

    R_END           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_IF            reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_FOR           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_WHILE         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_GLOBAL        reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_LOCAL         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINT         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINTLN       reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    ID              reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_PARSE         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_TRUNC         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_FLOAT         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_STRING        reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_TYPEOF        reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_PUSH          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_POP           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_LENGTH        reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_MUTABLE       reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_STRUCT        reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_BREAK         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_CONTINUE      reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    MENOS           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    PARIZQ          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_LOG10         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_SIN           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_COS           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_TAN           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_SQRT          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_UPPERCASE     reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_LOWERCASE     reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_LOG           reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    DECIMAL         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    ENTERO          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_TRUE          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    R_FALSE         reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)
    CADENA          reduce using rule 137 (INSTRUCCION_LOOP -> BREAK .)


state 150

    (138) INSTRUCCION_LOOP -> CONTINUE .

    R_END           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_IF            reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FOR           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_WHILE         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_GLOBAL        reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOCAL         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINT         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINTLN       reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    ID              reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PARSE         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TRUNC         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FLOAT         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_STRING        reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TYPEOF        reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PUSH          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_POP           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LENGTH        reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_MUTABLE       reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_STRUCT        reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_BREAK         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_CONTINUE      reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    MENOS           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    PARIZQ          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOG10         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_SIN           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_COS           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TAN           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_SQRT          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_UPPERCASE     reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOWERCASE     reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOG           reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    DECIMAL         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    ENTERO          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TRUE          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FALSE         reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)
    CADENA          reduce using rule 138 (INSTRUCCION_LOOP -> CONTINUE .)


state 151

    (34) ASIGNACION -> R_GLOBAL E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> R_GLOBAL E IGUAL . LISTA PTCOMA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 72
    LISTA                          shift and go to state 233
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 152

    (40) ASIGNACION -> R_GLOBAL E PTCOMA .

    R_IF            reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FOR           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_WHILE         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_GLOBAL        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOCAL         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PRINT         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PRINTLN       reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    ID              reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PARSE         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TRUNC         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FLOAT         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_STRING        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TYPEOF        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PUSH          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_POP           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LENGTH        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_MUTABLE       reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_STRUCT        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_BREAK         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_CONTINUE      reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_RETURN        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    MENOS           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    PARIZQ          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOG10         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_SIN           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_COS           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TAN           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_SQRT          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_UPPERCASE     reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOWERCASE     reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOG           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    DECIMAL         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    ENTERO          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TRUE          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FALSE         reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    CADENA          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FUNCTION      reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    $end            reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_END           reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_ELSE          reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_ELSEIF        reduce using rule 40 (ASIGNACION -> R_GLOBAL E PTCOMA .)


state 153

    (36) ASIGNACION -> E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 234
    PTCOMA          shift and go to state 235


state 154

    (51) E -> E MAS E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 51 (E -> E MAS E .)
    MAS             reduce using rule 51 (E -> E MAS E .)
    MENOS           reduce using rule 51 (E -> E MAS E .)
    PARDER          reduce using rule 51 (E -> E MAS E .)
    MENQUE          reduce using rule 51 (E -> E MAS E .)
    MAYQUE          reduce using rule 51 (E -> E MAS E .)
    IGUALQUE        reduce using rule 51 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 51 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 51 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 51 (E -> E MAS E .)
    R_END           reduce using rule 51 (E -> E MAS E .)
    R_ELSE          reduce using rule 51 (E -> E MAS E .)
    AND             reduce using rule 51 (E -> E MAS E .)
    OR              reduce using rule 51 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 51 (E -> E MAS E .)
    R_IF            reduce using rule 51 (E -> E MAS E .)
    R_FOR           reduce using rule 51 (E -> E MAS E .)
    R_WHILE         reduce using rule 51 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 51 (E -> E MAS E .)
    R_LOCAL         reduce using rule 51 (E -> E MAS E .)
    R_PRINT         reduce using rule 51 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 51 (E -> E MAS E .)
    ID              reduce using rule 51 (E -> E MAS E .)
    R_PARSE         reduce using rule 51 (E -> E MAS E .)
    R_TRUNC         reduce using rule 51 (E -> E MAS E .)
    R_FLOAT         reduce using rule 51 (E -> E MAS E .)
    R_STRING        reduce using rule 51 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 51 (E -> E MAS E .)
    R_PUSH          reduce using rule 51 (E -> E MAS E .)
    R_POP           reduce using rule 51 (E -> E MAS E .)
    R_LENGTH        reduce using rule 51 (E -> E MAS E .)
    R_MUTABLE       reduce using rule 51 (E -> E MAS E .)
    R_STRUCT        reduce using rule 51 (E -> E MAS E .)
    R_BREAK         reduce using rule 51 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 51 (E -> E MAS E .)
    R_RETURN        reduce using rule 51 (E -> E MAS E .)
    PARIZQ          reduce using rule 51 (E -> E MAS E .)
    R_LOG10         reduce using rule 51 (E -> E MAS E .)
    R_SIN           reduce using rule 51 (E -> E MAS E .)
    R_COS           reduce using rule 51 (E -> E MAS E .)
    R_TAN           reduce using rule 51 (E -> E MAS E .)
    R_SQRT          reduce using rule 51 (E -> E MAS E .)
    R_UPPERCASE     reduce using rule 51 (E -> E MAS E .)
    R_LOWERCASE     reduce using rule 51 (E -> E MAS E .)
    R_LOG           reduce using rule 51 (E -> E MAS E .)
    DECIMAL         reduce using rule 51 (E -> E MAS E .)
    ENTERO          reduce using rule 51 (E -> E MAS E .)
    R_TRUE          reduce using rule 51 (E -> E MAS E .)
    R_FALSE         reduce using rule 51 (E -> E MAS E .)
    CADENA          reduce using rule 51 (E -> E MAS E .)
    PTCOMA          reduce using rule 51 (E -> E MAS E .)
    COMA            reduce using rule 51 (E -> E MAS E .)
    CORDER          reduce using rule 51 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 51 (E -> E MAS E .)
    DOSPUNTITOS     reduce using rule 51 (E -> E MAS E .)
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! POR             [ reduce using rule 51 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 51 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 51 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 51 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]


state 155

    (52) E -> E MENOS E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 52 (E -> E MENOS E .)
    MAS             reduce using rule 52 (E -> E MENOS E .)
    MENOS           reduce using rule 52 (E -> E MENOS E .)
    PARDER          reduce using rule 52 (E -> E MENOS E .)
    MENQUE          reduce using rule 52 (E -> E MENOS E .)
    MAYQUE          reduce using rule 52 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 52 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 52 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 52 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 52 (E -> E MENOS E .)
    R_END           reduce using rule 52 (E -> E MENOS E .)
    R_ELSE          reduce using rule 52 (E -> E MENOS E .)
    AND             reduce using rule 52 (E -> E MENOS E .)
    OR              reduce using rule 52 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 52 (E -> E MENOS E .)
    R_IF            reduce using rule 52 (E -> E MENOS E .)
    R_FOR           reduce using rule 52 (E -> E MENOS E .)
    R_WHILE         reduce using rule 52 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 52 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 52 (E -> E MENOS E .)
    R_PRINT         reduce using rule 52 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 52 (E -> E MENOS E .)
    ID              reduce using rule 52 (E -> E MENOS E .)
    R_PARSE         reduce using rule 52 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 52 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 52 (E -> E MENOS E .)
    R_STRING        reduce using rule 52 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 52 (E -> E MENOS E .)
    R_PUSH          reduce using rule 52 (E -> E MENOS E .)
    R_POP           reduce using rule 52 (E -> E MENOS E .)
    R_LENGTH        reduce using rule 52 (E -> E MENOS E .)
    R_MUTABLE       reduce using rule 52 (E -> E MENOS E .)
    R_STRUCT        reduce using rule 52 (E -> E MENOS E .)
    R_BREAK         reduce using rule 52 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 52 (E -> E MENOS E .)
    R_RETURN        reduce using rule 52 (E -> E MENOS E .)
    PARIZQ          reduce using rule 52 (E -> E MENOS E .)
    R_LOG10         reduce using rule 52 (E -> E MENOS E .)
    R_SIN           reduce using rule 52 (E -> E MENOS E .)
    R_COS           reduce using rule 52 (E -> E MENOS E .)
    R_TAN           reduce using rule 52 (E -> E MENOS E .)
    R_SQRT          reduce using rule 52 (E -> E MENOS E .)
    R_UPPERCASE     reduce using rule 52 (E -> E MENOS E .)
    R_LOWERCASE     reduce using rule 52 (E -> E MENOS E .)
    R_LOG           reduce using rule 52 (E -> E MENOS E .)
    DECIMAL         reduce using rule 52 (E -> E MENOS E .)
    ENTERO          reduce using rule 52 (E -> E MENOS E .)
    R_TRUE          reduce using rule 52 (E -> E MENOS E .)
    R_FALSE         reduce using rule 52 (E -> E MENOS E .)
    CADENA          reduce using rule 52 (E -> E MENOS E .)
    PTCOMA          reduce using rule 52 (E -> E MENOS E .)
    COMA            reduce using rule 52 (E -> E MENOS E .)
    CORDER          reduce using rule 52 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 52 (E -> E MENOS E .)
    DOSPUNTITOS     reduce using rule 52 (E -> E MENOS E .)
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! POR             [ reduce using rule 52 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 52 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 52 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 52 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]


state 156

    (53) E -> E POR E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 53 (E -> E POR E .)
    MAS             reduce using rule 53 (E -> E POR E .)
    MENOS           reduce using rule 53 (E -> E POR E .)
    POR             reduce using rule 53 (E -> E POR E .)
    DIVIDIDO        reduce using rule 53 (E -> E POR E .)
    MODAL           reduce using rule 53 (E -> E POR E .)
    PARDER          reduce using rule 53 (E -> E POR E .)
    MENQUE          reduce using rule 53 (E -> E POR E .)
    MAYQUE          reduce using rule 53 (E -> E POR E .)
    IGUALQUE        reduce using rule 53 (E -> E POR E .)
    NIGUALQUE       reduce using rule 53 (E -> E POR E .)
    MENORIGUAL      reduce using rule 53 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 53 (E -> E POR E .)
    R_END           reduce using rule 53 (E -> E POR E .)
    R_ELSE          reduce using rule 53 (E -> E POR E .)
    AND             reduce using rule 53 (E -> E POR E .)
    OR              reduce using rule 53 (E -> E POR E .)
    R_ELSEIF        reduce using rule 53 (E -> E POR E .)
    R_IF            reduce using rule 53 (E -> E POR E .)
    R_FOR           reduce using rule 53 (E -> E POR E .)
    R_WHILE         reduce using rule 53 (E -> E POR E .)
    R_GLOBAL        reduce using rule 53 (E -> E POR E .)
    R_LOCAL         reduce using rule 53 (E -> E POR E .)
    R_PRINT         reduce using rule 53 (E -> E POR E .)
    R_PRINTLN       reduce using rule 53 (E -> E POR E .)
    ID              reduce using rule 53 (E -> E POR E .)
    R_PARSE         reduce using rule 53 (E -> E POR E .)
    R_TRUNC         reduce using rule 53 (E -> E POR E .)
    R_FLOAT         reduce using rule 53 (E -> E POR E .)
    R_STRING        reduce using rule 53 (E -> E POR E .)
    R_TYPEOF        reduce using rule 53 (E -> E POR E .)
    R_PUSH          reduce using rule 53 (E -> E POR E .)
    R_POP           reduce using rule 53 (E -> E POR E .)
    R_LENGTH        reduce using rule 53 (E -> E POR E .)
    R_MUTABLE       reduce using rule 53 (E -> E POR E .)
    R_STRUCT        reduce using rule 53 (E -> E POR E .)
    R_BREAK         reduce using rule 53 (E -> E POR E .)
    R_CONTINUE      reduce using rule 53 (E -> E POR E .)
    R_RETURN        reduce using rule 53 (E -> E POR E .)
    PARIZQ          reduce using rule 53 (E -> E POR E .)
    R_LOG10         reduce using rule 53 (E -> E POR E .)
    R_SIN           reduce using rule 53 (E -> E POR E .)
    R_COS           reduce using rule 53 (E -> E POR E .)
    R_TAN           reduce using rule 53 (E -> E POR E .)
    R_SQRT          reduce using rule 53 (E -> E POR E .)
    R_UPPERCASE     reduce using rule 53 (E -> E POR E .)
    R_LOWERCASE     reduce using rule 53 (E -> E POR E .)
    R_LOG           reduce using rule 53 (E -> E POR E .)
    DECIMAL         reduce using rule 53 (E -> E POR E .)
    ENTERO          reduce using rule 53 (E -> E POR E .)
    R_TRUE          reduce using rule 53 (E -> E POR E .)
    R_FALSE         reduce using rule 53 (E -> E POR E .)
    CADENA          reduce using rule 53 (E -> E POR E .)
    PTCOMA          reduce using rule 53 (E -> E POR E .)
    COMA            reduce using rule 53 (E -> E POR E .)
    CORDER          reduce using rule 53 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 53 (E -> E POR E .)
    DOSPUNTITOS     reduce using rule 53 (E -> E POR E .)
    POTENCIA        shift and go to state 82

  ! POTENCIA        [ reduce using rule 53 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! DIVIDIDO        [ shift and go to state 80 ]
  ! MODAL           [ shift and go to state 81 ]


state 157

    (54) E -> E DIVIDIDO E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 54 (E -> E DIVIDIDO E .)
    MAS             reduce using rule 54 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 54 (E -> E DIVIDIDO E .)
    POR             reduce using rule 54 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 54 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 54 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 54 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 54 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 54 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 54 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 54 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 54 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 54 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 54 (E -> E DIVIDIDO E .)
    AND             reduce using rule 54 (E -> E DIVIDIDO E .)
    OR              reduce using rule 54 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 54 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 54 (E -> E DIVIDIDO E .)
    ID              reduce using rule 54 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_STRING        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 54 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_LENGTH        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_MUTABLE       reduce using rule 54 (E -> E DIVIDIDO E .)
    R_STRUCT        reduce using rule 54 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 54 (E -> E DIVIDIDO E .)
    R_RETURN        reduce using rule 54 (E -> E DIVIDIDO E .)
    PARIZQ          reduce using rule 54 (E -> E DIVIDIDO E .)
    R_LOG10         reduce using rule 54 (E -> E DIVIDIDO E .)
    R_SIN           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_COS           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_TAN           reduce using rule 54 (E -> E DIVIDIDO E .)
    R_SQRT          reduce using rule 54 (E -> E DIVIDIDO E .)
    R_UPPERCASE     reduce using rule 54 (E -> E DIVIDIDO E .)
    R_LOWERCASE     reduce using rule 54 (E -> E DIVIDIDO E .)
    R_LOG           reduce using rule 54 (E -> E DIVIDIDO E .)
    DECIMAL         reduce using rule 54 (E -> E DIVIDIDO E .)
    ENTERO          reduce using rule 54 (E -> E DIVIDIDO E .)
    R_TRUE          reduce using rule 54 (E -> E DIVIDIDO E .)
    R_FALSE         reduce using rule 54 (E -> E DIVIDIDO E .)
    CADENA          reduce using rule 54 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 54 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 54 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 54 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 54 (E -> E DIVIDIDO E .)
    DOSPUNTITOS     reduce using rule 54 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 82

  ! POTENCIA        [ reduce using rule 54 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! DIVIDIDO        [ shift and go to state 80 ]
  ! MODAL           [ shift and go to state 81 ]


state 158

    (55) E -> E MODAL E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 55 (E -> E MODAL E .)
    MAS             reduce using rule 55 (E -> E MODAL E .)
    MENOS           reduce using rule 55 (E -> E MODAL E .)
    POR             reduce using rule 55 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 55 (E -> E MODAL E .)
    MODAL           reduce using rule 55 (E -> E MODAL E .)
    PARDER          reduce using rule 55 (E -> E MODAL E .)
    MENQUE          reduce using rule 55 (E -> E MODAL E .)
    MAYQUE          reduce using rule 55 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 55 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 55 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 55 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 55 (E -> E MODAL E .)
    R_END           reduce using rule 55 (E -> E MODAL E .)
    R_ELSE          reduce using rule 55 (E -> E MODAL E .)
    AND             reduce using rule 55 (E -> E MODAL E .)
    OR              reduce using rule 55 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 55 (E -> E MODAL E .)
    R_IF            reduce using rule 55 (E -> E MODAL E .)
    R_FOR           reduce using rule 55 (E -> E MODAL E .)
    R_WHILE         reduce using rule 55 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 55 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 55 (E -> E MODAL E .)
    R_PRINT         reduce using rule 55 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 55 (E -> E MODAL E .)
    ID              reduce using rule 55 (E -> E MODAL E .)
    R_PARSE         reduce using rule 55 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 55 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 55 (E -> E MODAL E .)
    R_STRING        reduce using rule 55 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 55 (E -> E MODAL E .)
    R_PUSH          reduce using rule 55 (E -> E MODAL E .)
    R_POP           reduce using rule 55 (E -> E MODAL E .)
    R_LENGTH        reduce using rule 55 (E -> E MODAL E .)
    R_MUTABLE       reduce using rule 55 (E -> E MODAL E .)
    R_STRUCT        reduce using rule 55 (E -> E MODAL E .)
    R_BREAK         reduce using rule 55 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 55 (E -> E MODAL E .)
    R_RETURN        reduce using rule 55 (E -> E MODAL E .)
    PARIZQ          reduce using rule 55 (E -> E MODAL E .)
    R_LOG10         reduce using rule 55 (E -> E MODAL E .)
    R_SIN           reduce using rule 55 (E -> E MODAL E .)
    R_COS           reduce using rule 55 (E -> E MODAL E .)
    R_TAN           reduce using rule 55 (E -> E MODAL E .)
    R_SQRT          reduce using rule 55 (E -> E MODAL E .)
    R_UPPERCASE     reduce using rule 55 (E -> E MODAL E .)
    R_LOWERCASE     reduce using rule 55 (E -> E MODAL E .)
    R_LOG           reduce using rule 55 (E -> E MODAL E .)
    DECIMAL         reduce using rule 55 (E -> E MODAL E .)
    ENTERO          reduce using rule 55 (E -> E MODAL E .)
    R_TRUE          reduce using rule 55 (E -> E MODAL E .)
    R_FALSE         reduce using rule 55 (E -> E MODAL E .)
    CADENA          reduce using rule 55 (E -> E MODAL E .)
    PTCOMA          reduce using rule 55 (E -> E MODAL E .)
    COMA            reduce using rule 55 (E -> E MODAL E .)
    CORDER          reduce using rule 55 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 55 (E -> E MODAL E .)
    DOSPUNTITOS     reduce using rule 55 (E -> E MODAL E .)
    POTENCIA        shift and go to state 82

  ! POTENCIA        [ reduce using rule 55 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! DIVIDIDO        [ shift and go to state 80 ]
  ! MODAL           [ shift and go to state 81 ]


state 159

    (56) E -> E POTENCIA E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    IGUAL           reduce using rule 56 (E -> E POTENCIA E .)
    MAS             reduce using rule 56 (E -> E POTENCIA E .)
    MENOS           reduce using rule 56 (E -> E POTENCIA E .)
    POR             reduce using rule 56 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 56 (E -> E POTENCIA E .)
    MODAL           reduce using rule 56 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 56 (E -> E POTENCIA E .)
    PARDER          reduce using rule 56 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 56 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 56 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 56 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 56 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 56 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 56 (E -> E POTENCIA E .)
    R_END           reduce using rule 56 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 56 (E -> E POTENCIA E .)
    AND             reduce using rule 56 (E -> E POTENCIA E .)
    OR              reduce using rule 56 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 56 (E -> E POTENCIA E .)
    R_IF            reduce using rule 56 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 56 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 56 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 56 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 56 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 56 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 56 (E -> E POTENCIA E .)
    ID              reduce using rule 56 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 56 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 56 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 56 (E -> E POTENCIA E .)
    R_STRING        reduce using rule 56 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 56 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 56 (E -> E POTENCIA E .)
    R_POP           reduce using rule 56 (E -> E POTENCIA E .)
    R_LENGTH        reduce using rule 56 (E -> E POTENCIA E .)
    R_MUTABLE       reduce using rule 56 (E -> E POTENCIA E .)
    R_STRUCT        reduce using rule 56 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 56 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 56 (E -> E POTENCIA E .)
    R_RETURN        reduce using rule 56 (E -> E POTENCIA E .)
    PARIZQ          reduce using rule 56 (E -> E POTENCIA E .)
    R_LOG10         reduce using rule 56 (E -> E POTENCIA E .)
    R_SIN           reduce using rule 56 (E -> E POTENCIA E .)
    R_COS           reduce using rule 56 (E -> E POTENCIA E .)
    R_TAN           reduce using rule 56 (E -> E POTENCIA E .)
    R_SQRT          reduce using rule 56 (E -> E POTENCIA E .)
    R_UPPERCASE     reduce using rule 56 (E -> E POTENCIA E .)
    R_LOWERCASE     reduce using rule 56 (E -> E POTENCIA E .)
    R_LOG           reduce using rule 56 (E -> E POTENCIA E .)
    DECIMAL         reduce using rule 56 (E -> E POTENCIA E .)
    ENTERO          reduce using rule 56 (E -> E POTENCIA E .)
    R_TRUE          reduce using rule 56 (E -> E POTENCIA E .)
    R_FALSE         reduce using rule 56 (E -> E POTENCIA E .)
    CADENA          reduce using rule 56 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 56 (E -> E POTENCIA E .)
    COMA            reduce using rule 56 (E -> E POTENCIA E .)
    CORDER          reduce using rule 56 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 56 (E -> E POTENCIA E .)
    DOSPUNTITOS     reduce using rule 56 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 77 ]
  ! MENOS           [ shift and go to state 78 ]
  ! POR             [ shift and go to state 79 ]
  ! DIVIDIDO        [ shift and go to state 80 ]
  ! MODAL           [ shift and go to state 81 ]
  ! POTENCIA        [ shift and go to state 82 ]


state 160

    (35) ASIGNACION -> R_LOCAL E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_LOCAL E IGUAL . LISTA PTCOMA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 72
    LISTA                          shift and go to state 236
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 161

    (41) ASIGNACION -> R_LOCAL E PTCOMA .

    R_IF            reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FOR           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_WHILE         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_GLOBAL        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOCAL         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PRINT         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PRINTLN       reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    ID              reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PARSE         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TRUNC         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FLOAT         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_STRING        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TYPEOF        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PUSH          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_POP           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LENGTH        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_MUTABLE       reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_STRUCT        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_BREAK         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_CONTINUE      reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_RETURN        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    MENOS           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    PARIZQ          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOG10         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_SIN           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_COS           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TAN           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_SQRT          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_UPPERCASE     reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOWERCASE     reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOG           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    DECIMAL         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    ENTERO          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TRUE          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FALSE         reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    CADENA          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FUNCTION      reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    $end            reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_END           reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_ELSE          reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_ELSEIF        reduce using rule 41 (ASIGNACION -> R_LOCAL E PTCOMA .)


state 162

    (18) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (20) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 237
    COMA            shift and go to state 238


state 163

    (21) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 21 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 21 (IMPRESIONES -> IMPRESION .)


state 164

    (22) IMPRESION -> ARREGLOS .
    (27) ARREGLOS -> ARREGLOS . COMA ARREGLO

  ! shift/reduce conflict for COMA resolved as shift
    PARDER          reduce using rule 22 (IMPRESION -> ARREGLOS .)
    COMA            shift and go to state 190

  ! COMA            [ reduce using rule 22 (IMPRESION -> ARREGLOS .) ]


state 165

    (23) IMPRESION -> LO .
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    PARDER          reduce using rule 23 (IMPRESION -> LO .)
    COMA            reduce using rule 23 (IMPRESION -> LO .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 166

    (24) IMPRESION -> DOLAR . PARIZQ E PARDER
    (25) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 239


state 167

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (20) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 240
    COMA            shift and go to state 238


state 168

    (92) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 241


state 169

    (43) TIPO -> R_NOTHING .

    COMA            reduce using rule 43 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 43 (TIPO -> R_NOTHING .)
    R_END           reduce using rule 43 (TIPO -> R_NOTHING .)


state 170

    (44) TIPO -> R_INT64 .

    COMA            reduce using rule 44 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 44 (TIPO -> R_INT64 .)
    R_END           reduce using rule 44 (TIPO -> R_INT64 .)


state 171

    (45) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 45 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 45 (TIPO -> R_FLOAT64 .)
    R_END           reduce using rule 45 (TIPO -> R_FLOAT64 .)


state 172

    (46) TIPO -> R_STRING .

    COMA            reduce using rule 46 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 46 (TIPO -> R_STRING .)
    R_END           reduce using rule 46 (TIPO -> R_STRING .)


state 173

    (47) TIPO -> R_CHAR .

    COMA            reduce using rule 47 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 47 (TIPO -> R_CHAR .)
    R_END           reduce using rule 47 (TIPO -> R_CHAR .)


state 174

    (48) TIPO -> R_BOOL .

    COMA            reduce using rule 48 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 48 (TIPO -> R_BOOL .)
    R_END           reduce using rule 48 (TIPO -> R_BOOL .)


state 175

    (93) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 242


state 176

    (97) NATIVAS -> R_TRUNC PARIZQ LISTA . PARDER

    PARDER          shift and go to state 243


state 177

    (46) TIPO -> R_STRING .
    (95) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    COMA            reduce using rule 46 (TIPO -> R_STRING .)
    PARIZQ          shift and go to state 89


state 178

    (94) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 244


state 179

    (95) NATIVAS -> R_STRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 245


state 180

    (96) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 246


state 181

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ . ID COMA E PARDER

    ID              shift and go to state 247


state 182

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ . ID PARDER

    ID              shift and go to state 248


state 183

    (100) NATIVAS -> R_LENGTH PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 249
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 184

    (147) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (149) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (151) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (152) ELEMENTOS -> . ELEMENTO
    (153) ELEMENTO -> . ID
    (154) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 251
    ID              shift and go to state 185

    ELEMENTOS                      shift and go to state 250
    ELEMENTO                       shift and go to state 188

state 185

    (153) ELEMENTO -> ID .
    (154) ELEMENTO -> ID . DOSPUNTOS TIPO

    PTCOMA          reduce using rule 153 (ELEMENTO -> ID .)
    COMA            reduce using rule 153 (ELEMENTO -> ID .)
    R_END           reduce using rule 153 (ELEMENTO -> ID .)
    DOSPUNTOS       shift and go to state 252


state 186

    (148) STRUCTS -> R_STRUCT ID ELEMENTOS . PTCOMA
    (151) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    PTCOMA          shift and go to state 253
    COMA            shift and go to state 254


state 187

    (150) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 255


state 188

    (152) ELEMENTOS -> ELEMENTO .

    PTCOMA          reduce using rule 152 (ELEMENTOS -> ELEMENTO .)
    COMA            reduce using rule 152 (ELEMENTOS -> ELEMENTO .)
    R_END           reduce using rule 152 (ELEMENTOS -> ELEMENTO .)


state 189

    (101) RETURN -> R_RETURN LISTA PTCOMA .

    R_IF            reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FOR           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_WHILE         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOCAL         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINT         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    ID              reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PARSE         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TRUNC         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FLOAT         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRING        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PUSH          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_POP           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LENGTH        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRUCT        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_BREAK         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_RETURN        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    MENOS           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    PARIZQ          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOG10         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_SIN           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_COS           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TAN           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_SQRT          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOG           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    DECIMAL         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    ENTERO          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TRUE          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FALSE         reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    CADENA          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    $end            reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_END           reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSE          reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 101 (RETURN -> R_RETURN LISTA PTCOMA .)


state 190

    (27) ARREGLOS -> ARREGLOS COMA . ARREGLO
    (29) ARREGLO -> . CORIZQ LISTAS CORDER

    CORIZQ          shift and go to state 103

    ARREGLO                        shift and go to state 256

state 191

    (29) ARREGLO -> CORIZQ LISTAS . CORDER
    (30) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 257
    COMA            shift and go to state 205


state 192

    (59) E -> R_LOG10 PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 258
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 193

    (60) E -> R_SIN PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 259
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 194

    (61) E -> R_COS PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 260
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 195

    (62) E -> R_TAN PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 261
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 196

    (63) E -> R_SQRT PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 262
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 197

    (64) E -> R_UPPERCASE PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 263
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 198

    (65) E -> R_LOWERCASE PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 264
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 199

    (66) E -> R_LOG PARIZQ E . COMA E PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    COMA            shift and go to state 265
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 200

    (109) PARAMETRO -> ID .

    PARDER          reduce using rule 109 (PARAMETRO -> ID .)
    COMA            reduce using rule 109 (PARAMETRO -> ID .)


state 201

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER R_END PTCOMA
    (107) PARAMETROS -> PARAMETROS . COMA PARAMETRO

    PARDER          shift and go to state 266
    COMA            shift and go to state 267


state 202

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 269
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 268
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 203

    (108) PARAMETROS -> PARAMETRO .

    PARDER          reduce using rule 108 (PARAMETROS -> PARAMETRO .)
    COMA            reduce using rule 108 (PARAMETROS -> PARAMETRO .)


state 204

    (49) LLAMADAS -> ID PARIZQ LISTAS PARDER .

    PTCOMA          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    IGUAL           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAS             reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENOS           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POR             reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DIVIDIDO        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MODAL           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POTENCIA        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    PARDER          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENQUE          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYQUE          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    IGUALQUE        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    NIGUALQUE       reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENORIGUAL      reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYORIGUAL      reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_END           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSE          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    AND             reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    OR              reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSEIF        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_IF            reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FOR           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_WHILE         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_GLOBAL        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOCAL         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINT         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINTLN       reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    ID              reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PARSE         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TRUNC         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FLOAT         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_STRING        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TYPEOF        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PUSH          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_POP           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LENGTH        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_MUTABLE       reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_STRUCT        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_BREAK         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_CONTINUE      reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_RETURN        reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    PARIZQ          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOG10         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_SIN           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_COS           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TAN           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_SQRT          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_UPPERCASE     reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOWERCASE     reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOG           reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DECIMAL         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    ENTERO          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TRUE          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FALSE         reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    CADENA          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    COMA            reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    CORDER          reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTOS       reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTITOS     reduce using rule 49 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)


state 205

    (30) LISTAS -> LISTAS COMA . LISTA
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 270
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 206

    (76) ARRAY -> CORIZQ E CORDER .

    CORIZQ          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    IGUAL           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MAS             reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MENOS           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    POR             reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    DIVIDIDO        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MODAL           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    POTENCIA        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    PARDER          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MENQUE          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MAYQUE          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    IGUALQUE        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    NIGUALQUE       reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MENORIGUAL      reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    MAYORIGUAL      reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_END           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_ELSE          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    AND             reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    OR              reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_ELSEIF        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_IF            reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_FOR           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_WHILE         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_GLOBAL        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_LOCAL         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_PRINT         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_PRINTLN       reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    ID              reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_PARSE         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_TRUNC         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_FLOAT         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_STRING        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_TYPEOF        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_PUSH          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_POP           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_LENGTH        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_MUTABLE       reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_STRUCT        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_BREAK         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_CONTINUE      reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_RETURN        reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    PARIZQ          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_LOG10         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_SIN           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_COS           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_TAN           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_SQRT          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_UPPERCASE     reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_LOWERCASE     reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_LOG           reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    DECIMAL         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    ENTERO          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_TRUE          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    R_FALSE         reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    CADENA          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    PTCOMA          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    COMA            reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    CORDER          reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    DOSPUNTOS       reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)
    DOSPUNTITOS     reduce using rule 76 (ARRAY -> CORIZQ E CORDER .)


state 207

    (110) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 271


state 208

    (111) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (116) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 273
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 272
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 209

    (112) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LENGTH        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    MENOS           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    PARIZQ          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOG10         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_SIN           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_COS           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TAN           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_SQRT          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_UPPERCASE     reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOWERCASE     reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOG           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    DECIMAL         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ENTERO          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUE          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FALSE         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    CADENA          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 210

    (113) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRING        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    MENOS           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    PARIZQ          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOG10         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_SIN           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_COS           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_TAN           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_SQRT          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOG           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    DECIMAL         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    ENTERO          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUE          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_FALSE         reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    CADENA          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 113 (IFS -> R_IF LO R_END PTCOMA .)


state 211

    (114) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 274
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 212

    (117) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 275


state 213

    (87) LO -> LO AND LO .
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    R_END           reduce using rule 87 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 87 (LO -> LO AND LO .)
    AND             reduce using rule 87 (LO -> LO AND LO .)
    OR              reduce using rule 87 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 87 (LO -> LO AND LO .)
    R_IF            reduce using rule 87 (LO -> LO AND LO .)
    R_FOR           reduce using rule 87 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 87 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 87 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 87 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 87 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 87 (LO -> LO AND LO .)
    ID              reduce using rule 87 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 87 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 87 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 87 (LO -> LO AND LO .)
    R_STRING        reduce using rule 87 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 87 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 87 (LO -> LO AND LO .)
    R_POP           reduce using rule 87 (LO -> LO AND LO .)
    R_LENGTH        reduce using rule 87 (LO -> LO AND LO .)
    R_MUTABLE       reduce using rule 87 (LO -> LO AND LO .)
    R_STRUCT        reduce using rule 87 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 87 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 87 (LO -> LO AND LO .)
    R_RETURN        reduce using rule 87 (LO -> LO AND LO .)
    MENOS           reduce using rule 87 (LO -> LO AND LO .)
    PARIZQ          reduce using rule 87 (LO -> LO AND LO .)
    R_LOG10         reduce using rule 87 (LO -> LO AND LO .)
    R_SIN           reduce using rule 87 (LO -> LO AND LO .)
    R_COS           reduce using rule 87 (LO -> LO AND LO .)
    R_TAN           reduce using rule 87 (LO -> LO AND LO .)
    R_SQRT          reduce using rule 87 (LO -> LO AND LO .)
    R_UPPERCASE     reduce using rule 87 (LO -> LO AND LO .)
    R_LOWERCASE     reduce using rule 87 (LO -> LO AND LO .)
    R_LOG           reduce using rule 87 (LO -> LO AND LO .)
    DECIMAL         reduce using rule 87 (LO -> LO AND LO .)
    ENTERO          reduce using rule 87 (LO -> LO AND LO .)
    R_TRUE          reduce using rule 87 (LO -> LO AND LO .)
    R_FALSE         reduce using rule 87 (LO -> LO AND LO .)
    CADENA          reduce using rule 87 (LO -> LO AND LO .)
    PTCOMA          reduce using rule 87 (LO -> LO AND LO .)
    PARDER          reduce using rule 87 (LO -> LO AND LO .)
    COMA            reduce using rule 87 (LO -> LO AND LO .)
    DOSPUNTOS       reduce using rule 87 (LO -> LO AND LO .)
    CORDER          reduce using rule 87 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 124 ]
  ! OR              [ shift and go to state 125 ]


state 214

    (88) LO -> LO OR LO .
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO

    R_END           reduce using rule 88 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 88 (LO -> LO OR LO .)
    OR              reduce using rule 88 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 88 (LO -> LO OR LO .)
    R_IF            reduce using rule 88 (LO -> LO OR LO .)
    R_FOR           reduce using rule 88 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 88 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 88 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 88 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 88 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 88 (LO -> LO OR LO .)
    ID              reduce using rule 88 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 88 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 88 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 88 (LO -> LO OR LO .)
    R_STRING        reduce using rule 88 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 88 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 88 (LO -> LO OR LO .)
    R_POP           reduce using rule 88 (LO -> LO OR LO .)
    R_LENGTH        reduce using rule 88 (LO -> LO OR LO .)
    R_MUTABLE       reduce using rule 88 (LO -> LO OR LO .)
    R_STRUCT        reduce using rule 88 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 88 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 88 (LO -> LO OR LO .)
    R_RETURN        reduce using rule 88 (LO -> LO OR LO .)
    MENOS           reduce using rule 88 (LO -> LO OR LO .)
    PARIZQ          reduce using rule 88 (LO -> LO OR LO .)
    R_LOG10         reduce using rule 88 (LO -> LO OR LO .)
    R_SIN           reduce using rule 88 (LO -> LO OR LO .)
    R_COS           reduce using rule 88 (LO -> LO OR LO .)
    R_TAN           reduce using rule 88 (LO -> LO OR LO .)
    R_SQRT          reduce using rule 88 (LO -> LO OR LO .)
    R_UPPERCASE     reduce using rule 88 (LO -> LO OR LO .)
    R_LOWERCASE     reduce using rule 88 (LO -> LO OR LO .)
    R_LOG           reduce using rule 88 (LO -> LO OR LO .)
    DECIMAL         reduce using rule 88 (LO -> LO OR LO .)
    ENTERO          reduce using rule 88 (LO -> LO OR LO .)
    R_TRUE          reduce using rule 88 (LO -> LO OR LO .)
    R_FALSE         reduce using rule 88 (LO -> LO OR LO .)
    CADENA          reduce using rule 88 (LO -> LO OR LO .)
    PTCOMA          reduce using rule 88 (LO -> LO OR LO .)
    PARDER          reduce using rule 88 (LO -> LO OR LO .)
    COMA            reduce using rule 88 (LO -> LO OR LO .)
    DOSPUNTOS       reduce using rule 88 (LO -> LO OR LO .)
    CORDER          reduce using rule 88 (LO -> LO OR LO .)
    AND             shift and go to state 124

  ! AND             [ reduce using rule 88 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 125 ]


state 215

    (118) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (121) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> R_ELSEIF LO . ELSEIF
    (124) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (87) LO -> LO . AND LO
    (88) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (118) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO ELSEIF
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 277
    R_ELSE          shift and go to state 278
    AND             shift and go to state 124
    OR              shift and go to state 125
    R_ELSEIF        shift and go to state 126
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 276
    ELSEIF                         shift and go to state 279
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 216

    (90) LO -> PARIZQ LO PARDER .

    R_END           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_ELSE          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    AND             reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    OR              reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_ELSEIF        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_IF            reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_FOR           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_WHILE         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_GLOBAL        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_LOCAL         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_PRINT         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_PRINTLN       reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    ID              reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_PARSE         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_TRUNC         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_FLOAT         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_STRING        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_TYPEOF        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_PUSH          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_POP           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_LENGTH        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_MUTABLE       reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_STRUCT        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_BREAK         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_CONTINUE      reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_RETURN        reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    MENOS           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    PARIZQ          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_LOG10         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_SIN           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_COS           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_TAN           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_SQRT          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_UPPERCASE     reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_LOWERCASE     reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_LOG           reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    DECIMAL         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    ENTERO          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_TRUE          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    R_FALSE         reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    CADENA          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    PTCOMA          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    PARDER          reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    COMA            reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    DOSPUNTOS       reduce using rule 90 (LO -> PARIZQ LO PARDER .)
    CORDER          reduce using rule 90 (LO -> PARIZQ LO PARDER .)


state 217

    (85) RE -> PARIZQ RE PARDER .

    MENQUE          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    MAYQUE          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    IGUALQUE        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    NIGUALQUE       reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    MENORIGUAL      reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    MAYORIGUAL      reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_END           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_ELSE          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    AND             reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    OR              reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_ELSEIF        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_IF            reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_FOR           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_WHILE         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_GLOBAL        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_LOCAL         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_PRINT         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_PRINTLN       reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    ID              reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_PARSE         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_TRUNC         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_FLOAT         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_STRING        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_TYPEOF        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_PUSH          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_POP           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_LENGTH        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_MUTABLE       reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_STRUCT        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_BREAK         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_CONTINUE      reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_RETURN        reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    MENOS           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    PARIZQ          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_LOG10         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_SIN           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_COS           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_TAN           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_SQRT          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_UPPERCASE     reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_LOWERCASE     reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_LOG           reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    DECIMAL         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    ENTERO          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_TRUE          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    R_FALSE         reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    CADENA          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    PTCOMA          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    PARDER          reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    COMA            reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    DOSPUNTOS       reduce using rule 85 (RE -> PARIZQ RE PARDER .)
    CORDER          reduce using rule 85 (RE -> PARIZQ RE PARDER .)


state 218

    (79) RE -> RE MENQUE RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 79 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 79 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 79 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 79 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 79 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 79 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 79 (RE -> RE MENQUE RE .)
    AND             reduce using rule 79 (RE -> RE MENQUE RE .)
    OR              reduce using rule 79 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 79 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 79 (RE -> RE MENQUE RE .)
    ID              reduce using rule 79 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_STRING        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 79 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_LENGTH        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_MUTABLE       reduce using rule 79 (RE -> RE MENQUE RE .)
    R_STRUCT        reduce using rule 79 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 79 (RE -> RE MENQUE RE .)
    R_RETURN        reduce using rule 79 (RE -> RE MENQUE RE .)
    MENOS           reduce using rule 79 (RE -> RE MENQUE RE .)
    PARIZQ          reduce using rule 79 (RE -> RE MENQUE RE .)
    R_LOG10         reduce using rule 79 (RE -> RE MENQUE RE .)
    R_SIN           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_COS           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_TAN           reduce using rule 79 (RE -> RE MENQUE RE .)
    R_SQRT          reduce using rule 79 (RE -> RE MENQUE RE .)
    R_UPPERCASE     reduce using rule 79 (RE -> RE MENQUE RE .)
    R_LOWERCASE     reduce using rule 79 (RE -> RE MENQUE RE .)
    R_LOG           reduce using rule 79 (RE -> RE MENQUE RE .)
    DECIMAL         reduce using rule 79 (RE -> RE MENQUE RE .)
    ENTERO          reduce using rule 79 (RE -> RE MENQUE RE .)
    R_TRUE          reduce using rule 79 (RE -> RE MENQUE RE .)
    R_FALSE         reduce using rule 79 (RE -> RE MENQUE RE .)
    CADENA          reduce using rule 79 (RE -> RE MENQUE RE .)
    PTCOMA          reduce using rule 79 (RE -> RE MENQUE RE .)
    PARDER          reduce using rule 79 (RE -> RE MENQUE RE .)
    COMA            reduce using rule 79 (RE -> RE MENQUE RE .)
    DOSPUNTOS       reduce using rule 79 (RE -> RE MENQUE RE .)
    CORDER          reduce using rule 79 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 131 ]
  ! MAYQUE          [ shift and go to state 132 ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 135 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]


state 219

    (85) RE -> PARIZQ . RE PARDER
    (58) E -> PARIZQ . E PARDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 219
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    RE                             shift and go to state 280
    E                              shift and go to state 130
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 220

    (80) RE -> RE MAYQUE RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 80 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 80 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 80 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 80 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 80 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 80 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 80 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 80 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_STRING        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_LENGTH        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_MUTABLE       reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_STRUCT        reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_RETURN        reduce using rule 80 (RE -> RE MAYQUE RE .)
    MENOS           reduce using rule 80 (RE -> RE MAYQUE RE .)
    PARIZQ          reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_LOG10         reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_SIN           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_COS           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_TAN           reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_SQRT          reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_UPPERCASE     reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_LOWERCASE     reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_LOG           reduce using rule 80 (RE -> RE MAYQUE RE .)
    DECIMAL         reduce using rule 80 (RE -> RE MAYQUE RE .)
    ENTERO          reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_TRUE          reduce using rule 80 (RE -> RE MAYQUE RE .)
    R_FALSE         reduce using rule 80 (RE -> RE MAYQUE RE .)
    CADENA          reduce using rule 80 (RE -> RE MAYQUE RE .)
    PTCOMA          reduce using rule 80 (RE -> RE MAYQUE RE .)
    PARDER          reduce using rule 80 (RE -> RE MAYQUE RE .)
    COMA            reduce using rule 80 (RE -> RE MAYQUE RE .)
    DOSPUNTOS       reduce using rule 80 (RE -> RE MAYQUE RE .)
    CORDER          reduce using rule 80 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 131 ]
  ! MAYQUE          [ shift and go to state 132 ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 135 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]


state 221

    (81) RE -> RE IGUALQUE RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 81 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 81 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_STRING        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_LENGTH        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_MUTABLE       reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_STRUCT        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_RETURN        reduce using rule 81 (RE -> RE IGUALQUE RE .)
    MENOS           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    PARIZQ          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_LOG10         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_SIN           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_COS           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_TAN           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_SQRT          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_UPPERCASE     reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_LOWERCASE     reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_LOG           reduce using rule 81 (RE -> RE IGUALQUE RE .)
    DECIMAL         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    ENTERO          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_TRUE          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    R_FALSE         reduce using rule 81 (RE -> RE IGUALQUE RE .)
    CADENA          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    PTCOMA          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    PARDER          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    COMA            reduce using rule 81 (RE -> RE IGUALQUE RE .)
    DOSPUNTOS       reduce using rule 81 (RE -> RE IGUALQUE RE .)
    CORDER          reduce using rule 81 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 131
    MAYQUE          shift and go to state 132
    MENORIGUAL      shift and go to state 135
    MAYORIGUAL      shift and go to state 136

  ! MENQUE          [ reduce using rule 81 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 81 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 81 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 81 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]


state 222

    (82) RE -> RE NIGUALQUE RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_STRING        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_LENGTH        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_MUTABLE       reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_STRUCT        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_RETURN        reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    MENOS           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    PARIZQ          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_LOG10         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_SIN           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_COS           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_TAN           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_SQRT          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_UPPERCASE     reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_LOWERCASE     reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_LOG           reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    DECIMAL         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    ENTERO          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_TRUE          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    R_FALSE         reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    CADENA          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    PTCOMA          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    PARDER          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    COMA            reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    DOSPUNTOS       reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    CORDER          reduce using rule 82 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 131
    MAYQUE          shift and go to state 132
    MENORIGUAL      shift and go to state 135
    MAYORIGUAL      shift and go to state 136

  ! MENQUE          [ reduce using rule 82 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 82 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 82 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 82 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]


state 223

    (83) RE -> RE MENORIGUAL RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_STRING        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_LENGTH        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_MUTABLE       reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_STRUCT        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_RETURN        reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    MENOS           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    PARIZQ          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_LOG10         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_SIN           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_COS           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_TAN           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_SQRT          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_UPPERCASE     reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_LOWERCASE     reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_LOG           reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    DECIMAL         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    ENTERO          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_TRUE          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    R_FALSE         reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    CADENA          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    PTCOMA          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    PARDER          reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    COMA            reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    DOSPUNTOS       reduce using rule 83 (RE -> RE MENORIGUAL RE .)
    CORDER          reduce using rule 83 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 131 ]
  ! MAYQUE          [ shift and go to state 132 ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 135 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]


state 224

    (84) RE -> RE MAYORIGUAL RE .
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_STRING        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_LENGTH        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_MUTABLE       reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_STRUCT        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_RETURN        reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    MENOS           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    PARIZQ          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_LOG10         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_SIN           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_COS           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_TAN           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_SQRT          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_UPPERCASE     reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_LOWERCASE     reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_LOG           reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    DECIMAL         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    ENTERO          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_TRUE          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    R_FALSE         reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    CADENA          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    PTCOMA          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    PARDER          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    COMA            reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    DOSPUNTOS       reduce using rule 84 (RE -> RE MAYORIGUAL RE .)
    CORDER          reduce using rule 84 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 131 ]
  ! MAYQUE          [ shift and go to state 132 ]
  ! IGUALQUE        [ shift and go to state 133 ]
  ! NIGUALQUE       [ shift and go to state 134 ]
  ! MENORIGUAL      [ shift and go to state 135 ]
  ! MAYORIGUAL      [ shift and go to state 136 ]


state 225

    (146) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (72) E -> ID .
    (73) E -> ID . ARRAYS
    (49) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (50) LLAMADAS -> ID . PARIZQ PARDER
    (74) ARRAYS -> . ARRAYS ARRAY
    (75) ARRAYS -> . ARRAY
    (76) ARRAY -> . CORIZQ E CORDER

  ! shift/reduce conflict for PARIZQ resolved as shift
    CORIZQ          shift and go to state 281
    DOSPUNTITOS     reduce using rule 72 (E -> ID .)
    MAS             reduce using rule 72 (E -> ID .)
    MENOS           reduce using rule 72 (E -> ID .)
    POR             reduce using rule 72 (E -> ID .)
    DIVIDIDO        reduce using rule 72 (E -> ID .)
    MODAL           reduce using rule 72 (E -> ID .)
    POTENCIA        reduce using rule 72 (E -> ID .)
    R_END           reduce using rule 72 (E -> ID .)
    R_IF            reduce using rule 72 (E -> ID .)
    R_FOR           reduce using rule 72 (E -> ID .)
    R_WHILE         reduce using rule 72 (E -> ID .)
    R_GLOBAL        reduce using rule 72 (E -> ID .)
    R_LOCAL         reduce using rule 72 (E -> ID .)
    R_PRINT         reduce using rule 72 (E -> ID .)
    R_PRINTLN       reduce using rule 72 (E -> ID .)
    ID              reduce using rule 72 (E -> ID .)
    R_PARSE         reduce using rule 72 (E -> ID .)
    R_TRUNC         reduce using rule 72 (E -> ID .)
    R_FLOAT         reduce using rule 72 (E -> ID .)
    R_STRING        reduce using rule 72 (E -> ID .)
    R_TYPEOF        reduce using rule 72 (E -> ID .)
    R_PUSH          reduce using rule 72 (E -> ID .)
    R_POP           reduce using rule 72 (E -> ID .)
    R_LENGTH        reduce using rule 72 (E -> ID .)
    R_MUTABLE       reduce using rule 72 (E -> ID .)
    R_STRUCT        reduce using rule 72 (E -> ID .)
    R_BREAK         reduce using rule 72 (E -> ID .)
    R_CONTINUE      reduce using rule 72 (E -> ID .)
    R_LOG10         reduce using rule 72 (E -> ID .)
    R_SIN           reduce using rule 72 (E -> ID .)
    R_COS           reduce using rule 72 (E -> ID .)
    R_TAN           reduce using rule 72 (E -> ID .)
    R_SQRT          reduce using rule 72 (E -> ID .)
    R_UPPERCASE     reduce using rule 72 (E -> ID .)
    R_LOWERCASE     reduce using rule 72 (E -> ID .)
    R_LOG           reduce using rule 72 (E -> ID .)
    DECIMAL         reduce using rule 72 (E -> ID .)
    ENTERO          reduce using rule 72 (E -> ID .)
    R_TRUE          reduce using rule 72 (E -> ID .)
    R_FALSE         reduce using rule 72 (E -> ID .)
    CADENA          reduce using rule 72 (E -> ID .)
    PARIZQ          shift and go to state 58

  ! PARIZQ          [ reduce using rule 72 (E -> ID .) ]

    ARRAYS                         shift and go to state 59
    ARRAY                          shift and go to state 60

state 226

    (141) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (129) INSTRUCCION_LOOP -> . IFS
    (130) INSTRUCCION_LOOP -> . FORS
    (131) INSTRUCCION_LOOP -> . WHILES
    (132) INSTRUCCION_LOOP -> . ASIGNACION
    (133) INSTRUCCION_LOOP -> . I
    (134) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (135) INSTRUCCION_LOOP -> . NATIVAS
    (136) INSTRUCCION_LOOP -> . STRUCTS
    (137) INSTRUCCION_LOOP -> . BREAK
    (138) INSTRUCCION_LOOP -> . CONTINUE
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 283
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES_LOOP             shift and go to state 282
    INSTRUCCION_LOOP               shift and go to state 140
    IFS                            shift and go to state 141
    FORS                           shift and go to state 142
    WHILES                         shift and go to state 143
    ASIGNACION                     shift and go to state 144
    I                              shift and go to state 145
    LLAMADAS                       shift and go to state 146
    NATIVAS                        shift and go to state 147
    STRUCTS                        shift and go to state 148
    BREAK                          shift and go to state 149
    CONTINUE                       shift and go to state 150
    E                              shift and go to state 24

state 227

    (143) RANGO -> E . DOSPUNTITOS E
    (144) RANGO -> E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    DOSPUNTITOS     shift and go to state 284
    R_END           reduce using rule 144 (RANGO -> E .)
    R_IF            reduce using rule 144 (RANGO -> E .)
    R_FOR           reduce using rule 144 (RANGO -> E .)
    R_WHILE         reduce using rule 144 (RANGO -> E .)
    R_GLOBAL        reduce using rule 144 (RANGO -> E .)
    R_LOCAL         reduce using rule 144 (RANGO -> E .)
    R_PRINT         reduce using rule 144 (RANGO -> E .)
    R_PRINTLN       reduce using rule 144 (RANGO -> E .)
    ID              reduce using rule 144 (RANGO -> E .)
    R_PARSE         reduce using rule 144 (RANGO -> E .)
    R_TRUNC         reduce using rule 144 (RANGO -> E .)
    R_FLOAT         reduce using rule 144 (RANGO -> E .)
    R_STRING        reduce using rule 144 (RANGO -> E .)
    R_TYPEOF        reduce using rule 144 (RANGO -> E .)
    R_PUSH          reduce using rule 144 (RANGO -> E .)
    R_POP           reduce using rule 144 (RANGO -> E .)
    R_LENGTH        reduce using rule 144 (RANGO -> E .)
    R_MUTABLE       reduce using rule 144 (RANGO -> E .)
    R_STRUCT        reduce using rule 144 (RANGO -> E .)
    R_BREAK         reduce using rule 144 (RANGO -> E .)
    R_CONTINUE      reduce using rule 144 (RANGO -> E .)
    PARIZQ          reduce using rule 144 (RANGO -> E .)
    R_LOG10         reduce using rule 144 (RANGO -> E .)
    R_SIN           reduce using rule 144 (RANGO -> E .)
    R_COS           reduce using rule 144 (RANGO -> E .)
    R_TAN           reduce using rule 144 (RANGO -> E .)
    R_SQRT          reduce using rule 144 (RANGO -> E .)
    R_UPPERCASE     reduce using rule 144 (RANGO -> E .)
    R_LOWERCASE     reduce using rule 144 (RANGO -> E .)
    R_LOG           reduce using rule 144 (RANGO -> E .)
    DECIMAL         reduce using rule 144 (RANGO -> E .)
    ENTERO          reduce using rule 144 (RANGO -> E .)
    R_TRUE          reduce using rule 144 (RANGO -> E .)
    R_FALSE         reduce using rule 144 (RANGO -> E .)
    CADENA          reduce using rule 144 (RANGO -> E .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! MENOS           [ reduce using rule 144 (RANGO -> E .) ]


state 228

    (145) RANGO -> ARREGLOS .
    (27) ARREGLOS -> ARREGLOS . COMA ARREGLO

    R_END           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 145 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 145 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 145 (RANGO -> ARREGLOS .)
    ID              reduce using rule 145 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_STRING        reduce using rule 145 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 145 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 145 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_LENGTH        reduce using rule 145 (RANGO -> ARREGLOS .)
    R_MUTABLE       reduce using rule 145 (RANGO -> ARREGLOS .)
    R_STRUCT        reduce using rule 145 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 145 (RANGO -> ARREGLOS .)
    MENOS           reduce using rule 145 (RANGO -> ARREGLOS .)
    PARIZQ          reduce using rule 145 (RANGO -> ARREGLOS .)
    R_LOG10         reduce using rule 145 (RANGO -> ARREGLOS .)
    R_SIN           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_COS           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_TAN           reduce using rule 145 (RANGO -> ARREGLOS .)
    R_SQRT          reduce using rule 145 (RANGO -> ARREGLOS .)
    R_UPPERCASE     reduce using rule 145 (RANGO -> ARREGLOS .)
    R_LOWERCASE     reduce using rule 145 (RANGO -> ARREGLOS .)
    R_LOG           reduce using rule 145 (RANGO -> ARREGLOS .)
    DECIMAL         reduce using rule 145 (RANGO -> ARREGLOS .)
    ENTERO          reduce using rule 145 (RANGO -> ARREGLOS .)
    R_TRUE          reduce using rule 145 (RANGO -> ARREGLOS .)
    R_FALSE         reduce using rule 145 (RANGO -> ARREGLOS .)
    CADENA          reduce using rule 145 (RANGO -> ARREGLOS .)
    COMA            shift and go to state 190


state 229

    (139) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 285


state 230

    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .

    R_END           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_IF            reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    ID              reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_POP           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LENGTH        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_MUTABLE       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_STRUCT        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    MENOS           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    PARIZQ          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOG10         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_SIN           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_COS           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TAN           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_SQRT          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_UPPERCASE     reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOWERCASE     reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOG           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    DECIMAL         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    ENTERO          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TRUE          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FALSE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    CADENA          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)


state 231

    (140) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRING        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    MENOS           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    PARIZQ          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOG10         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_SIN           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_COS           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TAN           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_SQRT          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOG           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    DECIMAL         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ENTERO          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUE          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FALSE         reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    CADENA          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 140 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 232

    (134) INSTRUCCION_LOOP -> LLAMADAS PTCOMA .

    R_END           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_IF            reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    ID              reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LENGTH        reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_MUTABLE       reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_STRUCT        reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    MENOS           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    PARIZQ          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOG10         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_SIN           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_COS           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TAN           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_SQRT          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_UPPERCASE     reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOWERCASE     reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOG           reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    DECIMAL         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    ENTERO          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TRUE          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FALSE         reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    CADENA          reduce using rule 134 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)


state 233

    (34) ASIGNACION -> R_GLOBAL E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> R_GLOBAL E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 286
    PTCOMA          shift and go to state 287


state 234

    (36) ASIGNACION -> E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 172
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174

    TIPO                           shift and go to state 288

state 235

    (39) ASIGNACION -> E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 39 (ASIGNACION -> E IGUAL LISTA PTCOMA .)


state 236

    (35) ASIGNACION -> R_LOCAL E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_LOCAL E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 289
    PTCOMA          shift and go to state 290


state 237

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 291


state 238

    (20) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 166
    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    IMPRESION                      shift and go to state 292
    ARREGLOS                       shift and go to state 164
    LO                             shift and go to state 165
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    LLAMADAS                       shift and go to state 65

state 239

    (24) IMPRESION -> DOLAR PARIZQ . E PARDER
    (25) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (26) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (29) ARREGLO -> . CORIZQ LISTAS CORDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    CORIZQ          shift and go to state 103

    E                              shift and go to state 293
    ARREGLOS                       shift and go to state 294
    NATIVAS                        shift and go to state 295
    LLAMADAS                       shift and go to state 65
    ARREGLO                        shift and go to state 102

state 240

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 296


state 241

    (92) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 297
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 242

    (93) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (32) LISTA -> . ARREGLOS
    (33) LISTA -> . LO
    (27) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (28) ARREGLOS -> . ARREGLO
    (87) LO -> . LO AND LO
    (88) LO -> . LO OR LO
    (89) LO -> . DIFERENTE LO
    (90) LO -> . PARIZQ LO PARDER
    (91) LO -> . RE
    (29) ARREGLO -> . CORIZQ LISTAS CORDER
    (79) RE -> . RE MENQUE RE
    (80) RE -> . RE MAYQUE RE
    (81) RE -> . RE IGUALQUE RE
    (82) RE -> . RE NIGUALQUE RE
    (83) RE -> . RE MENORIGUAL RE
    (84) RE -> . RE MAYORIGUAL RE
    (85) RE -> . PARIZQ RE PARDER
    (86) RE -> . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 69
    PARIZQ          shift and go to state 70
    CORIZQ          shift and go to state 103
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    LISTA                          shift and go to state 298
    ARREGLOS                       shift and go to state 100
    LO                             shift and go to state 101
    ARREGLO                        shift and go to state 102
    RE                             shift and go to state 71
    E                              shift and go to state 72
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 243

    (97) NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAS             reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POR             reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_END           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    AND             reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    OR              reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    ID              reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    COMA            reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 97 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)


state 244

    (94) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAS             reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POR             reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    AND             reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    OR              reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 94 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 245

    (95) NATIVAS -> R_STRING PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAS             reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POR             reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    AND             reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    OR              reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 95 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)


state 246

    (96) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAS             reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POR             reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    AND             reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    OR              reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 96 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 247

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID . COMA E PARDER

    COMA            shift and go to state 299


state 248

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ ID . PARDER

    PARDER          shift and go to state 300


state 249

    (100) NATIVAS -> R_LENGTH PARIZQ E PARDER .

    PTCOMA          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    IGUAL           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAS             reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENOS           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    POR             reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MODAL           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    POTENCIA        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    PARDER          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENQUE          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAYQUE          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_END           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_ELSE          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    AND             reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    OR              reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_IF            reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FOR           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_WHILE         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PRINT         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    ID              reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PARSE         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_STRING        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PUSH          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_POP           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_BREAK         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_RETURN        reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    PARIZQ          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOG10         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_SIN           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_COS           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TAN           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_SQRT          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOG           reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DECIMAL         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    ENTERO          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TRUE          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FALSE         reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    CADENA          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    COMA            reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    CORDER          reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 100 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)


state 250

    (147) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (151) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    R_END           shift and go to state 301
    COMA            shift and go to state 254


state 251

    (149) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 302


state 252

    (154) ELEMENTO -> ID DOSPUNTOS . TIPO
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 172
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174

    TIPO                           shift and go to state 303

state 253

    (148) STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .

    R_IF            reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FOR           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_WHILE         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_GLOBAL        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOCAL         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINT         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINTLN       reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ID              reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PARSE         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUNC         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FLOAT         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRING        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TYPEOF        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PUSH          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_POP           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LENGTH        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_MUTABLE       reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRUCT        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_BREAK         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_CONTINUE      reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_RETURN        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    MENOS           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    PARIZQ          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOG10         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_SIN           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_COS           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TAN           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_SQRT          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_UPPERCASE     reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOWERCASE     reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOG           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    DECIMAL         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ENTERO          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUE          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FALSE         reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    CADENA          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FUNCTION      reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    $end            reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_END           reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSE          reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSEIF        reduce using rule 148 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)


state 254

    (151) ELEMENTOS -> ELEMENTOS COMA . ELEMENTO
    (153) ELEMENTO -> . ID
    (154) ELEMENTO -> . ID DOSPUNTOS TIPO

    ID              shift and go to state 185

    ELEMENTO                       shift and go to state 304

state 255

    (150) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LENGTH        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    MENOS           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    PARIZQ          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOG10         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_SIN           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_COS           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TAN           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_SQRT          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOG           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    DECIMAL         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ENTERO          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUE          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FALSE         reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    CADENA          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 150 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 256

    (27) ARREGLOS -> ARREGLOS COMA ARREGLO .

    COMA            reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PTCOMA          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PARDER          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    DOSPUNTOS       reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    CORDER          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_END           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_IF            reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FOR           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_WHILE         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_GLOBAL        reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOCAL         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PRINT         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PRINTLN       reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    ID              reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PARSE         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TRUNC         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FLOAT         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_STRING        reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TYPEOF        reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PUSH          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_POP           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LENGTH        reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_MUTABLE       reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_STRUCT        reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_BREAK         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_CONTINUE      reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    MENOS           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PARIZQ          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOG10         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_SIN           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_COS           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TAN           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_SQRT          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_UPPERCASE     reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOWERCASE     reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOG           reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    DECIMAL         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    ENTERO          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TRUE          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FALSE         reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    CADENA          reduce using rule 27 (ARREGLOS -> ARREGLOS COMA ARREGLO .)


state 257

    (29) ARREGLO -> CORIZQ LISTAS CORDER .

    COMA            reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LENGTH        reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    MENOS           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOG10         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_SIN           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_COS           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TAN           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_SQRT          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_UPPERCASE     reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOWERCASE     reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOG           reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    DECIMAL         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    ENTERO          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TRUE          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FALSE         reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)
    CADENA          reduce using rule 29 (ARREGLO -> CORIZQ LISTAS CORDER .)


state 258

    (59) E -> R_LOG10 PARIZQ E PARDER .

    IGUAL           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MAS             reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRING        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_RETURN        reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    PARIZQ          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOG10         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_SIN           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_COS           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TAN           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_SQRT          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOG           reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    DECIMAL         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    ENTERO          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUE          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FALSE         reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    CADENA          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 59 (E -> R_LOG10 PARIZQ E PARDER .)


state 259

    (60) E -> R_SIN PARIZQ E PARDER .

    IGUAL           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MAS             reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_STRING        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_LOG10         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_SIN           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_COS           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_TAN           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_SQRT          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_LOG           reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    DECIMAL         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    ENTERO          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUE          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    R_FALSE         reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    CADENA          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 60 (E -> R_SIN PARIZQ E PARDER .)


state 260

    (61) E -> R_COS PARIZQ E PARDER .

    IGUAL           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MAS             reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_STRING        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_RETURN        reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    PARIZQ          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_LOG10         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_SIN           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_COS           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_TAN           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_SQRT          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_LOG           reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    DECIMAL         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    ENTERO          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_TRUE          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    R_FALSE         reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    CADENA          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 61 (E -> R_COS PARIZQ E PARDER .)


state 261

    (62) E -> R_TAN PARIZQ E PARDER .

    IGUAL           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MAS             reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_STRING        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_LOG10         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_SIN           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_COS           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_TAN           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_SQRT          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_LOG           reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    DECIMAL         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    ENTERO          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUE          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    R_FALSE         reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    CADENA          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 62 (E -> R_TAN PARIZQ E PARDER .)


state 262

    (63) E -> R_SQRT PARIZQ E PARDER .

    IGUAL           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MAS             reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRING        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_RETURN        reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    PARIZQ          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOG10         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_SIN           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_COS           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_TAN           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_SQRT          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOG           reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    DECIMAL         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    ENTERO          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUE          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    R_FALSE         reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    CADENA          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 63 (E -> R_SQRT PARIZQ E PARDER .)


state 263

    (64) E -> R_UPPERCASE PARIZQ E PARDER .

    IGUAL           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAS             reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOG10         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_SIN           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_COS           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TAN           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_SQRT          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOG           reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DECIMAL         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ENTERO          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUE          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FALSE         reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CADENA          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 64 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 264

    (65) E -> R_LOWERCASE PARIZQ E PARDER .

    IGUAL           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAS             reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOG10         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_SIN           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_COS           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TAN           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_SQRT          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOG           reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DECIMAL         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ENTERO          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUE          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FALSE         reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CADENA          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 65 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 265

    (66) E -> R_LOG PARIZQ E COMA . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 305
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 266

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 307
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 306
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 267

    (107) PARAMETROS -> PARAMETROS COMA . PARAMETRO
    (109) PARAMETRO -> . ID

    ID              shift and go to state 200

    PARAMETRO                      shift and go to state 308

state 268

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 309
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 269

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 310


state 270

    (30) LISTAS -> LISTAS COMA LISTA .

    PARDER          reduce using rule 30 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 30 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 30 (LISTAS -> LISTAS COMA LISTA .)


state 271

    (110) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 110 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 272

    (111) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 311
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 273

    (116) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 312


state 274

    (114) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 313


state 275

    (117) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 117 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 276

    (118) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (118) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO ELSEIF
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 314
    R_ELSE          shift and go to state 315
    R_ELSEIF        shift and go to state 126
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    ELSEIF                         shift and go to state 316
    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 277

    (121) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 317


state 278

    (122) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 319
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 318
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 279

    (123) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRING        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LENGTH        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    MENOS           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    PARIZQ          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOG10         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_SIN           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_COS           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TAN           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_SQRT          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_UPPERCASE     reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOWERCASE     reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOG           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    DECIMAL         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ENTERO          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUE          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FALSE         reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    CADENA          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 123 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 280

    (85) RE -> PARIZQ RE . PARDER
    (79) RE -> RE . MENQUE RE
    (80) RE -> RE . MAYQUE RE
    (81) RE -> RE . IGUALQUE RE
    (82) RE -> RE . NIGUALQUE RE
    (83) RE -> RE . MENORIGUAL RE
    (84) RE -> RE . MAYORIGUAL RE

    PARDER          shift and go to state 217
    MENQUE          shift and go to state 131
    MAYQUE          shift and go to state 132
    IGUALQUE        shift and go to state 133
    NIGUALQUE       shift and go to state 134
    MENORIGUAL      shift and go to state 135
    MAYORIGUAL      shift and go to state 136


state 281

    (146) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (76) ARRAY -> CORIZQ . E CORDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 320
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 282

    (141) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (129) INSTRUCCION_LOOP -> . IFS
    (130) INSTRUCCION_LOOP -> . FORS
    (131) INSTRUCCION_LOOP -> . WHILES
    (132) INSTRUCCION_LOOP -> . ASIGNACION
    (133) INSTRUCCION_LOOP -> . I
    (134) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (135) INSTRUCCION_LOOP -> . NATIVAS
    (136) INSTRUCCION_LOOP -> . STRUCTS
    (137) INSTRUCCION_LOOP -> . BREAK
    (138) INSTRUCCION_LOOP -> . CONTINUE
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 321
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION_LOOP               shift and go to state 230
    IFS                            shift and go to state 141
    FORS                           shift and go to state 142
    WHILES                         shift and go to state 143
    ASIGNACION                     shift and go to state 144
    I                              shift and go to state 145
    LLAMADAS                       shift and go to state 146
    NATIVAS                        shift and go to state 147
    STRUCTS                        shift and go to state 148
    BREAK                          shift and go to state 149
    CONTINUE                       shift and go to state 150
    E                              shift and go to state 24

state 283

    (142) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 322


state 284

    (143) RANGO -> E DOSPUNTITOS . E
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 323
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 285

    (139) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LENGTH        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    MENOS           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    PARIZQ          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG10         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SIN           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_COS           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TAN           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SQRT          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    DECIMAL         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ENTERO          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUE          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FALSE         reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    CADENA          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 139 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 286

    (34) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 172
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174

    TIPO                           shift and go to state 324

state 287

    (37) ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 37 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)


state 288

    (36) ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 325


state 289

    (35) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (43) TIPO -> . R_NOTHING
    (44) TIPO -> . R_INT64
    (45) TIPO -> . R_FLOAT64
    (46) TIPO -> . R_STRING
    (47) TIPO -> . R_CHAR
    (48) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 169
    R_INT64         shift and go to state 170
    R_FLOAT64       shift and go to state 171
    R_STRING        shift and go to state 172
    R_CHAR          shift and go to state 173
    R_BOOL          shift and go to state 174

    TIPO                           shift and go to state 326

state 290

    (38) ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 38 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)


state 291

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LENGTH        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    MENOS           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    PARIZQ          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG10         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SIN           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_COS           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TAN           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SQRT          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    DECIMAL         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ENTERO          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUE          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FALSE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    CADENA          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 292

    (20) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 20 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 20 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 293

    (24) IMPRESION -> DOLAR PARIZQ E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 327
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 294

    (25) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER
    (27) ARREGLOS -> ARREGLOS . COMA ARREGLO

    PARDER          shift and go to state 328
    COMA            shift and go to state 190


state 295

    (26) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER
    (77) E -> NATIVAS .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 329
    MAS             reduce using rule 77 (E -> NATIVAS .)
    MENOS           reduce using rule 77 (E -> NATIVAS .)
    POR             reduce using rule 77 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 77 (E -> NATIVAS .)
    MODAL           reduce using rule 77 (E -> NATIVAS .)
    POTENCIA        reduce using rule 77 (E -> NATIVAS .)

  ! PARDER          [ reduce using rule 77 (E -> NATIVAS .) ]


state 296

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LENGTH        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    MENOS           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    PARIZQ          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG10         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SIN           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_COS           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TAN           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SQRT          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    DECIMAL         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ENTERO          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUE          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FALSE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    CADENA          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 297

    (92) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 330


state 298

    (93) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 331


state 299

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA . E PARDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 332
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 300

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .

    PTCOMA          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    IGUAL           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAS             reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENOS           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    POR             reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DIVIDIDO        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MODAL           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    POTENCIA        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARDER          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENQUE          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAYQUE          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    IGUALQUE        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    NIGUALQUE       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_END           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSE          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    AND             reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    OR              reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSEIF        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_IF            reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FOR           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_WHILE         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_GLOBAL        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOCAL         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINT         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINTLN       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ID              reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PARSE         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUNC         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FLOAT         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRING        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TYPEOF        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PUSH          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_POP           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LENGTH        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_MUTABLE       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRUCT        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_BREAK         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_CONTINUE      reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_RETURN        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARIZQ          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOG10         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_SIN           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_COS           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TAN           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_SQRT          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_UPPERCASE     reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOWERCASE     reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOG           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DECIMAL         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ENTERO          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUE          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FALSE         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CADENA          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    COMA            reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CORDER          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTITOS     reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)


state 301

    (147) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 333


state 302

    (149) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LENGTH        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    MENOS           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    PARIZQ          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOG10         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_SIN           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_COS           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TAN           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_SQRT          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOG           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    DECIMAL         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ENTERO          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUE          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FALSE         reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    CADENA          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 149 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 303

    (154) ELEMENTO -> ID DOSPUNTOS TIPO .

    PTCOMA          reduce using rule 154 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    COMA            reduce using rule 154 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    R_END           reduce using rule 154 (ELEMENTO -> ID DOSPUNTOS TIPO .)


state 304

    (151) ELEMENTOS -> ELEMENTOS COMA ELEMENTO .

    PTCOMA          reduce using rule 151 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    COMA            reduce using rule 151 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    R_END           reduce using rule 151 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)


state 305

    (66) E -> R_LOG PARIZQ E COMA E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 334
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 306

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 335
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 307

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 336


state 308

    (107) PARAMETROS -> PARAMETROS COMA PARAMETRO .

    PARDER          reduce using rule 107 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)
    COMA            reduce using rule 107 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)


state 309

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 337


state 310

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LENGTH        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    MENOS           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    PARIZQ          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOG10         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_SIN           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_COS           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TAN           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_SQRT          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOG           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    DECIMAL         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ENTERO          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUE          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FALSE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    CADENA          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 311

    (111) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 338


state 312

    (116) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 313

    (114) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 114 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 314

    (118) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 339


state 315

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 341
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCIONES                  shift and go to state 340
    INSTRUCCION                    shift and go to state 8
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 316

    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LENGTH        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    MENOS           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    PARIZQ          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOG10         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_SIN           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_COS           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TAN           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_SQRT          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_UPPERCASE     reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOWERCASE     reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOG           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    DECIMAL         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ENTERO          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUE          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FALSE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    CADENA          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 317

    (121) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRING        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    MENOS           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    PARIZQ          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOG10         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_SIN           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_COS           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TAN           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_SQRT          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOG           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    DECIMAL         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ENTERO          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUE          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FALSE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    CADENA          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 318

    (122) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 342
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 319

    (125) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 343


state 320

    (146) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (76) ARRAY -> CORIZQ E . CORDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    DOSPUNTOS       shift and go to state 344
    CORDER          shift and go to state 206
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 321

    (141) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 345


state 322

    (142) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRING        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LENGTH        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    MENOS           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    PARIZQ          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOG10         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_SIN           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_COS           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TAN           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_SQRT          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOG           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    DECIMAL         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ENTERO          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUE          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FALSE         reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    CADENA          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 142 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 323

    (143) RANGO -> E DOSPUNTITOS E .
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    R_END           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_IF            reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_FOR           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_WHILE         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_GLOBAL        reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_LOCAL         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_PRINT         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_PRINTLN       reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    ID              reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_PARSE         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_TRUNC         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_FLOAT         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_STRING        reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_TYPEOF        reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_PUSH          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_POP           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_LENGTH        reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_MUTABLE       reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_STRUCT        reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_BREAK         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_CONTINUE      reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    PARIZQ          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_LOG10         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_SIN           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_COS           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_TAN           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_SQRT          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_UPPERCASE     reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_LOWERCASE     reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_LOG           reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    DECIMAL         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    ENTERO          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_TRUE          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    R_FALSE         reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    CADENA          reduce using rule 143 (RANGO -> E DOSPUNTITOS E .)
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82

  ! MENOS           [ reduce using rule 143 (RANGO -> E DOSPUNTITOS E .) ]


state 324

    (34) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 346


state 325

    (36) ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 36 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 326

    (35) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 347


state 327

    (24) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 24 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 24 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 328

    (25) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 25 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 25 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 329

    (26) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 26 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 26 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 330

    (92) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    IGUAL           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LENGTH        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG10         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_SIN           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_COS           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TAN           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_SQRT          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_UPPERCASE     reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOWERCASE     reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG           reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DECIMAL         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ENTERO          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUE          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FALSE         reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CADENA          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 92 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 331

    (93) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    IGUAL           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LENGTH        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG10         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_SIN           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_COS           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TAN           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_SQRT          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_UPPERCASE     reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOWERCASE     reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG           reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DECIMAL         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ENTERO          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUE          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FALSE         reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CADENA          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 93 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 332

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E . PARDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    PARDER          shift and go to state 348
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 333

    (147) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_IF            reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LENGTH        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    MENOS           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    PARIZQ          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG10         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SIN           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_COS           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TAN           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SQRT          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    DECIMAL         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ENTERO          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUE          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FALSE         reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    CADENA          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FUNCTION      reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_END           reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSE          reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSEIF        reduce using rule 147 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 334

    (66) E -> R_LOG PARIZQ E COMA E PARDER .

    IGUAL           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAS             reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRING        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LENGTH        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_MUTABLE       reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRUCT        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_RETURN        reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARIZQ          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOG10         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_SIN           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_COS           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TAN           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_SQRT          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_UPPERCASE     reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOWERCASE     reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOG           reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DECIMAL         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ENTERO          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUE          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FALSE         reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CADENA          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 66 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 335

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 349


state 336

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    ID              reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LENGTH        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    MENOS           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    PARIZQ          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOG10         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_SIN           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_COS           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TAN           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_SQRT          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOG           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    DECIMAL         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    ENTERO          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TRUE          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FALSE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    CADENA          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    $end            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)


state 337

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 338

    (111) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 339

    (118) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 340

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (110) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (113) IFS -> . R_IF LO R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (115) IFS -> . R_IF LO ELSEIF
    (116) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (117) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (141) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (142) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (139) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (140) WHILES -> . R_WHILE LO R_END PTCOMA
    (34) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (35) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (38) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . R_GLOBAL E PTCOMA
    (41) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (147) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (148) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (149) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (150) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (42) BREAK -> . R_BREAK PTCOMA
    (126) CONTINUE -> . R_CONTINUE PTCOMA
    (101) RETURN -> . R_RETURN LISTA PTCOMA
    (102) RETURN -> . R_RETURN PTCOMA
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS

    R_END           shift and go to state 350
    R_IF            shift and go to state 20
    R_FOR           shift and go to state 21
    R_WHILE         shift and go to state 22
    R_GLOBAL        shift and go to state 23
    R_LOCAL         shift and go to state 25
    R_PRINT         shift and go to state 26
    R_PRINTLN       shift and go to state 27
    ID              shift and go to state 6
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35
    R_MUTABLE       shift and go to state 36
    R_STRUCT        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54

    INSTRUCCION                    shift and go to state 56
    IFS                            shift and go to state 9
    FORS                           shift and go to state 10
    WHILES                         shift and go to state 11
    ASIGNACION                     shift and go to state 12
    I                              shift and go to state 13
    LLAMADAS                       shift and go to state 14
    NATIVAS                        shift and go to state 15
    STRUCTS                        shift and go to state 16
    BREAK                          shift and go to state 17
    CONTINUE                       shift and go to state 18
    RETURN                         shift and go to state 19
    E                              shift and go to state 24

state 341

    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 351


state 342

    (122) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 352


state 343

    (125) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 344

    (146) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (51) E -> . E MAS E
    (52) E -> . E MENOS E
    (53) E -> . E POR E
    (54) E -> . E DIVIDIDO E
    (55) E -> . E MODAL E
    (56) E -> . E POTENCIA E
    (57) E -> . MENOS E
    (58) E -> . PARIZQ E PARDER
    (59) E -> . R_LOG10 PARIZQ E PARDER
    (60) E -> . R_SIN PARIZQ E PARDER
    (61) E -> . R_COS PARIZQ E PARDER
    (62) E -> . R_TAN PARIZQ E PARDER
    (63) E -> . R_SQRT PARIZQ E PARDER
    (64) E -> . R_UPPERCASE PARIZQ E PARDER
    (65) E -> . R_LOWERCASE PARIZQ E PARDER
    (66) E -> . R_LOG PARIZQ E COMA E PARDER
    (67) E -> . DECIMAL
    (68) E -> . ENTERO
    (69) E -> . R_TRUE
    (70) E -> . R_FALSE
    (71) E -> . CADENA
    (72) E -> . ID
    (73) E -> . ID ARRAYS
    (77) E -> . NATIVAS
    (78) E -> . LLAMADAS
    (92) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (93) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (49) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (50) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 7
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 54
    ID              shift and go to state 63
    R_PARSE         shift and go to state 28
    R_TRUNC         shift and go to state 29
    R_FLOAT         shift and go to state 30
    R_STRING        shift and go to state 31
    R_TYPEOF        shift and go to state 32
    R_PUSH          shift and go to state 33
    R_POP           shift and go to state 34
    R_LENGTH        shift and go to state 35

    E                              shift and go to state 353
    NATIVAS                        shift and go to state 64
    LLAMADAS                       shift and go to state 65

state 345

    (141) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LENGTH        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    MENOS           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    PARIZQ          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG10         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SIN           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_COS           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TAN           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SQRT          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    DECIMAL         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ENTERO          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUE          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FALSE         reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    CADENA          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 141 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 346

    (34) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 34 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 347

    (35) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 35 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 348

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .

    PTCOMA          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    IGUAL           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAS             reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENOS           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    POR             reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DIVIDIDO        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MODAL           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    POTENCIA        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARDER          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENQUE          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAYQUE          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    IGUALQUE        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    NIGUALQUE       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENORIGUAL      reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAYORIGUAL      reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_END           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSE          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    AND             reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    OR              reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSEIF        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_IF            reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FOR           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_WHILE         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_GLOBAL        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOCAL         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINT         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINTLN       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ID              reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PARSE         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUNC         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FLOAT         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRING        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TYPEOF        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PUSH          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_POP           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LENGTH        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_MUTABLE       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRUCT        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_BREAK         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_CONTINUE      reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_RETURN        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARIZQ          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOG10         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_SIN           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_COS           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TAN           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_SQRT          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_UPPERCASE     reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOWERCASE     reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOG           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DECIMAL         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ENTERO          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUE          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FALSE         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CADENA          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    COMA            reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CORDER          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTOS       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)


state 349

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)


state 350

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 354


state 351

    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 352

    (122) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 353

    (146) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (51) E -> E . MAS E
    (52) E -> E . MENOS E
    (53) E -> E . POR E
    (54) E -> E . DIVIDIDO E
    (55) E -> E . MODAL E
    (56) E -> E . POTENCIA E

    CORDER          shift and go to state 355
    MAS             shift and go to state 77
    MENOS           shift and go to state 78
    POR             shift and go to state 79
    DIVIDIDO        shift and go to state 80
    MODAL           shift and go to state 81
    POTENCIA        shift and go to state 82


state 354

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 355

    (146) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRING        reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LENGTH        reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_MUTABLE       reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRUCT        reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    MENOS           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    PARIZQ          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOG10         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_SIN           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_COS           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TAN           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_SQRT          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_UPPERCASE     reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOWERCASE     reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOG           reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    DECIMAL         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ENTERO          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUE          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FALSE         reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    CADENA          reduce using rule 146 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 4 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LENGTH in state 4 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_BREAK in state 4 resolved as shift
WARNING: shift/reduce conflict for R_CONTINUE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 4 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 4 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOG10 in state 4 resolved as shift
WARNING: shift/reduce conflict for R_SIN in state 4 resolved as shift
WARNING: shift/reduce conflict for R_COS in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TAN in state 4 resolved as shift
WARNING: shift/reduce conflict for R_SQRT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_UPPERCASE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOWERCASE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOG in state 4 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 4 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TRUE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FALSE in state 4 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 4 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 63 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for COMA in state 100 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 129 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 130 resolved as shift
WARNING: shift/reduce conflict for COMA in state 164 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 225 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 227 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 295 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 323 resolved as shift
WARNING: reduce/reduce conflict in state 147 resolved using rule (E -> NATIVAS)
WARNING: rejected rule (INSTRUCCION_LOOP -> NATIVAS) in state 147
