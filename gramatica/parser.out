Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO FUNCIONES
Rule 2     INICIO -> INICIO INSTRUCCIONES
Rule 3     INICIO -> FUNCIONES
Rule 4     INICIO -> INSTRUCCIONES
Rule 5     INSTRUCCIONES -> INSTRUCCIONES IFS
Rule 6     INSTRUCCIONES -> INSTRUCCIONES FORS
Rule 7     INSTRUCCIONES -> INSTRUCCIONES WHILES
Rule 8     INSTRUCCIONES -> INSTRUCCIONES ASIGNACION
Rule 9     INSTRUCCIONES -> INSTRUCCIONES I
Rule 10    INSTRUCCIONES -> INSTRUCCIONES LLAMADAS
Rule 11    INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA
Rule 12    INSTRUCCIONES -> INSTRUCCIONES STRUCTS
Rule 13    INSTRUCCIONES -> INSTRUCCIONES BREAK
Rule 14    INSTRUCCIONES -> INSTRUCCIONES CONTINUE
Rule 15    INSTRUCCIONES -> IFS
Rule 16    INSTRUCCIONES -> FORS
Rule 17    INSTRUCCIONES -> WHILES
Rule 18    INSTRUCCIONES -> ASIGNACION
Rule 19    INSTRUCCIONES -> I
Rule 20    INSTRUCCIONES -> LLAMADAS
Rule 21    INSTRUCCIONES -> NATIVAS PTCOMA
Rule 22    INSTRUCCIONES -> STRUCTS
Rule 23    INSTRUCCIONES -> BREAK
Rule 24    INSTRUCCIONES -> CONTINUE
Rule 25    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 26    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 27    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 28    IMPRESIONES -> IMPRESION
Rule 29    IMPRESION -> NATIVAS
Rule 30    IMPRESION -> ARREGLOS
Rule 31    IMPRESION -> LLAMADAS
Rule 32    IMPRESION -> E
Rule 33    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 34    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 35    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 36    ARREGLOS -> ID CORIZQ LISTAS CORDER
Rule 37    ARREGLOS -> CORIZQ LISTAS CORDER
Rule 38    ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 39    ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 40    LISTAS -> LISTAS COMA LISTA
Rule 41    LISTAS -> LISTA
Rule 42    LISTA -> NATIVAS
Rule 43    LISTA -> ARREGLOS
Rule 44    LISTA -> LLAMADAS
Rule 45    LISTA -> E
Rule 46    ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 47    ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 48    ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 49    ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA
Rule 50    ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA
Rule 51    ASIGNACION -> ID IGUAL LISTA PTCOMA
Rule 52    ASIGNACION -> R_GLOBAL ID PTCOMA
Rule 53    ASIGNACION -> R_LOCAL ID PTCOMA
Rule 54    BREAK -> R_BREAK PTCOMA
Rule 55    TIPO -> R_NOTHING
Rule 56    TIPO -> R_INT64
Rule 57    TIPO -> R_FLOAT64
Rule 58    TIPO -> R_STRING
Rule 59    TIPO -> R_CHAR
Rule 60    TIPO -> R_BOOL
Rule 61    LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA
Rule 62    LLAMADAS -> ID PARIZQ PARDER PTCOMA
Rule 63    E -> E MAS E
Rule 64    E -> E MENOS E
Rule 65    E -> E POR E
Rule 66    E -> E DIVIDIDO E
Rule 67    E -> E MODAL E
Rule 68    E -> E POTENCIA E
Rule 69    E -> MENOS E
Rule 70    E -> PARIZQ E PARDER
Rule 71    E -> R_LOG10 PARIZQ E PARDER
Rule 72    E -> R_SIN PARIZQ E PARDER
Rule 73    E -> R_COS PARIZQ E PARDER
Rule 74    E -> R_TAN PARIZQ E PARDER
Rule 75    E -> R_SQRT PARIZQ E PARDER
Rule 76    E -> R_UPPERCASE PARIZQ E PARDER
Rule 77    E -> R_LOWERCASE PARIZQ E PARDER
Rule 78    E -> R_LOG PARIZQ E COMA E PARDER
Rule 79    E -> DECIMAL
Rule 80    E -> ENTERO
Rule 81    E -> R_TRUE
Rule 82    E -> R_FALSE
Rule 83    E -> CADENA
Rule 84    E -> ID
Rule 85    RE -> RE MENQUE RE
Rule 86    RE -> RE MAYQUE RE
Rule 87    RE -> RE IGUALQUE RE
Rule 88    RE -> RE NIGUALQUE RE
Rule 89    RE -> RE MENORIGUAL RE
Rule 90    RE -> RE MAYORIGUAL RE
Rule 91    RE -> PARIZQ RE PARDER
Rule 92    RE -> E
Rule 93    LO -> LO AND LO
Rule 94    LO -> LO OR LO
Rule 95    LO -> DIFERENTE LO
Rule 96    LO -> PARIZQ LO PARDER
Rule 97    LO -> RE
Rule 98    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 99    NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 100   NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 101   NATIVAS -> R_STRING PARIZQ LISTA PARDER
Rule 102   NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 103   NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
Rule 104   NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER
Rule 105   NATIVAS -> ID PUNTO R_LENGTH
Rule 106   RETURN -> R_RETURN LISTA
Rule 107   RETURN -> R_RETURN
Rule 108   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
Rule 109   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 110   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
Rule 111   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
Rule 112   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 113   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 114   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 115   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
Rule 116   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 117   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 118   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 119   IFS -> R_IF LO R_END PTCOMA
Rule 120   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 121   IFS -> R_IF LO ELSEIF
Rule 122   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 123   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 124   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 125   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 126   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 127   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 128   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 129   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 130   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 131   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 132   CONTINUE -> R_CONTINUE PTCOMA
Rule 133   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS
Rule 134   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS
Rule 135   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES
Rule 136   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION
Rule 137   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I
Rule 138   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS
Rule 139   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS
Rule 140   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS
Rule 141   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK
Rule 142   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE
Rule 143   INSTRUCCIONES_LOOP -> IFS
Rule 144   INSTRUCCIONES_LOOP -> FORS
Rule 145   INSTRUCCIONES_LOOP -> WHILES
Rule 146   INSTRUCCIONES_LOOP -> ASIGNACION
Rule 147   INSTRUCCIONES_LOOP -> I
Rule 148   INSTRUCCIONES_LOOP -> LLAMADAS
Rule 149   INSTRUCCIONES_LOOP -> NATIVAS
Rule 150   INSTRUCCIONES_LOOP -> STRUCTS
Rule 151   INSTRUCCIONES_LOOP -> BREAK
Rule 152   INSTRUCCIONES_LOOP -> CONTINUE
Rule 153   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 154   WHILES -> R_WHILE LO R_END PTCOMA
Rule 155   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 156   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 157   RANGO -> E DOSPUNTITOS E
Rule 158   RANGO -> E
Rule 159   RANGO -> ARREGLOS
Rule 160   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 161   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 162   STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA
Rule 163   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 164   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 165   ELEMENTOS -> ELEMENTOS COMA ELEMENTO
Rule 166   ELEMENTOS -> ELEMENTO
Rule 167   ELEMENTO -> ID
Rule 168   ELEMENTO -> ID DOSPUNTOS TIPO

Terminals, with rules where they appear

AND                  : 93
CADENA               : 83
COMA                 : 27 40 78 98 99 103 165
CORDER               : 36 37 38 38 39 39 160
CORIZQ               : 36 37 38 38 39 39 160
DECIMAL              : 79
DIFERENTE            : 95 103 104
DIVIDIDO             : 66
DOLAR                : 33 34 35
DOSPUNTITOS          : 157
DOSPUNTOS            : 46 47 48 160 168
ENTERO               : 80
ID                   : 36 38 46 47 48 49 50 51 52 53 61 62 84 103 104 105 108 109 110 111 112 113 114 115 155 156 160 161 162 163 164 167 168
IGUAL                : 46 47 48 49 50 51
IGUALQUE             : 87
MAS                  : 63
MAYORIGUAL           : 90
MAYQUE               : 86
MENORIGUAL           : 89
MENOS                : 64 69
MENQUE               : 85
MODAL                : 67
NIGUALQUE            : 88
OR                   : 94
PARDER               : 25 26 33 34 35 62 70 71 72 73 74 75 76 77 78 91 96 98 99 100 101 102 103 104 108 109 110 111 112 113 114 115
PARIZQ               : 25 26 33 34 35 61 61 62 70 71 72 73 74 75 76 77 78 91 96 98 99 100 101 102 103 104 108 109 110 111 112 113 114 115
POR                  : 65
POTENCIA             : 68
PTCOMA               : 11 21 25 26 46 47 48 49 50 51 52 53 54 61 62 108 109 110 111 112 113 114 115 116 117 119 120 122 123 124 125 127 128 130 131 132 153 154 155 156 161 162 163 164
PUNTO                : 105
R_BOOL               : 60
R_BREAK              : 54
R_CHAR               : 59
R_CONTINUE           : 132
R_COS                : 73
R_ELSE               : 117 120 122 123 125 128 130 131
R_ELSEIF             : 124 125 126 127 128 129 130 131
R_END                : 108 109 110 111 112 113 114 115 116 117 119 120 122 123 124 125 127 128 130 131 153 154 155 156 161 163 164
R_FALSE              : 82
R_FLOAT              : 100
R_FLOAT64            : 57
R_FOR                : 155 156
R_FUNCTION           : 108 109 110 111 112 113 114 115
R_GLOBAL             : 46 49 52
R_IF                 : 116 117 118 119 120 121 122 123
R_IN                 : 155 156
R_INT64              : 56
R_LENGTH             : 105
R_LOCAL              : 47 50 53
R_LOG                : 78
R_LOG10              : 71
R_LOWERCASE          : 77
R_MUTABLE            : 161 163
R_NOTHING            : 55
R_PARSE              : 98
R_POP                : 104
R_PRINT              : 25
R_PRINTLN            : 26
R_PUSH               : 103
R_RETURN             : 106 107
R_SIN                : 72
R_SQRT               : 75
R_STRING             : 58 101
R_STRUCT             : 161 162 163 164
R_TAN                : 74
R_TRUE               : 81
R_TRUNC              : 99
R_TYPEOF             : 102
R_UPPERCASE          : 76
R_WHILE              : 153 154
error                : 

Nonterminals, with rules where they appear

ARREGLOS             : 30 34 43 159
ASIGNACION           : 8 18 136 146
BREAK                : 13 23 141 151
CONTINUE             : 14 24 142 152
E                    : 32 33 45 63 63 64 64 65 65 66 66 67 67 68 68 69 70 71 72 73 74 75 76 77 78 78 92 103 157 157 158 160 160
ELEMENTO             : 165 166
ELEMENTOS            : 161 162 165
ELSEIF               : 118 121 126 129
FORS                 : 6 16 134 144
FUNCIONES            : 1 3
I                    : 9 19 137 147
IFS                  : 5 15 133 143
IMPRESION            : 27 28
IMPRESIONES          : 25 26 27
INICIO               : 1 2 0
INSTRUCCIONES        : 2 4 5 6 7 8 9 10 11 12 13 14 108 109 112 113 116 117 117 118 120 122 124 125 125 126 128 130
INSTRUCCIONES_LOOP   : 133 134 135 136 137 138 139 140 141 142 153 155
LISTA                : 40 41 46 47 48 49 50 51 98 99 100 101 102 106
LISTAS               : 36 37 38 38 39 39 40 61 108 109 110 111
LLAMADAS             : 10 20 31 44 138 148
LO                   : 93 93 94 94 95 96 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 153 154
NATIVAS              : 11 21 29 35 42 139 149
RANGO                : 155 156
RE                   : 85 85 86 86 87 87 88 88 89 89 90 90 91 97
RETURN               : 109 111 113 115
STRUCTS              : 12 22 140 150
TIPO                 : 46 47 48 98 99 168
WHILES               : 7 17 135 145

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO FUNCIONES
    (2) INICIO -> . INICIO INSTRUCCIONES
    (3) INICIO -> . FUNCIONES
    (4) INICIO -> . INSTRUCCIONES
    (108) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (111) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (112) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (115) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INICIO                         shift and go to state 1
    FUNCIONES                      shift and go to state 2
    INSTRUCCIONES                  shift and go to state 3
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . FUNCIONES
    (2) INICIO -> INICIO . INSTRUCCIONES
    (108) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (111) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (112) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (115) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    FUNCIONES                      shift and go to state 34
    INSTRUCCIONES                  shift and go to state 35
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 2

    (3) INICIO -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INICIO -> FUNCIONES .)
    R_IF            reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INICIO -> FUNCIONES .)
    ID              reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_STRING        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INICIO -> FUNCIONES .)
    R_POP           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_BREAK         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_CONTINUE      reduce using rule 3 (INICIO -> FUNCIONES .)
    $end            reduce using rule 3 (INICIO -> FUNCIONES .)


state 3

    (4) INICIO -> INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
  ! shift/reduce conflict for R_BREAK resolved as shift
  ! shift/reduce conflict for R_CONTINUE resolved as shift
    R_FUNCTION      reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

  ! R_IF            [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_BREAK         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_CONTINUE      [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 4

    (108) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA
    (115) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER RETURN R_END PTCOMA

    ID              shift and go to state 46


state 5

    (48) ASIGNACION -> ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (51) ASIGNACION -> ID . IGUAL LISTA PTCOMA
    (61) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> ID . PARIZQ PARDER PTCOMA
    (105) NATIVAS -> ID . PUNTO R_LENGTH

    IGUAL           shift and go to state 47
    PARIZQ          shift and go to state 48
    PUNTO           shift and go to state 49


state 6

    (15) INSTRUCCIONES -> IFS .

    R_IF            reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_FOR           reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_WHILE         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_LOCAL         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    ID              reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_PRINT         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_PARSE         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_TRUNC         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_FLOAT         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_STRING        reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_PUSH          reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_POP           reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_STRUCT        reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_BREAK         reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_CONTINUE      reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCIONES -> IFS .)
    $end            reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_END           reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_ELSE          reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCIONES -> IFS .)
    R_RETURN        reduce using rule 15 (INSTRUCCIONES -> IFS .)


state 7

    (16) INSTRUCCIONES -> FORS .

    R_IF            reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_FOR           reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_WHILE         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_LOCAL         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    ID              reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_PRINT         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_PARSE         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_TRUNC         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_FLOAT         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_STRING        reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_PUSH          reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_POP           reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_STRUCT        reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_BREAK         reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_CONTINUE      reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCIONES -> FORS .)
    $end            reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_END           reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_ELSE          reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCIONES -> FORS .)
    R_RETURN        reduce using rule 16 (INSTRUCCIONES -> FORS .)


state 8

    (17) INSTRUCCIONES -> WHILES .

    R_IF            reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_FOR           reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_WHILE         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_LOCAL         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    ID              reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_PRINT         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_PARSE         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_TRUNC         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_FLOAT         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_STRING        reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_PUSH          reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_POP           reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_STRUCT        reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_BREAK         reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_CONTINUE      reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    $end            reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_END           reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_ELSE          reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCIONES -> WHILES .)
    R_RETURN        reduce using rule 17 (INSTRUCCIONES -> WHILES .)


state 9

    (18) INSTRUCCIONES -> ASIGNACION .

    R_IF            reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_FOR           reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_WHILE         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_GLOBAL        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_LOCAL         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    ID              reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINT         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINTLN       reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_PARSE         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_TRUNC         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_FLOAT         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_STRING        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_TYPEOF        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_PUSH          reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_POP           reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_MUTABLE       reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_STRUCT        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_BREAK         reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_CONTINUE      reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_FUNCTION      reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    $end            reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_END           reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSE          reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSEIF        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)
    R_RETURN        reduce using rule 18 (INSTRUCCIONES -> ASIGNACION .)


state 10

    (19) INSTRUCCIONES -> I .

    R_IF            reduce using rule 19 (INSTRUCCIONES -> I .)
    R_FOR           reduce using rule 19 (INSTRUCCIONES -> I .)
    R_WHILE         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_GLOBAL        reduce using rule 19 (INSTRUCCIONES -> I .)
    R_LOCAL         reduce using rule 19 (INSTRUCCIONES -> I .)
    ID              reduce using rule 19 (INSTRUCCIONES -> I .)
    R_PRINT         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_PRINTLN       reduce using rule 19 (INSTRUCCIONES -> I .)
    R_PARSE         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_TRUNC         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_FLOAT         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_STRING        reduce using rule 19 (INSTRUCCIONES -> I .)
    R_TYPEOF        reduce using rule 19 (INSTRUCCIONES -> I .)
    R_PUSH          reduce using rule 19 (INSTRUCCIONES -> I .)
    R_POP           reduce using rule 19 (INSTRUCCIONES -> I .)
    R_MUTABLE       reduce using rule 19 (INSTRUCCIONES -> I .)
    R_STRUCT        reduce using rule 19 (INSTRUCCIONES -> I .)
    R_BREAK         reduce using rule 19 (INSTRUCCIONES -> I .)
    R_CONTINUE      reduce using rule 19 (INSTRUCCIONES -> I .)
    R_FUNCTION      reduce using rule 19 (INSTRUCCIONES -> I .)
    $end            reduce using rule 19 (INSTRUCCIONES -> I .)
    R_END           reduce using rule 19 (INSTRUCCIONES -> I .)
    R_ELSE          reduce using rule 19 (INSTRUCCIONES -> I .)
    R_ELSEIF        reduce using rule 19 (INSTRUCCIONES -> I .)
    R_RETURN        reduce using rule 19 (INSTRUCCIONES -> I .)


state 11

    (20) INSTRUCCIONES -> LLAMADAS .

    R_IF            reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_FOR           reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_WHILE         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_GLOBAL        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_LOCAL         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    ID              reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINT         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINTLN       reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_PARSE         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_TRUNC         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_FLOAT         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_STRING        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_TYPEOF        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_PUSH          reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_POP           reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_MUTABLE       reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_STRUCT        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_BREAK         reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_CONTINUE      reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_FUNCTION      reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    $end            reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_END           reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSE          reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSEIF        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)
    R_RETURN        reduce using rule 20 (INSTRUCCIONES -> LLAMADAS .)


state 12

    (21) INSTRUCCIONES -> NATIVAS . PTCOMA

    PTCOMA          shift and go to state 50


state 13

    (22) INSTRUCCIONES -> STRUCTS .

    R_IF            reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_FOR           reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_WHILE         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_GLOBAL        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_LOCAL         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    ID              reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_PRINT         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_PRINTLN       reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_PARSE         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_TRUNC         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_FLOAT         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_STRING        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_TYPEOF        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_PUSH          reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_POP           reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_MUTABLE       reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_STRUCT        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_BREAK         reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_CONTINUE      reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_FUNCTION      reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    $end            reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_END           reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_ELSE          reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_ELSEIF        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)
    R_RETURN        reduce using rule 22 (INSTRUCCIONES -> STRUCTS .)


state 14

    (23) INSTRUCCIONES -> BREAK .

    R_IF            reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_FOR           reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_WHILE         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_GLOBAL        reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_LOCAL         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    ID              reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_PRINT         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_PRINTLN       reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_PARSE         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_TRUNC         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_FLOAT         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_STRING        reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_TYPEOF        reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_PUSH          reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_POP           reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_MUTABLE       reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_STRUCT        reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_BREAK         reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_CONTINUE      reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_FUNCTION      reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    $end            reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_END           reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_ELSE          reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_ELSEIF        reduce using rule 23 (INSTRUCCIONES -> BREAK .)
    R_RETURN        reduce using rule 23 (INSTRUCCIONES -> BREAK .)


state 15

    (24) INSTRUCCIONES -> CONTINUE .

    R_IF            reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_FOR           reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_WHILE         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_GLOBAL        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_LOCAL         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    ID              reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_PRINT         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_PRINTLN       reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_PARSE         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_TRUNC         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_FLOAT         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_STRING        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_TYPEOF        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_PUSH          reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_POP           reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_MUTABLE       reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_STRUCT        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_BREAK         reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_CONTINUE      reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_FUNCTION      reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    $end            reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_END           reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_ELSE          reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_ELSEIF        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)
    R_RETURN        reduce using rule 24 (INSTRUCCIONES -> CONTINUE .)


state 16

    (116) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (119) IFS -> R_IF . LO R_END PTCOMA
    (120) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> R_IF . LO ELSEIF
    (122) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 51
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 17

    (155) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 71


state 18

    (153) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> R_WHILE . LO R_END PTCOMA
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 72
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 19

    (46) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> R_GLOBAL . ID PTCOMA

    ID              shift and go to state 73


state 20

    (47) ASIGNACION -> R_LOCAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (50) ASIGNACION -> R_LOCAL . ID IGUAL LISTA PTCOMA
    (53) ASIGNACION -> R_LOCAL . ID PTCOMA

    ID              shift and go to state 74


state 21

    (25) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 75


state 22

    (26) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 76


state 23

    (98) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 77


state 24

    (99) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 78


state 25

    (100) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 79


state 26

    (101) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 80


state 27

    (102) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 81


state 28

    (103) NATIVAS -> R_PUSH . DIFERENTE PARIZQ ID COMA E PARDER

    DIFERENTE       shift and go to state 82


state 29

    (104) NATIVAS -> R_POP . DIFERENTE PARIZQ ID PARDER

    DIFERENTE       shift and go to state 83


state 30

    (161) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (163) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 84


state 31

    (162) STRUCTS -> R_STRUCT . ID ELEMENTOS PTCOMA
    (164) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 85


state 32

    (54) BREAK -> R_BREAK . PTCOMA

    PTCOMA          shift and go to state 86


state 33

    (132) CONTINUE -> R_CONTINUE . PTCOMA

    PTCOMA          shift and go to state 87


state 34

    (1) INICIO -> INICIO FUNCIONES .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_IF            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    ID              reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_STRING        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_POP           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_BREAK         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_CONTINUE      reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    $end            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)


state 35

    (2) INICIO -> INICIO INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
  ! shift/reduce conflict for R_BREAK resolved as shift
  ! shift/reduce conflict for R_CONTINUE resolved as shift
    R_FUNCTION      reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    $end            reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

  ! R_IF            [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_BREAK         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_CONTINUE      [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 36

    (5) INSTRUCCIONES -> INSTRUCCIONES IFS .

    R_IF            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FOR           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_WHILE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_GLOBAL        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_LOCAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    ID              reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINTLN       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PARSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TRUNC         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FLOAT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_STRING        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TYPEOF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PUSH          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_POP           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_MUTABLE       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_STRUCT        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_BREAK         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_CONTINUE      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FUNCTION      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    $end            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_END           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSEIF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_RETURN        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)


state 37

    (6) INSTRUCCIONES -> INSTRUCCIONES FORS .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_STRING        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_BREAK         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_CONTINUE      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)


state 38

    (7) INSTRUCCIONES -> INSTRUCCIONES WHILES .

    R_IF            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FOR           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_WHILE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_LOCAL         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    ID              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PARSE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TRUNC         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FLOAT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_STRING        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PUSH          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_POP           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_STRUCT        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_BREAK         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_CONTINUE      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    $end            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_END           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSE          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_RETURN        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)


state 39

    (8) INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .

    R_IF            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FOR           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_WHILE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_LOCAL         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    ID              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PARSE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TRUNC         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FLOAT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_STRING        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PUSH          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_POP           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_STRUCT        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_BREAK         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_CONTINUE      reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    $end            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_END           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSE          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_RETURN        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)


state 40

    (9) INSTRUCCIONES -> INSTRUCCIONES I .

    R_IF            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FOR           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_WHILE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_LOCAL         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    ID              reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PARSE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TRUNC         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FLOAT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_STRING        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PUSH          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_POP           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_STRUCT        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_BREAK         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_CONTINUE      reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    $end            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_END           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSE          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_RETURN        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)


state 41

    (10) INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .

    R_IF            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FOR           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_WHILE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_LOCAL         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    ID              reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PARSE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TRUNC         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FLOAT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_STRING        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PUSH          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_POP           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_STRUCT        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_BREAK         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_CONTINUE      reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    $end            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_END           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSE          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_RETURN        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)


state 42

    (11) INSTRUCCIONES -> INSTRUCCIONES NATIVAS . PTCOMA

    PTCOMA          shift and go to state 88


state 43

    (12) INSTRUCCIONES -> INSTRUCCIONES STRUCTS .

    R_IF            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FOR           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_WHILE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_LOCAL         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    ID              reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PARSE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TRUNC         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FLOAT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_STRING        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PUSH          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_POP           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_STRUCT        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_BREAK         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_CONTINUE      reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    $end            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_END           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSE          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_RETURN        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)


state 44

    (13) INSTRUCCIONES -> INSTRUCCIONES BREAK .

    R_IF            reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_FOR           reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_WHILE         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_LOCAL         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    ID              reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_PRINT         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_PARSE         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_TRUNC         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_FLOAT         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_STRING        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_PUSH          reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_POP           reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_STRUCT        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_BREAK         reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_CONTINUE      reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    $end            reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_END           reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_ELSE          reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)
    R_RETURN        reduce using rule 13 (INSTRUCCIONES -> INSTRUCCIONES BREAK .)


state 45

    (14) INSTRUCCIONES -> INSTRUCCIONES CONTINUE .

    R_IF            reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_FOR           reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_WHILE         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_LOCAL         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    ID              reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_PRINT         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_PARSE         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_TRUNC         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_FLOAT         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_STRING        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_PUSH          reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_POP           reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_STRUCT        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_BREAK         reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_CONTINUE      reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    $end            reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_END           reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_ELSE          reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)
    R_RETURN        reduce using rule 14 (INSTRUCCIONES -> INSTRUCCIONES CONTINUE .)


state 46

    (108) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA
    (115) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER RETURN R_END PTCOMA

    PARIZQ          shift and go to state 89


state 47

    (48) ASIGNACION -> ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (51) ASIGNACION -> ID IGUAL . LISTA PTCOMA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 91
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 48

    (61) LLAMADAS -> ID PARIZQ . LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> ID PARIZQ . PARDER PTCOMA
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARDER          shift and go to state 99
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 98
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 49

    (105) NATIVAS -> ID PUNTO . R_LENGTH

    R_LENGTH        shift and go to state 101


state 50

    (21) INSTRUCCIONES -> NATIVAS PTCOMA .

    R_IF            reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    ID              reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    $end            reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_END           reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 21 (INSTRUCCIONES -> NATIVAS PTCOMA .)


state 51

    (116) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (117) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (119) IFS -> R_IF LO . R_END PTCOMA
    (120) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> R_IF LO . ELSEIF
    (122) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (127) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (128) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO ELSEIF
    (130) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 103
    R_ELSE          shift and go to state 104
    AND             shift and go to state 106
    OR              shift and go to state 107
    R_ELSEIF        shift and go to state 108
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 102
    ELSEIF                         shift and go to state 105
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 52

    (95) LO -> DIFERENTE . LO
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 109
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 53

    (96) LO -> PARIZQ . LO PARDER
    (91) RE -> PARIZQ . RE PARDER
    (70) E -> PARIZQ . E PARDER
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 110
    RE                             shift and go to state 111
    E                              shift and go to state 112

state 54

    (97) LO -> RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 97 (LO -> RE .)
    R_ELSE          reduce using rule 97 (LO -> RE .)
    AND             reduce using rule 97 (LO -> RE .)
    OR              reduce using rule 97 (LO -> RE .)
    R_ELSEIF        reduce using rule 97 (LO -> RE .)
    R_IF            reduce using rule 97 (LO -> RE .)
    R_FOR           reduce using rule 97 (LO -> RE .)
    R_WHILE         reduce using rule 97 (LO -> RE .)
    R_GLOBAL        reduce using rule 97 (LO -> RE .)
    R_LOCAL         reduce using rule 97 (LO -> RE .)
    ID              reduce using rule 97 (LO -> RE .)
    R_PRINT         reduce using rule 97 (LO -> RE .)
    R_PRINTLN       reduce using rule 97 (LO -> RE .)
    R_PARSE         reduce using rule 97 (LO -> RE .)
    R_TRUNC         reduce using rule 97 (LO -> RE .)
    R_FLOAT         reduce using rule 97 (LO -> RE .)
    R_STRING        reduce using rule 97 (LO -> RE .)
    R_TYPEOF        reduce using rule 97 (LO -> RE .)
    R_PUSH          reduce using rule 97 (LO -> RE .)
    R_POP           reduce using rule 97 (LO -> RE .)
    R_MUTABLE       reduce using rule 97 (LO -> RE .)
    R_STRUCT        reduce using rule 97 (LO -> RE .)
    R_BREAK         reduce using rule 97 (LO -> RE .)
    R_CONTINUE      reduce using rule 97 (LO -> RE .)
    PARDER          reduce using rule 97 (LO -> RE .)
    MENQUE          shift and go to state 113
    MAYQUE          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NIGUALQUE       shift and go to state 116
    MENORIGUAL      shift and go to state 117
    MAYORIGUAL      shift and go to state 118


state 55

    (92) RE -> E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MENQUE          reduce using rule 92 (RE -> E .)
    MAYQUE          reduce using rule 92 (RE -> E .)
    IGUALQUE        reduce using rule 92 (RE -> E .)
    NIGUALQUE       reduce using rule 92 (RE -> E .)
    MENORIGUAL      reduce using rule 92 (RE -> E .)
    MAYORIGUAL      reduce using rule 92 (RE -> E .)
    R_END           reduce using rule 92 (RE -> E .)
    R_ELSE          reduce using rule 92 (RE -> E .)
    AND             reduce using rule 92 (RE -> E .)
    OR              reduce using rule 92 (RE -> E .)
    R_ELSEIF        reduce using rule 92 (RE -> E .)
    R_IF            reduce using rule 92 (RE -> E .)
    R_FOR           reduce using rule 92 (RE -> E .)
    R_WHILE         reduce using rule 92 (RE -> E .)
    R_GLOBAL        reduce using rule 92 (RE -> E .)
    R_LOCAL         reduce using rule 92 (RE -> E .)
    ID              reduce using rule 92 (RE -> E .)
    R_PRINT         reduce using rule 92 (RE -> E .)
    R_PRINTLN       reduce using rule 92 (RE -> E .)
    R_PARSE         reduce using rule 92 (RE -> E .)
    R_TRUNC         reduce using rule 92 (RE -> E .)
    R_FLOAT         reduce using rule 92 (RE -> E .)
    R_STRING        reduce using rule 92 (RE -> E .)
    R_TYPEOF        reduce using rule 92 (RE -> E .)
    R_PUSH          reduce using rule 92 (RE -> E .)
    R_POP           reduce using rule 92 (RE -> E .)
    R_MUTABLE       reduce using rule 92 (RE -> E .)
    R_STRUCT        reduce using rule 92 (RE -> E .)
    R_BREAK         reduce using rule 92 (RE -> E .)
    R_CONTINUE      reduce using rule 92 (RE -> E .)
    PARDER          reduce using rule 92 (RE -> E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 56

    (69) E -> MENOS . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 125

state 57

    (71) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 126


state 58

    (72) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 127


state 59

    (73) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 128


state 60

    (74) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 129


state 61

    (75) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 130


state 62

    (76) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 131


state 63

    (77) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 132


state 64

    (78) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 133


state 65

    (79) E -> DECIMAL .

    MAS             reduce using rule 79 (E -> DECIMAL .)
    MENOS           reduce using rule 79 (E -> DECIMAL .)
    POR             reduce using rule 79 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 79 (E -> DECIMAL .)
    MODAL           reduce using rule 79 (E -> DECIMAL .)
    POTENCIA        reduce using rule 79 (E -> DECIMAL .)
    MENQUE          reduce using rule 79 (E -> DECIMAL .)
    MAYQUE          reduce using rule 79 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 79 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 79 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 79 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 79 (E -> DECIMAL .)
    R_END           reduce using rule 79 (E -> DECIMAL .)
    R_ELSE          reduce using rule 79 (E -> DECIMAL .)
    AND             reduce using rule 79 (E -> DECIMAL .)
    OR              reduce using rule 79 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 79 (E -> DECIMAL .)
    R_IF            reduce using rule 79 (E -> DECIMAL .)
    R_FOR           reduce using rule 79 (E -> DECIMAL .)
    R_WHILE         reduce using rule 79 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 79 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 79 (E -> DECIMAL .)
    ID              reduce using rule 79 (E -> DECIMAL .)
    R_PRINT         reduce using rule 79 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 79 (E -> DECIMAL .)
    R_PARSE         reduce using rule 79 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 79 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 79 (E -> DECIMAL .)
    R_STRING        reduce using rule 79 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 79 (E -> DECIMAL .)
    R_PUSH          reduce using rule 79 (E -> DECIMAL .)
    R_POP           reduce using rule 79 (E -> DECIMAL .)
    R_MUTABLE       reduce using rule 79 (E -> DECIMAL .)
    R_STRUCT        reduce using rule 79 (E -> DECIMAL .)
    R_BREAK         reduce using rule 79 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 79 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 79 (E -> DECIMAL .)
    PTCOMA          reduce using rule 79 (E -> DECIMAL .)
    PARIZQ          reduce using rule 79 (E -> DECIMAL .)
    COMA            reduce using rule 79 (E -> DECIMAL .)
    PARDER          reduce using rule 79 (E -> DECIMAL .)
    CORDER          reduce using rule 79 (E -> DECIMAL .)
    DOSPUNTITOS     reduce using rule 79 (E -> DECIMAL .)


state 66

    (80) E -> ENTERO .

    MAS             reduce using rule 80 (E -> ENTERO .)
    MENOS           reduce using rule 80 (E -> ENTERO .)
    POR             reduce using rule 80 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 80 (E -> ENTERO .)
    MODAL           reduce using rule 80 (E -> ENTERO .)
    POTENCIA        reduce using rule 80 (E -> ENTERO .)
    MENQUE          reduce using rule 80 (E -> ENTERO .)
    MAYQUE          reduce using rule 80 (E -> ENTERO .)
    IGUALQUE        reduce using rule 80 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 80 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 80 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 80 (E -> ENTERO .)
    R_END           reduce using rule 80 (E -> ENTERO .)
    R_ELSE          reduce using rule 80 (E -> ENTERO .)
    AND             reduce using rule 80 (E -> ENTERO .)
    OR              reduce using rule 80 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 80 (E -> ENTERO .)
    R_IF            reduce using rule 80 (E -> ENTERO .)
    R_FOR           reduce using rule 80 (E -> ENTERO .)
    R_WHILE         reduce using rule 80 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 80 (E -> ENTERO .)
    R_LOCAL         reduce using rule 80 (E -> ENTERO .)
    ID              reduce using rule 80 (E -> ENTERO .)
    R_PRINT         reduce using rule 80 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 80 (E -> ENTERO .)
    R_PARSE         reduce using rule 80 (E -> ENTERO .)
    R_TRUNC         reduce using rule 80 (E -> ENTERO .)
    R_FLOAT         reduce using rule 80 (E -> ENTERO .)
    R_STRING        reduce using rule 80 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 80 (E -> ENTERO .)
    R_PUSH          reduce using rule 80 (E -> ENTERO .)
    R_POP           reduce using rule 80 (E -> ENTERO .)
    R_MUTABLE       reduce using rule 80 (E -> ENTERO .)
    R_STRUCT        reduce using rule 80 (E -> ENTERO .)
    R_BREAK         reduce using rule 80 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 80 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 80 (E -> ENTERO .)
    PTCOMA          reduce using rule 80 (E -> ENTERO .)
    PARIZQ          reduce using rule 80 (E -> ENTERO .)
    COMA            reduce using rule 80 (E -> ENTERO .)
    PARDER          reduce using rule 80 (E -> ENTERO .)
    CORDER          reduce using rule 80 (E -> ENTERO .)
    DOSPUNTITOS     reduce using rule 80 (E -> ENTERO .)


state 67

    (81) E -> R_TRUE .

    MAS             reduce using rule 81 (E -> R_TRUE .)
    MENOS           reduce using rule 81 (E -> R_TRUE .)
    POR             reduce using rule 81 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 81 (E -> R_TRUE .)
    MODAL           reduce using rule 81 (E -> R_TRUE .)
    POTENCIA        reduce using rule 81 (E -> R_TRUE .)
    MENQUE          reduce using rule 81 (E -> R_TRUE .)
    MAYQUE          reduce using rule 81 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 81 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 81 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 81 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 81 (E -> R_TRUE .)
    R_END           reduce using rule 81 (E -> R_TRUE .)
    R_ELSE          reduce using rule 81 (E -> R_TRUE .)
    AND             reduce using rule 81 (E -> R_TRUE .)
    OR              reduce using rule 81 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 81 (E -> R_TRUE .)
    R_IF            reduce using rule 81 (E -> R_TRUE .)
    R_FOR           reduce using rule 81 (E -> R_TRUE .)
    R_WHILE         reduce using rule 81 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 81 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 81 (E -> R_TRUE .)
    ID              reduce using rule 81 (E -> R_TRUE .)
    R_PRINT         reduce using rule 81 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 81 (E -> R_TRUE .)
    R_PARSE         reduce using rule 81 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 81 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 81 (E -> R_TRUE .)
    R_STRING        reduce using rule 81 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 81 (E -> R_TRUE .)
    R_PUSH          reduce using rule 81 (E -> R_TRUE .)
    R_POP           reduce using rule 81 (E -> R_TRUE .)
    R_MUTABLE       reduce using rule 81 (E -> R_TRUE .)
    R_STRUCT        reduce using rule 81 (E -> R_TRUE .)
    R_BREAK         reduce using rule 81 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 81 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 81 (E -> R_TRUE .)
    PTCOMA          reduce using rule 81 (E -> R_TRUE .)
    PARIZQ          reduce using rule 81 (E -> R_TRUE .)
    COMA            reduce using rule 81 (E -> R_TRUE .)
    PARDER          reduce using rule 81 (E -> R_TRUE .)
    CORDER          reduce using rule 81 (E -> R_TRUE .)
    DOSPUNTITOS     reduce using rule 81 (E -> R_TRUE .)


state 68

    (82) E -> R_FALSE .

    MAS             reduce using rule 82 (E -> R_FALSE .)
    MENOS           reduce using rule 82 (E -> R_FALSE .)
    POR             reduce using rule 82 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 82 (E -> R_FALSE .)
    MODAL           reduce using rule 82 (E -> R_FALSE .)
    POTENCIA        reduce using rule 82 (E -> R_FALSE .)
    MENQUE          reduce using rule 82 (E -> R_FALSE .)
    MAYQUE          reduce using rule 82 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 82 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 82 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 82 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 82 (E -> R_FALSE .)
    R_END           reduce using rule 82 (E -> R_FALSE .)
    R_ELSE          reduce using rule 82 (E -> R_FALSE .)
    AND             reduce using rule 82 (E -> R_FALSE .)
    OR              reduce using rule 82 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 82 (E -> R_FALSE .)
    R_IF            reduce using rule 82 (E -> R_FALSE .)
    R_FOR           reduce using rule 82 (E -> R_FALSE .)
    R_WHILE         reduce using rule 82 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 82 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 82 (E -> R_FALSE .)
    ID              reduce using rule 82 (E -> R_FALSE .)
    R_PRINT         reduce using rule 82 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 82 (E -> R_FALSE .)
    R_PARSE         reduce using rule 82 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 82 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 82 (E -> R_FALSE .)
    R_STRING        reduce using rule 82 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 82 (E -> R_FALSE .)
    R_PUSH          reduce using rule 82 (E -> R_FALSE .)
    R_POP           reduce using rule 82 (E -> R_FALSE .)
    R_MUTABLE       reduce using rule 82 (E -> R_FALSE .)
    R_STRUCT        reduce using rule 82 (E -> R_FALSE .)
    R_BREAK         reduce using rule 82 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 82 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 82 (E -> R_FALSE .)
    PTCOMA          reduce using rule 82 (E -> R_FALSE .)
    PARIZQ          reduce using rule 82 (E -> R_FALSE .)
    COMA            reduce using rule 82 (E -> R_FALSE .)
    PARDER          reduce using rule 82 (E -> R_FALSE .)
    CORDER          reduce using rule 82 (E -> R_FALSE .)
    DOSPUNTITOS     reduce using rule 82 (E -> R_FALSE .)


state 69

    (83) E -> CADENA .

    MAS             reduce using rule 83 (E -> CADENA .)
    MENOS           reduce using rule 83 (E -> CADENA .)
    POR             reduce using rule 83 (E -> CADENA .)
    DIVIDIDO        reduce using rule 83 (E -> CADENA .)
    MODAL           reduce using rule 83 (E -> CADENA .)
    POTENCIA        reduce using rule 83 (E -> CADENA .)
    MENQUE          reduce using rule 83 (E -> CADENA .)
    MAYQUE          reduce using rule 83 (E -> CADENA .)
    IGUALQUE        reduce using rule 83 (E -> CADENA .)
    NIGUALQUE       reduce using rule 83 (E -> CADENA .)
    MENORIGUAL      reduce using rule 83 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 83 (E -> CADENA .)
    R_END           reduce using rule 83 (E -> CADENA .)
    R_ELSE          reduce using rule 83 (E -> CADENA .)
    AND             reduce using rule 83 (E -> CADENA .)
    OR              reduce using rule 83 (E -> CADENA .)
    R_ELSEIF        reduce using rule 83 (E -> CADENA .)
    R_IF            reduce using rule 83 (E -> CADENA .)
    R_FOR           reduce using rule 83 (E -> CADENA .)
    R_WHILE         reduce using rule 83 (E -> CADENA .)
    R_GLOBAL        reduce using rule 83 (E -> CADENA .)
    R_LOCAL         reduce using rule 83 (E -> CADENA .)
    ID              reduce using rule 83 (E -> CADENA .)
    R_PRINT         reduce using rule 83 (E -> CADENA .)
    R_PRINTLN       reduce using rule 83 (E -> CADENA .)
    R_PARSE         reduce using rule 83 (E -> CADENA .)
    R_TRUNC         reduce using rule 83 (E -> CADENA .)
    R_FLOAT         reduce using rule 83 (E -> CADENA .)
    R_STRING        reduce using rule 83 (E -> CADENA .)
    R_TYPEOF        reduce using rule 83 (E -> CADENA .)
    R_PUSH          reduce using rule 83 (E -> CADENA .)
    R_POP           reduce using rule 83 (E -> CADENA .)
    R_MUTABLE       reduce using rule 83 (E -> CADENA .)
    R_STRUCT        reduce using rule 83 (E -> CADENA .)
    R_BREAK         reduce using rule 83 (E -> CADENA .)
    R_CONTINUE      reduce using rule 83 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 83 (E -> CADENA .)
    PTCOMA          reduce using rule 83 (E -> CADENA .)
    PARIZQ          reduce using rule 83 (E -> CADENA .)
    COMA            reduce using rule 83 (E -> CADENA .)
    PARDER          reduce using rule 83 (E -> CADENA .)
    CORDER          reduce using rule 83 (E -> CADENA .)
    DOSPUNTITOS     reduce using rule 83 (E -> CADENA .)


state 70

    (84) E -> ID .

    MAS             reduce using rule 84 (E -> ID .)
    MENOS           reduce using rule 84 (E -> ID .)
    POR             reduce using rule 84 (E -> ID .)
    DIVIDIDO        reduce using rule 84 (E -> ID .)
    MODAL           reduce using rule 84 (E -> ID .)
    POTENCIA        reduce using rule 84 (E -> ID .)
    MENQUE          reduce using rule 84 (E -> ID .)
    MAYQUE          reduce using rule 84 (E -> ID .)
    IGUALQUE        reduce using rule 84 (E -> ID .)
    NIGUALQUE       reduce using rule 84 (E -> ID .)
    MENORIGUAL      reduce using rule 84 (E -> ID .)
    MAYORIGUAL      reduce using rule 84 (E -> ID .)
    R_END           reduce using rule 84 (E -> ID .)
    R_ELSE          reduce using rule 84 (E -> ID .)
    AND             reduce using rule 84 (E -> ID .)
    OR              reduce using rule 84 (E -> ID .)
    R_ELSEIF        reduce using rule 84 (E -> ID .)
    R_IF            reduce using rule 84 (E -> ID .)
    R_FOR           reduce using rule 84 (E -> ID .)
    R_WHILE         reduce using rule 84 (E -> ID .)
    R_GLOBAL        reduce using rule 84 (E -> ID .)
    R_LOCAL         reduce using rule 84 (E -> ID .)
    ID              reduce using rule 84 (E -> ID .)
    R_PRINT         reduce using rule 84 (E -> ID .)
    R_PRINTLN       reduce using rule 84 (E -> ID .)
    R_PARSE         reduce using rule 84 (E -> ID .)
    R_TRUNC         reduce using rule 84 (E -> ID .)
    R_FLOAT         reduce using rule 84 (E -> ID .)
    R_STRING        reduce using rule 84 (E -> ID .)
    R_TYPEOF        reduce using rule 84 (E -> ID .)
    R_PUSH          reduce using rule 84 (E -> ID .)
    R_POP           reduce using rule 84 (E -> ID .)
    R_MUTABLE       reduce using rule 84 (E -> ID .)
    R_STRUCT        reduce using rule 84 (E -> ID .)
    R_BREAK         reduce using rule 84 (E -> ID .)
    R_CONTINUE      reduce using rule 84 (E -> ID .)
    PARDER          reduce using rule 84 (E -> ID .)
    DOSPUNTOS       reduce using rule 84 (E -> ID .)
    PTCOMA          reduce using rule 84 (E -> ID .)
    PARIZQ          reduce using rule 84 (E -> ID .)
    COMA            reduce using rule 84 (E -> ID .)
    CORDER          reduce using rule 84 (E -> ID .)
    DOSPUNTITOS     reduce using rule 84 (E -> ID .)


state 71

    (155) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 134


state 72

    (153) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> R_WHILE LO . R_END PTCOMA
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO
    (133) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (136) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (137) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (138) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (139) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (140) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (141) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP BREAK
    (142) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP CONTINUE
    (143) INSTRUCCIONES_LOOP -> . IFS
    (144) INSTRUCCIONES_LOOP -> . FORS
    (145) INSTRUCCIONES_LOOP -> . WHILES
    (146) INSTRUCCIONES_LOOP -> . ASIGNACION
    (147) INSTRUCCIONES_LOOP -> . I
    (148) INSTRUCCIONES_LOOP -> . LLAMADAS
    (149) INSTRUCCIONES_LOOP -> . NATIVAS
    (150) INSTRUCCIONES_LOOP -> . STRUCTS
    (151) INSTRUCCIONES_LOOP -> . BREAK
    (152) INSTRUCCIONES_LOOP -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 136
    AND             shift and go to state 106
    OR              shift and go to state 107
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES_LOOP             shift and go to state 135
    IFS                            shift and go to state 137
    FORS                           shift and go to state 138
    WHILES                         shift and go to state 139
    ASIGNACION                     shift and go to state 140
    I                              shift and go to state 141
    LLAMADAS                       shift and go to state 142
    NATIVAS                        shift and go to state 143
    STRUCTS                        shift and go to state 144
    BREAK                          shift and go to state 145
    CONTINUE                       shift and go to state 146

state 73

    (46) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA PTCOMA
    (52) ASIGNACION -> R_GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 147
    PTCOMA          shift and go to state 148


state 74

    (47) ASIGNACION -> R_LOCAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (50) ASIGNACION -> R_LOCAL ID . IGUAL LISTA PTCOMA
    (53) ASIGNACION -> R_LOCAL ID . PTCOMA

    IGUAL           shift and go to state 149
    PTCOMA          shift and go to state 150


state 75

    (25) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (27) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (28) IMPRESIONES -> . IMPRESION
    (29) IMPRESION -> . NATIVAS
    (30) IMPRESION -> . ARREGLOS
    (31) IMPRESION -> . LLAMADAS
    (32) IMPRESION -> . E
    (33) IMPRESION -> . DOLAR PARIZQ E PARDER
    (34) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (35) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DOLAR           shift and go to state 157
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    IMPRESIONES                    shift and go to state 151
    IMPRESION                      shift and go to state 152
    NATIVAS                        shift and go to state 153
    ARREGLOS                       shift and go to state 154
    LLAMADAS                       shift and go to state 155
    E                              shift and go to state 156

state 76

    (26) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (27) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (28) IMPRESIONES -> . IMPRESION
    (29) IMPRESION -> . NATIVAS
    (30) IMPRESION -> . ARREGLOS
    (31) IMPRESION -> . LLAMADAS
    (32) IMPRESION -> . E
    (33) IMPRESION -> . DOLAR PARIZQ E PARDER
    (34) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (35) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DOLAR           shift and go to state 157
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    IMPRESIONES                    shift and go to state 158
    IMPRESION                      shift and go to state 152
    NATIVAS                        shift and go to state 153
    ARREGLOS                       shift and go to state 154
    LLAMADAS                       shift and go to state 155
    E                              shift and go to state 156

state 77

    (98) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 159

state 78

    (99) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 166

state 79

    (100) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 167
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 80

    (101) NATIVAS -> R_STRING PARIZQ . LISTA PARDER
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 168
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 81

    (102) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 169
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 82

    (103) NATIVAS -> R_PUSH DIFERENTE . PARIZQ ID COMA E PARDER

    PARIZQ          shift and go to state 170


state 83

    (104) NATIVAS -> R_POP DIFERENTE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 171


state 84

    (161) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (163) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 172


state 85

    (162) STRUCTS -> R_STRUCT ID . ELEMENTOS PTCOMA
    (164) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (165) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (166) ELEMENTOS -> . ELEMENTO
    (167) ELEMENTO -> . ID
    (168) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 175
    ID              shift and go to state 173

    ELEMENTOS                      shift and go to state 174
    ELEMENTO                       shift and go to state 176

state 86

    (54) BREAK -> R_BREAK PTCOMA .

    R_IF            reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_FOR           reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_WHILE         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_GLOBAL        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_LOCAL         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    ID              reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_PRINT         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_PRINTLN       reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_PARSE         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_TRUNC         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_FLOAT         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_STRING        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_TYPEOF        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_PUSH          reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_POP           reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_MUTABLE       reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_STRUCT        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_BREAK         reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_CONTINUE      reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_FUNCTION      reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    $end            reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_END           reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_ELSE          reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_ELSEIF        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)
    R_RETURN        reduce using rule 54 (BREAK -> R_BREAK PTCOMA .)


state 87

    (132) CONTINUE -> R_CONTINUE PTCOMA .

    R_IF            reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FOR           reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_WHILE         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_GLOBAL        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOCAL         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    ID              reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINT         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINTLN       reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PARSE         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUNC         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FLOAT         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRING        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TYPEOF        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PUSH          reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_POP           reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_MUTABLE       reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRUCT        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_BREAK         reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_CONTINUE      reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FUNCTION      reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    $end            reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_END           reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSE          reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSEIF        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_RETURN        reduce using rule 132 (CONTINUE -> R_CONTINUE PTCOMA .)


state 88

    (11) INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .

    R_IF            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FOR           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    ID              reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_STRING        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_POP           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    $end            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_END           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)


state 89

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER RETURN R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (115) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER RETURN R_END PTCOMA
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARDER          shift and go to state 178
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 177
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 90

    (105) NATIVAS -> ID . PUNTO R_LENGTH
    (36) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> ID . PARIZQ PARDER PTCOMA
    (84) E -> ID .

  ! shift/reduce conflict for PARIZQ resolved as shift
    PUNTO           shift and go to state 49
    CORIZQ          shift and go to state 179
    PARIZQ          shift and go to state 48
    MAS             reduce using rule 84 (E -> ID .)
    MENOS           reduce using rule 84 (E -> ID .)
    POR             reduce using rule 84 (E -> ID .)
    DIVIDIDO        reduce using rule 84 (E -> ID .)
    MODAL           reduce using rule 84 (E -> ID .)
    POTENCIA        reduce using rule 84 (E -> ID .)
    DOSPUNTOS       reduce using rule 84 (E -> ID .)
    PTCOMA          reduce using rule 84 (E -> ID .)
    COMA            reduce using rule 84 (E -> ID .)
    PARDER          reduce using rule 84 (E -> ID .)
    CORDER          reduce using rule 84 (E -> ID .)
    R_END           reduce using rule 84 (E -> ID .)

  ! PARIZQ          [ reduce using rule 84 (E -> ID .) ]


state 91

    (48) ASIGNACION -> ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (51) ASIGNACION -> ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 180
    PTCOMA          shift and go to state 181


state 92

    (42) LISTA -> NATIVAS .

    DOSPUNTOS       reduce using rule 42 (LISTA -> NATIVAS .)
    PTCOMA          reduce using rule 42 (LISTA -> NATIVAS .)
    PARIZQ          reduce using rule 42 (LISTA -> NATIVAS .)
    COMA            reduce using rule 42 (LISTA -> NATIVAS .)
    PARDER          reduce using rule 42 (LISTA -> NATIVAS .)
    CORDER          reduce using rule 42 (LISTA -> NATIVAS .)
    R_END           reduce using rule 42 (LISTA -> NATIVAS .)


state 93

    (43) LISTA -> ARREGLOS .

    DOSPUNTOS       reduce using rule 43 (LISTA -> ARREGLOS .)
    PTCOMA          reduce using rule 43 (LISTA -> ARREGLOS .)
    PARIZQ          reduce using rule 43 (LISTA -> ARREGLOS .)
    COMA            reduce using rule 43 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 43 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 43 (LISTA -> ARREGLOS .)
    R_END           reduce using rule 43 (LISTA -> ARREGLOS .)


state 94

    (44) LISTA -> LLAMADAS .

    DOSPUNTOS       reduce using rule 44 (LISTA -> LLAMADAS .)
    PTCOMA          reduce using rule 44 (LISTA -> LLAMADAS .)
    PARIZQ          reduce using rule 44 (LISTA -> LLAMADAS .)
    COMA            reduce using rule 44 (LISTA -> LLAMADAS .)
    PARDER          reduce using rule 44 (LISTA -> LLAMADAS .)
    CORDER          reduce using rule 44 (LISTA -> LLAMADAS .)
    R_END           reduce using rule 44 (LISTA -> LLAMADAS .)


state 95

    (45) LISTA -> E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    DOSPUNTOS       reduce using rule 45 (LISTA -> E .)
    PTCOMA          reduce using rule 45 (LISTA -> E .)
    PARIZQ          reduce using rule 45 (LISTA -> E .)
    COMA            reduce using rule 45 (LISTA -> E .)
    PARDER          reduce using rule 45 (LISTA -> E .)
    CORDER          reduce using rule 45 (LISTA -> E .)
    R_END           reduce using rule 45 (LISTA -> E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 96

    (70) E -> PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 182

state 97

    (37) ARREGLOS -> CORIZQ . LISTAS CORDER
    (39) ARREGLOS -> CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 183
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 98

    (61) LLAMADAS -> ID PARIZQ LISTAS . PARIZQ PTCOMA
    (40) LISTAS -> LISTAS . COMA LISTA

    PARIZQ          shift and go to state 184
    COMA            shift and go to state 185


state 99

    (62) LLAMADAS -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 186


state 100

    (41) LISTAS -> LISTA .

    PARIZQ          reduce using rule 41 (LISTAS -> LISTA .)
    COMA            reduce using rule 41 (LISTAS -> LISTA .)
    PARDER          reduce using rule 41 (LISTAS -> LISTA .)
    CORDER          reduce using rule 41 (LISTAS -> LISTA .)


state 101

    (105) NATIVAS -> ID PUNTO R_LENGTH .

    PTCOMA          reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    DOSPUNTOS       reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARIZQ          reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    COMA            reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_END           reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_IF            reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FOR           reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_WHILE         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_GLOBAL        reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_LOCAL         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    ID              reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINT         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINTLN       reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PARSE         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TRUNC         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FLOAT         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRING        reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TYPEOF        reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PUSH          reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_POP           reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_MUTABLE       reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRUCT        reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_BREAK         reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_CONTINUE      reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARDER          reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)
    CORDER          reduce using rule 105 (NATIVAS -> ID PUNTO R_LENGTH .)


state 102

    (116) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (117) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (122) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (127) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (128) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO ELSEIF
    (130) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 187
    R_ELSE          shift and go to state 188
    R_ELSEIF        shift and go to state 108
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    ELSEIF                         shift and go to state 189
    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 103

    (119) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 190


state 104

    (120) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (123) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 192
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 191
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 105

    (121) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_STRING        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 121 (IFS -> R_IF LO ELSEIF .)


state 106

    (93) LO -> LO AND . LO
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 193
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 107

    (94) LO -> LO OR . LO
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 194
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 108

    (124) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (127) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (128) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> R_ELSEIF . LO ELSEIF
    (130) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (93) LO -> . LO AND LO
    (94) LO -> . LO OR LO
    (95) LO -> . DIFERENTE LO
    (96) LO -> . PARIZQ LO PARDER
    (97) LO -> . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DIFERENTE       shift and go to state 52
    PARIZQ          shift and go to state 53
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    LO                             shift and go to state 195
    RE                             shift and go to state 54
    E                              shift and go to state 55

state 109

    (95) LO -> DIFERENTE LO .
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO

    R_END           reduce using rule 95 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 95 (LO -> DIFERENTE LO .)
    AND             reduce using rule 95 (LO -> DIFERENTE LO .)
    OR              reduce using rule 95 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 95 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 95 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 95 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 95 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 95 (LO -> DIFERENTE LO .)
    ID              reduce using rule 95 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 95 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_STRING        reduce using rule 95 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 95 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 95 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 95 (LO -> DIFERENTE LO .)
    R_MUTABLE       reduce using rule 95 (LO -> DIFERENTE LO .)
    R_STRUCT        reduce using rule 95 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 95 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 95 (LO -> DIFERENTE LO .)
    PARDER          reduce using rule 95 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]


state 110

    (96) LO -> PARIZQ LO . PARDER
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO

    PARDER          shift and go to state 196
    AND             shift and go to state 106
    OR              shift and go to state 107


state 111

    (91) RE -> PARIZQ RE . PARDER
    (97) LO -> RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 197
    AND             reduce using rule 97 (LO -> RE .)
    OR              reduce using rule 97 (LO -> RE .)
    MENQUE          shift and go to state 113
    MAYQUE          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NIGUALQUE       shift and go to state 116
    MENORIGUAL      shift and go to state 117
    MAYORIGUAL      shift and go to state 118

  ! PARDER          [ reduce using rule 97 (LO -> RE .) ]


state 112

    (70) E -> PARIZQ E . PARDER
    (92) RE -> E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 198
    MENQUE          reduce using rule 92 (RE -> E .)
    MAYQUE          reduce using rule 92 (RE -> E .)
    IGUALQUE        reduce using rule 92 (RE -> E .)
    NIGUALQUE       reduce using rule 92 (RE -> E .)
    MENORIGUAL      reduce using rule 92 (RE -> E .)
    MAYORIGUAL      reduce using rule 92 (RE -> E .)
    AND             reduce using rule 92 (RE -> E .)
    OR              reduce using rule 92 (RE -> E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124

  ! PARDER          [ reduce using rule 92 (RE -> E .) ]


state 113

    (85) RE -> RE MENQUE . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 199
    E                              shift and go to state 55

state 114

    (86) RE -> RE MAYQUE . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 201
    E                              shift and go to state 55

state 115

    (87) RE -> RE IGUALQUE . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 202
    E                              shift and go to state 55

state 116

    (88) RE -> RE NIGUALQUE . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 203
    E                              shift and go to state 55

state 117

    (89) RE -> RE MENORIGUAL . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 204
    E                              shift and go to state 55

state 118

    (90) RE -> RE MAYORIGUAL . RE
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 205
    E                              shift and go to state 55

state 119

    (63) E -> E MAS . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 206

state 120

    (64) E -> E MENOS . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 207

state 121

    (65) E -> E POR . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 208

state 122

    (66) E -> E DIVIDIDO . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 209

state 123

    (67) E -> E MODAL . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 210

state 124

    (68) E -> E POTENCIA . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 211

state 125

    (69) E -> MENOS E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 69 (E -> MENOS E .)
    MENOS           reduce using rule 69 (E -> MENOS E .)
    POR             reduce using rule 69 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 69 (E -> MENOS E .)
    MODAL           reduce using rule 69 (E -> MENOS E .)
    POTENCIA        reduce using rule 69 (E -> MENOS E .)
    MENQUE          reduce using rule 69 (E -> MENOS E .)
    MAYQUE          reduce using rule 69 (E -> MENOS E .)
    IGUALQUE        reduce using rule 69 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 69 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 69 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 69 (E -> MENOS E .)
    R_END           reduce using rule 69 (E -> MENOS E .)
    R_ELSE          reduce using rule 69 (E -> MENOS E .)
    AND             reduce using rule 69 (E -> MENOS E .)
    OR              reduce using rule 69 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 69 (E -> MENOS E .)
    R_IF            reduce using rule 69 (E -> MENOS E .)
    R_FOR           reduce using rule 69 (E -> MENOS E .)
    R_WHILE         reduce using rule 69 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 69 (E -> MENOS E .)
    R_LOCAL         reduce using rule 69 (E -> MENOS E .)
    ID              reduce using rule 69 (E -> MENOS E .)
    R_PRINT         reduce using rule 69 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 69 (E -> MENOS E .)
    R_PARSE         reduce using rule 69 (E -> MENOS E .)
    R_TRUNC         reduce using rule 69 (E -> MENOS E .)
    R_FLOAT         reduce using rule 69 (E -> MENOS E .)
    R_STRING        reduce using rule 69 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 69 (E -> MENOS E .)
    R_PUSH          reduce using rule 69 (E -> MENOS E .)
    R_POP           reduce using rule 69 (E -> MENOS E .)
    R_MUTABLE       reduce using rule 69 (E -> MENOS E .)
    R_STRUCT        reduce using rule 69 (E -> MENOS E .)
    R_BREAK         reduce using rule 69 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 69 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 69 (E -> MENOS E .)
    PTCOMA          reduce using rule 69 (E -> MENOS E .)
    PARIZQ          reduce using rule 69 (E -> MENOS E .)
    COMA            reduce using rule 69 (E -> MENOS E .)
    PARDER          reduce using rule 69 (E -> MENOS E .)
    CORDER          reduce using rule 69 (E -> MENOS E .)
    DOSPUNTITOS     reduce using rule 69 (E -> MENOS E .)

  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]
  ! POR             [ shift and go to state 121 ]
  ! DIVIDIDO        [ shift and go to state 122 ]
  ! MODAL           [ shift and go to state 123 ]
  ! POTENCIA        [ shift and go to state 124 ]


state 126

    (71) E -> R_LOG10 PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 212

state 127

    (72) E -> R_SIN PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 213

state 128

    (73) E -> R_COS PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 214

state 129

    (74) E -> R_TAN PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 215

state 130

    (75) E -> R_SQRT PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 216

state 131

    (76) E -> R_UPPERCASE PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 217

state 132

    (77) E -> R_LOWERCASE PARIZQ . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 218

state 133

    (78) E -> R_LOG PARIZQ . E COMA E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 219

state 134

    (155) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (157) RANGO -> . E DOSPUNTITOS E
    (158) RANGO -> . E
    (159) RANGO -> . ARREGLOS
    (160) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    ID              shift and go to state 220
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    CORIZQ          shift and go to state 97

    RANGO                          shift and go to state 221
    E                              shift and go to state 222
    ARREGLOS                       shift and go to state 223

state 135

    (153) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (137) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (138) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (139) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (140) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (141) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . BREAK
    (142) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 224
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 225
    FORS                           shift and go to state 226
    WHILES                         shift and go to state 227
    ASIGNACION                     shift and go to state 228
    I                              shift and go to state 229
    LLAMADAS                       shift and go to state 230
    NATIVAS                        shift and go to state 231
    STRUCTS                        shift and go to state 232
    BREAK                          shift and go to state 233
    CONTINUE                       shift and go to state 234

state 136

    (154) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 235


state 137

    (143) INSTRUCCIONES_LOOP -> IFS .

    R_END           reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_IF            reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_FOR           reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_WHILE         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_LOCAL         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    ID              reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINT         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_PARSE         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_TRUNC         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_FLOAT         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_STRING        reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_PUSH          reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_POP           reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_MUTABLE       reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_STRUCT        reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_BREAK         reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 143 (INSTRUCCIONES_LOOP -> IFS .)


state 138

    (144) INSTRUCCIONES_LOOP -> FORS .

    R_END           reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_IF            reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_FOR           reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_WHILE         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_LOCAL         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    ID              reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINT         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_PARSE         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_TRUNC         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_FLOAT         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_STRING        reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_PUSH          reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_POP           reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_MUTABLE       reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_STRUCT        reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_BREAK         reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 144 (INSTRUCCIONES_LOOP -> FORS .)


state 139

    (145) INSTRUCCIONES_LOOP -> WHILES .

    R_END           reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_IF            reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FOR           reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_WHILE         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    ID              reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINT         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PARSE         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_STRING        reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PUSH          reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_POP           reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_MUTABLE       reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_STRUCT        reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_BREAK         reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 145 (INSTRUCCIONES_LOOP -> WHILES .)


state 140

    (146) INSTRUCCIONES_LOOP -> ASIGNACION .

    R_END           reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    ID              reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_STRING        reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_MUTABLE       reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_STRUCT        reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 146 (INSTRUCCIONES_LOOP -> ASIGNACION .)


state 141

    (147) INSTRUCCIONES_LOOP -> I .

    R_END           reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_IF            reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_FOR           reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_WHILE         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_GLOBAL        reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_LOCAL         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    ID              reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_PRINT         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_PRINTLN       reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_PARSE         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_TRUNC         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_FLOAT         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_STRING        reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_TYPEOF        reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_PUSH          reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_POP           reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_MUTABLE       reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_STRUCT        reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_BREAK         reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)
    R_CONTINUE      reduce using rule 147 (INSTRUCCIONES_LOOP -> I .)


state 142

    (148) INSTRUCCIONES_LOOP -> LLAMADAS .

    R_END           reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_IF            reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FOR           reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_WHILE         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_GLOBAL        reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_LOCAL         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    ID              reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINT         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINTLN       reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PARSE         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TRUNC         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FLOAT         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_STRING        reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TYPEOF        reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PUSH          reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_POP           reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_MUTABLE       reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_STRUCT        reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_BREAK         reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_CONTINUE      reduce using rule 148 (INSTRUCCIONES_LOOP -> LLAMADAS .)


state 143

    (149) INSTRUCCIONES_LOOP -> NATIVAS .

    R_END           reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_IF            reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FOR           reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_WHILE         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_GLOBAL        reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_LOCAL         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    ID              reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINT         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINTLN       reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PARSE         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TRUNC         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FLOAT         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_STRING        reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TYPEOF        reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PUSH          reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_POP           reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_MUTABLE       reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_STRUCT        reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_BREAK         reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_CONTINUE      reduce using rule 149 (INSTRUCCIONES_LOOP -> NATIVAS .)


state 144

    (150) INSTRUCCIONES_LOOP -> STRUCTS .

    R_END           reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_IF            reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FOR           reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_WHILE         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_GLOBAL        reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_LOCAL         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    ID              reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINT         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINTLN       reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PARSE         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TRUNC         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FLOAT         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_STRING        reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TYPEOF        reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PUSH          reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_POP           reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_MUTABLE       reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_STRUCT        reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_BREAK         reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_CONTINUE      reduce using rule 150 (INSTRUCCIONES_LOOP -> STRUCTS .)


state 145

    (151) INSTRUCCIONES_LOOP -> BREAK .

    R_END           reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_IF            reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_FOR           reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_WHILE         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_GLOBAL        reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_LOCAL         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    ID              reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_PRINT         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_PRINTLN       reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_PARSE         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_TRUNC         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_FLOAT         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_STRING        reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_TYPEOF        reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_PUSH          reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_POP           reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_MUTABLE       reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_STRUCT        reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_BREAK         reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)
    R_CONTINUE      reduce using rule 151 (INSTRUCCIONES_LOOP -> BREAK .)


state 146

    (152) INSTRUCCIONES_LOOP -> CONTINUE .

    R_END           reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_IF            reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_FOR           reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_WHILE         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_GLOBAL        reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_LOCAL         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    ID              reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_PRINT         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_PRINTLN       reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_PARSE         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_TRUNC         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_FLOAT         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_STRING        reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_TYPEOF        reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_PUSH          reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_POP           reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_MUTABLE       reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_STRUCT        reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_BREAK         reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)
    R_CONTINUE      reduce using rule 152 (INSTRUCCIONES_LOOP -> CONTINUE .)


state 147

    (46) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA PTCOMA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 236
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 148

    (52) ASIGNACION -> R_GLOBAL ID PTCOMA .

    R_IF            reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FOR           reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_WHILE         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_LOCAL         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    ID              reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINT         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PARSE         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TRUNC         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FLOAT         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRING        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PUSH          reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_POP           reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRUCT        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_BREAK         reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    $end            reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_END           reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSE          reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_RETURN        reduce using rule 52 (ASIGNACION -> R_GLOBAL ID PTCOMA .)


state 149

    (47) ASIGNACION -> R_LOCAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (50) ASIGNACION -> R_LOCAL ID IGUAL . LISTA PTCOMA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 237
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 150

    (53) ASIGNACION -> R_LOCAL ID PTCOMA .

    R_IF            reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FOR           reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_WHILE         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_LOCAL         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    ID              reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINT         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PARSE         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TRUNC         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FLOAT         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRING        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PUSH          reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_POP           reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRUCT        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_BREAK         reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    $end            reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_END           reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSE          reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_RETURN        reduce using rule 53 (ASIGNACION -> R_LOCAL ID PTCOMA .)


state 151

    (25) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (27) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 238
    COMA            shift and go to state 239


state 152

    (28) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 28 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 28 (IMPRESIONES -> IMPRESION .)


state 153

    (29) IMPRESION -> NATIVAS .

    PARDER          reduce using rule 29 (IMPRESION -> NATIVAS .)
    COMA            reduce using rule 29 (IMPRESION -> NATIVAS .)


state 154

    (30) IMPRESION -> ARREGLOS .

    PARDER          reduce using rule 30 (IMPRESION -> ARREGLOS .)
    COMA            reduce using rule 30 (IMPRESION -> ARREGLOS .)


state 155

    (31) IMPRESION -> LLAMADAS .

    PARDER          reduce using rule 31 (IMPRESION -> LLAMADAS .)
    COMA            reduce using rule 31 (IMPRESION -> LLAMADAS .)


state 156

    (32) IMPRESION -> E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          reduce using rule 32 (IMPRESION -> E .)
    COMA            reduce using rule 32 (IMPRESION -> E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 157

    (33) IMPRESION -> DOLAR . PARIZQ E PARDER
    (34) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (35) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 240


state 158

    (26) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (27) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 241
    COMA            shift and go to state 239


state 159

    (98) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 242


state 160

    (55) TIPO -> R_NOTHING .

    COMA            reduce using rule 55 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 55 (TIPO -> R_NOTHING .)
    R_END           reduce using rule 55 (TIPO -> R_NOTHING .)


state 161

    (56) TIPO -> R_INT64 .

    COMA            reduce using rule 56 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 56 (TIPO -> R_INT64 .)
    R_END           reduce using rule 56 (TIPO -> R_INT64 .)


state 162

    (57) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 57 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 57 (TIPO -> R_FLOAT64 .)
    R_END           reduce using rule 57 (TIPO -> R_FLOAT64 .)


state 163

    (58) TIPO -> R_STRING .

    COMA            reduce using rule 58 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 58 (TIPO -> R_STRING .)
    R_END           reduce using rule 58 (TIPO -> R_STRING .)


state 164

    (59) TIPO -> R_CHAR .

    COMA            reduce using rule 59 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 59 (TIPO -> R_CHAR .)
    R_END           reduce using rule 59 (TIPO -> R_CHAR .)


state 165

    (60) TIPO -> R_BOOL .

    COMA            reduce using rule 60 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 60 (TIPO -> R_BOOL .)
    R_END           reduce using rule 60 (TIPO -> R_BOOL .)


state 166

    (99) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 243


state 167

    (100) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 244


state 168

    (101) NATIVAS -> R_STRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 245


state 169

    (102) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 246


state 170

    (103) NATIVAS -> R_PUSH DIFERENTE PARIZQ . ID COMA E PARDER

    ID              shift and go to state 247


state 171

    (104) NATIVAS -> R_POP DIFERENTE PARIZQ . ID PARDER

    ID              shift and go to state 248


state 172

    (161) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (163) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (165) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (166) ELEMENTOS -> . ELEMENTO
    (167) ELEMENTO -> . ID
    (168) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 250
    ID              shift and go to state 173

    ELEMENTOS                      shift and go to state 249
    ELEMENTO                       shift and go to state 176

state 173

    (167) ELEMENTO -> ID .
    (168) ELEMENTO -> ID . DOSPUNTOS TIPO

    PTCOMA          reduce using rule 167 (ELEMENTO -> ID .)
    COMA            reduce using rule 167 (ELEMENTO -> ID .)
    R_END           reduce using rule 167 (ELEMENTO -> ID .)
    DOSPUNTOS       shift and go to state 251


state 174

    (162) STRUCTS -> R_STRUCT ID ELEMENTOS . PTCOMA
    (165) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    PTCOMA          shift and go to state 252
    COMA            shift and go to state 253


state 175

    (164) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 254


state 176

    (166) ELEMENTOS -> ELEMENTO .

    PTCOMA          reduce using rule 166 (ELEMENTOS -> ELEMENTO .)
    COMA            reduce using rule 166 (ELEMENTOS -> ELEMENTO .)
    R_END           reduce using rule 166 (ELEMENTOS -> ELEMENTO .)


state 177

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER RETURN R_END PTCOMA
    (40) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 255
    COMA            shift and go to state 185


state 178

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (114) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (115) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (106) RETURN -> . R_RETURN LISTA
    (107) RETURN -> . R_RETURN
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 257
    R_RETURN        shift and go to state 259
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 256
    RETURN                         shift and go to state 258
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 179

    (36) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (38) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 260
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 180

    (48) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 261

state 181

    (51) ASIGNACION -> ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 51 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)


state 182

    (70) E -> PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 198
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 183

    (37) ARREGLOS -> CORIZQ LISTAS . CORDER
    (39) ARREGLOS -> CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (40) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 262
    COMA            shift and go to state 185


state 184

    (61) LLAMADAS -> ID PARIZQ LISTAS PARIZQ . PTCOMA

    PTCOMA          shift and go to state 263


state 185

    (40) LISTAS -> LISTAS COMA . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 264
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 186

    (62) LLAMADAS -> ID PARIZQ PARDER PTCOMA .

    R_IF            reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FOR           reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_WHILE         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_LOCAL         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINT         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PARSE         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TRUNC         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FLOAT         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_STRING        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PUSH          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_POP           reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_STRUCT        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_BREAK         reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PTCOMA          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARIZQ          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    COMA            reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_END           reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSE          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARDER          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    CORDER          reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_RETURN        reduce using rule 62 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)


state 187

    (116) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 265


state 188

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (122) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 267
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 266
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 189

    (118) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 190

    (119) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRING        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 119 (IFS -> R_IF LO R_END PTCOMA .)


state 191

    (120) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 268
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 192

    (123) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 269


state 193

    (93) LO -> LO AND LO .
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO

    R_END           reduce using rule 93 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 93 (LO -> LO AND LO .)
    AND             reduce using rule 93 (LO -> LO AND LO .)
    OR              reduce using rule 93 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 93 (LO -> LO AND LO .)
    R_IF            reduce using rule 93 (LO -> LO AND LO .)
    R_FOR           reduce using rule 93 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 93 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 93 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 93 (LO -> LO AND LO .)
    ID              reduce using rule 93 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 93 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 93 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 93 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 93 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 93 (LO -> LO AND LO .)
    R_STRING        reduce using rule 93 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 93 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 93 (LO -> LO AND LO .)
    R_POP           reduce using rule 93 (LO -> LO AND LO .)
    R_MUTABLE       reduce using rule 93 (LO -> LO AND LO .)
    R_STRUCT        reduce using rule 93 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 93 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 93 (LO -> LO AND LO .)
    PARDER          reduce using rule 93 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 106 ]
  ! OR              [ shift and go to state 107 ]


state 194

    (94) LO -> LO OR LO .
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO

    R_END           reduce using rule 94 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 94 (LO -> LO OR LO .)
    OR              reduce using rule 94 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 94 (LO -> LO OR LO .)
    R_IF            reduce using rule 94 (LO -> LO OR LO .)
    R_FOR           reduce using rule 94 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 94 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 94 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 94 (LO -> LO OR LO .)
    ID              reduce using rule 94 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 94 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 94 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 94 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 94 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 94 (LO -> LO OR LO .)
    R_STRING        reduce using rule 94 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 94 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 94 (LO -> LO OR LO .)
    R_POP           reduce using rule 94 (LO -> LO OR LO .)
    R_MUTABLE       reduce using rule 94 (LO -> LO OR LO .)
    R_STRUCT        reduce using rule 94 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 94 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 94 (LO -> LO OR LO .)
    PARDER          reduce using rule 94 (LO -> LO OR LO .)
    AND             shift and go to state 106

  ! AND             [ reduce using rule 94 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 107 ]


state 195

    (124) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (127) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (128) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> R_ELSEIF LO . ELSEIF
    (130) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (93) LO -> LO . AND LO
    (94) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (127) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (128) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO ELSEIF
    (130) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 271
    R_ELSE          shift and go to state 272
    AND             shift and go to state 106
    OR              shift and go to state 107
    R_ELSEIF        shift and go to state 108
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 270
    ELSEIF                         shift and go to state 273
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 196

    (96) LO -> PARIZQ LO PARDER .

    R_END           reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_ELSE          reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    AND             reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    OR              reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_ELSEIF        reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_IF            reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_FOR           reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_WHILE         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_GLOBAL        reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_LOCAL         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    ID              reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_PRINT         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_PRINTLN       reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_PARSE         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_TRUNC         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_FLOAT         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_STRING        reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_TYPEOF        reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_PUSH          reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_POP           reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_MUTABLE       reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_STRUCT        reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_BREAK         reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    R_CONTINUE      reduce using rule 96 (LO -> PARIZQ LO PARDER .)
    PARDER          reduce using rule 96 (LO -> PARIZQ LO PARDER .)


state 197

    (91) RE -> PARIZQ RE PARDER .

    MENQUE          reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    MAYQUE          reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    IGUALQUE        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    NIGUALQUE       reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    MENORIGUAL      reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    MAYORIGUAL      reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_END           reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_ELSE          reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    AND             reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    OR              reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_ELSEIF        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_IF            reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_FOR           reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_WHILE         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_GLOBAL        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_LOCAL         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    ID              reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_PRINT         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_PRINTLN       reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_PARSE         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_TRUNC         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_FLOAT         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_STRING        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_TYPEOF        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_PUSH          reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_POP           reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_MUTABLE       reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_STRUCT        reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_BREAK         reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    R_CONTINUE      reduce using rule 91 (RE -> PARIZQ RE PARDER .)
    PARDER          reduce using rule 91 (RE -> PARIZQ RE PARDER .)


state 198

    (70) E -> PARIZQ E PARDER .

    MAS             reduce using rule 70 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 70 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 70 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 70 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 70 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 70 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 70 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 70 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 70 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 70 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 70 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 70 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 70 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 70 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_STRING        reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 70 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 70 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 70 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 70 (E -> PARIZQ E PARDER .)
    PARIZQ          reduce using rule 70 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 70 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 70 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 70 (E -> PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 70 (E -> PARIZQ E PARDER .)


state 199

    (85) RE -> RE MENQUE RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 85 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 85 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 85 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 85 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 85 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 85 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 85 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 85 (RE -> RE MENQUE RE .)
    AND             reduce using rule 85 (RE -> RE MENQUE RE .)
    OR              reduce using rule 85 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 85 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 85 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 85 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 85 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 85 (RE -> RE MENQUE RE .)
    ID              reduce using rule 85 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 85 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_STRING        reduce using rule 85 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 85 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 85 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 85 (RE -> RE MENQUE RE .)
    R_MUTABLE       reduce using rule 85 (RE -> RE MENQUE RE .)
    R_STRUCT        reduce using rule 85 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 85 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 85 (RE -> RE MENQUE RE .)
    PARDER          reduce using rule 85 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 113 ]
  ! MAYQUE          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! MAYORIGUAL      [ shift and go to state 118 ]


state 200

    (91) RE -> PARIZQ . RE PARDER
    (70) E -> PARIZQ . E PARDER
    (85) RE -> . RE MENQUE RE
    (86) RE -> . RE MAYQUE RE
    (87) RE -> . RE IGUALQUE RE
    (88) RE -> . RE NIGUALQUE RE
    (89) RE -> . RE MENORIGUAL RE
    (90) RE -> . RE MAYORIGUAL RE
    (91) RE -> . PARIZQ RE PARDER
    (92) RE -> . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    PARIZQ          shift and go to state 200
    MENOS           shift and go to state 56
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    RE                             shift and go to state 274
    E                              shift and go to state 112

state 201

    (86) RE -> RE MAYQUE RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 86 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 86 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 86 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 86 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 86 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 86 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 86 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 86 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_STRING        reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_MUTABLE       reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_STRUCT        reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 86 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 86 (RE -> RE MAYQUE RE .)
    PARDER          reduce using rule 86 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 113 ]
  ! MAYQUE          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! MAYORIGUAL      [ shift and go to state 118 ]


state 202

    (87) RE -> RE IGUALQUE RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 87 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 87 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_STRING        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_MUTABLE       reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_STRUCT        reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 87 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 87 (RE -> RE IGUALQUE RE .)
    PARDER          reduce using rule 87 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 113
    MAYQUE          shift and go to state 114
    MENORIGUAL      shift and go to state 117
    MAYORIGUAL      shift and go to state 118

  ! MENQUE          [ reduce using rule 87 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 87 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 87 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 87 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]


state 203

    (88) RE -> RE NIGUALQUE RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_STRING        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_MUTABLE       reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_STRUCT        reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    PARDER          reduce using rule 88 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 113
    MAYQUE          shift and go to state 114
    MENORIGUAL      shift and go to state 117
    MAYORIGUAL      shift and go to state 118

  ! MENQUE          [ reduce using rule 88 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 88 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 88 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]


state 204

    (89) RE -> RE MENORIGUAL RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_STRING        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_MUTABLE       reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_STRUCT        reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 89 (RE -> RE MENORIGUAL RE .)
    PARDER          reduce using rule 89 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 113 ]
  ! MAYQUE          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! MAYORIGUAL      [ shift and go to state 118 ]


state 205

    (90) RE -> RE MAYORIGUAL RE .
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_STRING        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_MUTABLE       reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_STRUCT        reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 90 (RE -> RE MAYORIGUAL RE .)
    PARDER          reduce using rule 90 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 113 ]
  ! MAYQUE          [ shift and go to state 114 ]
  ! IGUALQUE        [ shift and go to state 115 ]
  ! NIGUALQUE       [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! MAYORIGUAL      [ shift and go to state 118 ]


state 206

    (63) E -> E MAS E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 63 (E -> E MAS E .)
    MENOS           reduce using rule 63 (E -> E MAS E .)
    MENQUE          reduce using rule 63 (E -> E MAS E .)
    MAYQUE          reduce using rule 63 (E -> E MAS E .)
    IGUALQUE        reduce using rule 63 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 63 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 63 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 63 (E -> E MAS E .)
    R_END           reduce using rule 63 (E -> E MAS E .)
    R_ELSE          reduce using rule 63 (E -> E MAS E .)
    AND             reduce using rule 63 (E -> E MAS E .)
    OR              reduce using rule 63 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 63 (E -> E MAS E .)
    R_IF            reduce using rule 63 (E -> E MAS E .)
    R_FOR           reduce using rule 63 (E -> E MAS E .)
    R_WHILE         reduce using rule 63 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 63 (E -> E MAS E .)
    R_LOCAL         reduce using rule 63 (E -> E MAS E .)
    ID              reduce using rule 63 (E -> E MAS E .)
    R_PRINT         reduce using rule 63 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 63 (E -> E MAS E .)
    R_PARSE         reduce using rule 63 (E -> E MAS E .)
    R_TRUNC         reduce using rule 63 (E -> E MAS E .)
    R_FLOAT         reduce using rule 63 (E -> E MAS E .)
    R_STRING        reduce using rule 63 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 63 (E -> E MAS E .)
    R_PUSH          reduce using rule 63 (E -> E MAS E .)
    R_POP           reduce using rule 63 (E -> E MAS E .)
    R_MUTABLE       reduce using rule 63 (E -> E MAS E .)
    R_STRUCT        reduce using rule 63 (E -> E MAS E .)
    R_BREAK         reduce using rule 63 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 63 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 63 (E -> E MAS E .)
    PTCOMA          reduce using rule 63 (E -> E MAS E .)
    PARIZQ          reduce using rule 63 (E -> E MAS E .)
    COMA            reduce using rule 63 (E -> E MAS E .)
    PARDER          reduce using rule 63 (E -> E MAS E .)
    CORDER          reduce using rule 63 (E -> E MAS E .)
    DOSPUNTITOS     reduce using rule 63 (E -> E MAS E .)
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124

  ! POR             [ reduce using rule 63 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 63 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 63 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 63 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]


state 207

    (64) E -> E MENOS E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 64 (E -> E MENOS E .)
    MENOS           reduce using rule 64 (E -> E MENOS E .)
    MENQUE          reduce using rule 64 (E -> E MENOS E .)
    MAYQUE          reduce using rule 64 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 64 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 64 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 64 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 64 (E -> E MENOS E .)
    R_END           reduce using rule 64 (E -> E MENOS E .)
    R_ELSE          reduce using rule 64 (E -> E MENOS E .)
    AND             reduce using rule 64 (E -> E MENOS E .)
    OR              reduce using rule 64 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 64 (E -> E MENOS E .)
    R_IF            reduce using rule 64 (E -> E MENOS E .)
    R_FOR           reduce using rule 64 (E -> E MENOS E .)
    R_WHILE         reduce using rule 64 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 64 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 64 (E -> E MENOS E .)
    ID              reduce using rule 64 (E -> E MENOS E .)
    R_PRINT         reduce using rule 64 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 64 (E -> E MENOS E .)
    R_PARSE         reduce using rule 64 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 64 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 64 (E -> E MENOS E .)
    R_STRING        reduce using rule 64 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 64 (E -> E MENOS E .)
    R_PUSH          reduce using rule 64 (E -> E MENOS E .)
    R_POP           reduce using rule 64 (E -> E MENOS E .)
    R_MUTABLE       reduce using rule 64 (E -> E MENOS E .)
    R_STRUCT        reduce using rule 64 (E -> E MENOS E .)
    R_BREAK         reduce using rule 64 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 64 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 64 (E -> E MENOS E .)
    PTCOMA          reduce using rule 64 (E -> E MENOS E .)
    PARIZQ          reduce using rule 64 (E -> E MENOS E .)
    COMA            reduce using rule 64 (E -> E MENOS E .)
    PARDER          reduce using rule 64 (E -> E MENOS E .)
    CORDER          reduce using rule 64 (E -> E MENOS E .)
    DOSPUNTITOS     reduce using rule 64 (E -> E MENOS E .)
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124

  ! POR             [ reduce using rule 64 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 64 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 64 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 64 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]


state 208

    (65) E -> E POR E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 65 (E -> E POR E .)
    MENOS           reduce using rule 65 (E -> E POR E .)
    POR             reduce using rule 65 (E -> E POR E .)
    DIVIDIDO        reduce using rule 65 (E -> E POR E .)
    MODAL           reduce using rule 65 (E -> E POR E .)
    MENQUE          reduce using rule 65 (E -> E POR E .)
    MAYQUE          reduce using rule 65 (E -> E POR E .)
    IGUALQUE        reduce using rule 65 (E -> E POR E .)
    NIGUALQUE       reduce using rule 65 (E -> E POR E .)
    MENORIGUAL      reduce using rule 65 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 65 (E -> E POR E .)
    R_END           reduce using rule 65 (E -> E POR E .)
    R_ELSE          reduce using rule 65 (E -> E POR E .)
    AND             reduce using rule 65 (E -> E POR E .)
    OR              reduce using rule 65 (E -> E POR E .)
    R_ELSEIF        reduce using rule 65 (E -> E POR E .)
    R_IF            reduce using rule 65 (E -> E POR E .)
    R_FOR           reduce using rule 65 (E -> E POR E .)
    R_WHILE         reduce using rule 65 (E -> E POR E .)
    R_GLOBAL        reduce using rule 65 (E -> E POR E .)
    R_LOCAL         reduce using rule 65 (E -> E POR E .)
    ID              reduce using rule 65 (E -> E POR E .)
    R_PRINT         reduce using rule 65 (E -> E POR E .)
    R_PRINTLN       reduce using rule 65 (E -> E POR E .)
    R_PARSE         reduce using rule 65 (E -> E POR E .)
    R_TRUNC         reduce using rule 65 (E -> E POR E .)
    R_FLOAT         reduce using rule 65 (E -> E POR E .)
    R_STRING        reduce using rule 65 (E -> E POR E .)
    R_TYPEOF        reduce using rule 65 (E -> E POR E .)
    R_PUSH          reduce using rule 65 (E -> E POR E .)
    R_POP           reduce using rule 65 (E -> E POR E .)
    R_MUTABLE       reduce using rule 65 (E -> E POR E .)
    R_STRUCT        reduce using rule 65 (E -> E POR E .)
    R_BREAK         reduce using rule 65 (E -> E POR E .)
    R_CONTINUE      reduce using rule 65 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 65 (E -> E POR E .)
    PTCOMA          reduce using rule 65 (E -> E POR E .)
    PARIZQ          reduce using rule 65 (E -> E POR E .)
    COMA            reduce using rule 65 (E -> E POR E .)
    PARDER          reduce using rule 65 (E -> E POR E .)
    CORDER          reduce using rule 65 (E -> E POR E .)
    DOSPUNTITOS     reduce using rule 65 (E -> E POR E .)
    POTENCIA        shift and go to state 124

  ! POTENCIA        [ reduce using rule 65 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]
  ! POR             [ shift and go to state 121 ]
  ! DIVIDIDO        [ shift and go to state 122 ]
  ! MODAL           [ shift and go to state 123 ]


state 209

    (66) E -> E DIVIDIDO E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 66 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 66 (E -> E DIVIDIDO E .)
    POR             reduce using rule 66 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 66 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 66 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 66 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 66 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 66 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 66 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 66 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 66 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 66 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 66 (E -> E DIVIDIDO E .)
    AND             reduce using rule 66 (E -> E DIVIDIDO E .)
    OR              reduce using rule 66 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 66 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 66 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 66 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 66 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 66 (E -> E DIVIDIDO E .)
    ID              reduce using rule 66 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 66 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_STRING        reduce using rule 66 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 66 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 66 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 66 (E -> E DIVIDIDO E .)
    R_MUTABLE       reduce using rule 66 (E -> E DIVIDIDO E .)
    R_STRUCT        reduce using rule 66 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 66 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 66 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 66 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 66 (E -> E DIVIDIDO E .)
    PARIZQ          reduce using rule 66 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 66 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 66 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 66 (E -> E DIVIDIDO E .)
    DOSPUNTITOS     reduce using rule 66 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 124

  ! POTENCIA        [ reduce using rule 66 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]
  ! POR             [ shift and go to state 121 ]
  ! DIVIDIDO        [ shift and go to state 122 ]
  ! MODAL           [ shift and go to state 123 ]


state 210

    (67) E -> E MODAL E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 67 (E -> E MODAL E .)
    MENOS           reduce using rule 67 (E -> E MODAL E .)
    POR             reduce using rule 67 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 67 (E -> E MODAL E .)
    MODAL           reduce using rule 67 (E -> E MODAL E .)
    MENQUE          reduce using rule 67 (E -> E MODAL E .)
    MAYQUE          reduce using rule 67 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 67 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 67 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 67 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 67 (E -> E MODAL E .)
    R_END           reduce using rule 67 (E -> E MODAL E .)
    R_ELSE          reduce using rule 67 (E -> E MODAL E .)
    AND             reduce using rule 67 (E -> E MODAL E .)
    OR              reduce using rule 67 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 67 (E -> E MODAL E .)
    R_IF            reduce using rule 67 (E -> E MODAL E .)
    R_FOR           reduce using rule 67 (E -> E MODAL E .)
    R_WHILE         reduce using rule 67 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 67 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 67 (E -> E MODAL E .)
    ID              reduce using rule 67 (E -> E MODAL E .)
    R_PRINT         reduce using rule 67 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 67 (E -> E MODAL E .)
    R_PARSE         reduce using rule 67 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 67 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 67 (E -> E MODAL E .)
    R_STRING        reduce using rule 67 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 67 (E -> E MODAL E .)
    R_PUSH          reduce using rule 67 (E -> E MODAL E .)
    R_POP           reduce using rule 67 (E -> E MODAL E .)
    R_MUTABLE       reduce using rule 67 (E -> E MODAL E .)
    R_STRUCT        reduce using rule 67 (E -> E MODAL E .)
    R_BREAK         reduce using rule 67 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 67 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 67 (E -> E MODAL E .)
    PTCOMA          reduce using rule 67 (E -> E MODAL E .)
    PARIZQ          reduce using rule 67 (E -> E MODAL E .)
    COMA            reduce using rule 67 (E -> E MODAL E .)
    PARDER          reduce using rule 67 (E -> E MODAL E .)
    CORDER          reduce using rule 67 (E -> E MODAL E .)
    DOSPUNTITOS     reduce using rule 67 (E -> E MODAL E .)
    POTENCIA        shift and go to state 124

  ! POTENCIA        [ reduce using rule 67 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]
  ! POR             [ shift and go to state 121 ]
  ! DIVIDIDO        [ shift and go to state 122 ]
  ! MODAL           [ shift and go to state 123 ]


state 211

    (68) E -> E POTENCIA E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    MAS             reduce using rule 68 (E -> E POTENCIA E .)
    MENOS           reduce using rule 68 (E -> E POTENCIA E .)
    POR             reduce using rule 68 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 68 (E -> E POTENCIA E .)
    MODAL           reduce using rule 68 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 68 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 68 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 68 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 68 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 68 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 68 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 68 (E -> E POTENCIA E .)
    R_END           reduce using rule 68 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 68 (E -> E POTENCIA E .)
    AND             reduce using rule 68 (E -> E POTENCIA E .)
    OR              reduce using rule 68 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 68 (E -> E POTENCIA E .)
    R_IF            reduce using rule 68 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 68 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 68 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 68 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 68 (E -> E POTENCIA E .)
    ID              reduce using rule 68 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 68 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 68 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 68 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 68 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 68 (E -> E POTENCIA E .)
    R_STRING        reduce using rule 68 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 68 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 68 (E -> E POTENCIA E .)
    R_POP           reduce using rule 68 (E -> E POTENCIA E .)
    R_MUTABLE       reduce using rule 68 (E -> E POTENCIA E .)
    R_STRUCT        reduce using rule 68 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 68 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 68 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 68 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 68 (E -> E POTENCIA E .)
    PARIZQ          reduce using rule 68 (E -> E POTENCIA E .)
    COMA            reduce using rule 68 (E -> E POTENCIA E .)
    PARDER          reduce using rule 68 (E -> E POTENCIA E .)
    CORDER          reduce using rule 68 (E -> E POTENCIA E .)
    DOSPUNTITOS     reduce using rule 68 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 119 ]
  ! MENOS           [ shift and go to state 120 ]
  ! POR             [ shift and go to state 121 ]
  ! DIVIDIDO        [ shift and go to state 122 ]
  ! MODAL           [ shift and go to state 123 ]
  ! POTENCIA        [ shift and go to state 124 ]


state 212

    (71) E -> R_LOG10 PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 275
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 213

    (72) E -> R_SIN PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 276
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 214

    (73) E -> R_COS PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 277
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 215

    (74) E -> R_TAN PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 278
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 216

    (75) E -> R_SQRT PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 279
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 217

    (76) E -> R_UPPERCASE PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 280
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 218

    (77) E -> R_LOWERCASE PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 281
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 219

    (78) E -> R_LOG PARIZQ E . COMA E PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    COMA            shift and go to state 282
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 220

    (160) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (84) E -> ID .
    (36) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    CORIZQ          shift and go to state 283
    DOSPUNTITOS     reduce using rule 84 (E -> ID .)
    MAS             reduce using rule 84 (E -> ID .)
    MENOS           reduce using rule 84 (E -> ID .)
    POR             reduce using rule 84 (E -> ID .)
    DIVIDIDO        reduce using rule 84 (E -> ID .)
    MODAL           reduce using rule 84 (E -> ID .)
    POTENCIA        reduce using rule 84 (E -> ID .)
    R_END           reduce using rule 84 (E -> ID .)
    R_IF            reduce using rule 84 (E -> ID .)
    R_FOR           reduce using rule 84 (E -> ID .)
    R_WHILE         reduce using rule 84 (E -> ID .)
    R_GLOBAL        reduce using rule 84 (E -> ID .)
    R_LOCAL         reduce using rule 84 (E -> ID .)
    ID              reduce using rule 84 (E -> ID .)
    R_PRINT         reduce using rule 84 (E -> ID .)
    R_PRINTLN       reduce using rule 84 (E -> ID .)
    R_PARSE         reduce using rule 84 (E -> ID .)
    R_TRUNC         reduce using rule 84 (E -> ID .)
    R_FLOAT         reduce using rule 84 (E -> ID .)
    R_STRING        reduce using rule 84 (E -> ID .)
    R_TYPEOF        reduce using rule 84 (E -> ID .)
    R_PUSH          reduce using rule 84 (E -> ID .)
    R_POP           reduce using rule 84 (E -> ID .)
    R_MUTABLE       reduce using rule 84 (E -> ID .)
    R_STRUCT        reduce using rule 84 (E -> ID .)
    R_BREAK         reduce using rule 84 (E -> ID .)
    R_CONTINUE      reduce using rule 84 (E -> ID .)


state 221

    (155) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (133) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (136) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (137) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (138) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (139) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (140) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (141) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP BREAK
    (142) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP CONTINUE
    (143) INSTRUCCIONES_LOOP -> . IFS
    (144) INSTRUCCIONES_LOOP -> . FORS
    (145) INSTRUCCIONES_LOOP -> . WHILES
    (146) INSTRUCCIONES_LOOP -> . ASIGNACION
    (147) INSTRUCCIONES_LOOP -> . I
    (148) INSTRUCCIONES_LOOP -> . LLAMADAS
    (149) INSTRUCCIONES_LOOP -> . NATIVAS
    (150) INSTRUCCIONES_LOOP -> . STRUCTS
    (151) INSTRUCCIONES_LOOP -> . BREAK
    (152) INSTRUCCIONES_LOOP -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 285
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES_LOOP             shift and go to state 284
    IFS                            shift and go to state 137
    FORS                           shift and go to state 138
    WHILES                         shift and go to state 139
    ASIGNACION                     shift and go to state 140
    I                              shift and go to state 141
    LLAMADAS                       shift and go to state 142
    NATIVAS                        shift and go to state 143
    STRUCTS                        shift and go to state 144
    BREAK                          shift and go to state 145
    CONTINUE                       shift and go to state 146

state 222

    (157) RANGO -> E . DOSPUNTITOS E
    (158) RANGO -> E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    DOSPUNTITOS     shift and go to state 286
    R_END           reduce using rule 158 (RANGO -> E .)
    R_IF            reduce using rule 158 (RANGO -> E .)
    R_FOR           reduce using rule 158 (RANGO -> E .)
    R_WHILE         reduce using rule 158 (RANGO -> E .)
    R_GLOBAL        reduce using rule 158 (RANGO -> E .)
    R_LOCAL         reduce using rule 158 (RANGO -> E .)
    ID              reduce using rule 158 (RANGO -> E .)
    R_PRINT         reduce using rule 158 (RANGO -> E .)
    R_PRINTLN       reduce using rule 158 (RANGO -> E .)
    R_PARSE         reduce using rule 158 (RANGO -> E .)
    R_TRUNC         reduce using rule 158 (RANGO -> E .)
    R_FLOAT         reduce using rule 158 (RANGO -> E .)
    R_STRING        reduce using rule 158 (RANGO -> E .)
    R_TYPEOF        reduce using rule 158 (RANGO -> E .)
    R_PUSH          reduce using rule 158 (RANGO -> E .)
    R_POP           reduce using rule 158 (RANGO -> E .)
    R_MUTABLE       reduce using rule 158 (RANGO -> E .)
    R_STRUCT        reduce using rule 158 (RANGO -> E .)
    R_BREAK         reduce using rule 158 (RANGO -> E .)
    R_CONTINUE      reduce using rule 158 (RANGO -> E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 223

    (159) RANGO -> ARREGLOS .

    R_END           reduce using rule 159 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 159 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 159 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 159 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 159 (RANGO -> ARREGLOS .)
    ID              reduce using rule 159 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 159 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_STRING        reduce using rule 159 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 159 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 159 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 159 (RANGO -> ARREGLOS .)
    R_MUTABLE       reduce using rule 159 (RANGO -> ARREGLOS .)
    R_STRUCT        reduce using rule 159 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 159 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 159 (RANGO -> ARREGLOS .)


state 224

    (153) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 287


state 225

    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .

    R_END           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_IF            reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FOR           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_WHILE         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_GLOBAL        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_LOCAL         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    ID              reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINT         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINTLN       reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PARSE         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TRUNC         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FLOAT         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_STRING        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TYPEOF        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PUSH          reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_POP           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_MUTABLE       reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_STRUCT        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_BREAK         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_CONTINUE      reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)


state 226

    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .

    R_END           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_IF            reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FOR           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_WHILE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_LOCAL         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    ID              reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PARSE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TRUNC         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FLOAT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_STRING        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PUSH          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_POP           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_MUTABLE       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_STRUCT        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_BREAK         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)


state 227

    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .

    R_END           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_IF            reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FOR           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_WHILE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_LOCAL         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    ID              reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PARSE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TRUNC         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FLOAT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_STRING        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PUSH          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_POP           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_MUTABLE       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_STRUCT        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_BREAK         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)


state 228

    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .

    R_END           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_IF            reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FOR           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_WHILE         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_GLOBAL        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_LOCAL         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    ID              reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINT         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINTLN       reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PARSE         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TRUNC         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FLOAT         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_STRING        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TYPEOF        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PUSH          reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_POP           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_MUTABLE       reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_STRUCT        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_BREAK         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_CONTINUE      reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)


state 229

    (137) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .

    R_END           reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_IF            reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FOR           reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_WHILE         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_GLOBAL        reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_LOCAL         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    ID              reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINT         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINTLN       reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PARSE         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TRUNC         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FLOAT         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_STRING        reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TYPEOF        reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PUSH          reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_POP           reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_MUTABLE       reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_STRUCT        reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_BREAK         reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_CONTINUE      reduce using rule 137 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)


state 230

    (138) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .

    R_END           reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_IF            reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FOR           reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_WHILE         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_GLOBAL        reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_LOCAL         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    ID              reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINT         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINTLN       reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PARSE         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TRUNC         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FLOAT         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_STRING        reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TYPEOF        reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PUSH          reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_POP           reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_MUTABLE       reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_STRUCT        reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_BREAK         reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_CONTINUE      reduce using rule 138 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)


state 231

    (139) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .

    R_END           reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_IF            reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FOR           reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_WHILE         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_GLOBAL        reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_LOCAL         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    ID              reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINT         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINTLN       reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PARSE         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TRUNC         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FLOAT         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_STRING        reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TYPEOF        reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PUSH          reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_POP           reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_MUTABLE       reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_STRUCT        reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_BREAK         reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_CONTINUE      reduce using rule 139 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)


state 232

    (140) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .

    R_END           reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_IF            reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FOR           reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_WHILE         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_GLOBAL        reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_LOCAL         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    ID              reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINT         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINTLN       reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PARSE         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TRUNC         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FLOAT         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_STRING        reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TYPEOF        reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PUSH          reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_POP           reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_MUTABLE       reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_STRUCT        reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_BREAK         reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_CONTINUE      reduce using rule 140 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)


state 233

    (141) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .

    R_END           reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_IF            reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_FOR           reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_WHILE         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_GLOBAL        reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_LOCAL         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    ID              reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_PRINT         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_PRINTLN       reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_PARSE         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_TRUNC         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_FLOAT         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_STRING        reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_TYPEOF        reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_PUSH          reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_POP           reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_MUTABLE       reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_STRUCT        reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_BREAK         reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)
    R_CONTINUE      reduce using rule 141 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP BREAK .)


state 234

    (142) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .

    R_END           reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_IF            reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_FOR           reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_WHILE         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_GLOBAL        reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_LOCAL         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    ID              reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_PRINT         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_PRINTLN       reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_PARSE         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_TRUNC         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_FLOAT         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_STRING        reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_TYPEOF        reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_PUSH          reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_POP           reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_MUTABLE       reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_STRUCT        reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_BREAK         reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)
    R_CONTINUE      reduce using rule 142 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP CONTINUE .)


state 235

    (154) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRING        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 154 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 236

    (46) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 288
    PTCOMA          shift and go to state 289


state 237

    (47) ASIGNACION -> R_LOCAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (50) ASIGNACION -> R_LOCAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 290
    PTCOMA          shift and go to state 291


state 238

    (25) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 292


state 239

    (27) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (29) IMPRESION -> . NATIVAS
    (30) IMPRESION -> . ARREGLOS
    (31) IMPRESION -> . LLAMADAS
    (32) IMPRESION -> . E
    (33) IMPRESION -> . DOLAR PARIZQ E PARDER
    (34) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (35) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    DOLAR           shift and go to state 157
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    IMPRESION                      shift and go to state 293
    NATIVAS                        shift and go to state 153
    ARREGLOS                       shift and go to state 154
    LLAMADAS                       shift and go to state 155
    E                              shift and go to state 156

state 240

    (33) IMPRESION -> DOLAR PARIZQ . E PARDER
    (34) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (35) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 297
    CORIZQ          shift and go to state 97
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29

    E                              shift and go to state 294
    ARREGLOS                       shift and go to state 295
    NATIVAS                        shift and go to state 296

state 241

    (26) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 298


state 242

    (98) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 299
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 243

    (99) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 300
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 244

    (100) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 100 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 245

    (101) NATIVAS -> R_STRING PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 101 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)


state 246

    (102) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 102 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 247

    (103) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID . COMA E PARDER

    COMA            shift and go to state 301


state 248

    (104) NATIVAS -> R_POP DIFERENTE PARIZQ ID . PARDER

    PARDER          shift and go to state 302


state 249

    (161) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (165) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    R_END           shift and go to state 303
    COMA            shift and go to state 253


state 250

    (163) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 304


state 251

    (168) ELEMENTO -> ID DOSPUNTOS . TIPO
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 305

state 252

    (162) STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .

    R_IF            reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FOR           reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_WHILE         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_GLOBAL        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOCAL         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ID              reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINT         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINTLN       reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PARSE         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUNC         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FLOAT         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRING        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TYPEOF        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PUSH          reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_POP           reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_MUTABLE       reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRUCT        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_BREAK         reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_CONTINUE      reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FUNCTION      reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    $end            reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_END           reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSE          reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSEIF        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_RETURN        reduce using rule 162 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)


state 253

    (165) ELEMENTOS -> ELEMENTOS COMA . ELEMENTO
    (167) ELEMENTO -> . ID
    (168) ELEMENTO -> . ID DOSPUNTOS TIPO

    ID              shift and go to state 173

    ELEMENTO                       shift and go to state 306

state 254

    (164) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 164 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 255

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (106) RETURN -> . R_RETURN LISTA
    (107) RETURN -> . R_RETURN
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 308
    R_RETURN        shift and go to state 259
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 307
    RETURN                         shift and go to state 309
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 256

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (106) RETURN -> . R_RETURN LISTA
    (107) RETURN -> . R_RETURN
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 310
    R_RETURN        shift and go to state 259
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    RETURN                         shift and go to state 311
    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 257

    (114) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 312


state 258

    (115) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 313


state 259

    (106) RETURN -> R_RETURN . LISTA
    (107) RETURN -> R_RETURN .
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_END           reduce using rule 107 (RETURN -> R_RETURN .)
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTA                          shift and go to state 314
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 260

    (36) ARREGLOS -> ID CORIZQ LISTAS . CORDER
    (38) ARREGLOS -> ID CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (40) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 315
    COMA            shift and go to state 185


state 261

    (48) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 316


state 262

    (37) ARREGLOS -> CORIZQ LISTAS CORDER .
    (39) ARREGLOS -> CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 37 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 317


state 263

    (61) LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .

    R_IF            reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FOR           reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_WHILE         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_GLOBAL        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_LOCAL         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    ID              reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINT         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINTLN       reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PARSE         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TRUNC         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FLOAT         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_STRING        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TYPEOF        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PUSH          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_POP           reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_MUTABLE       reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_STRUCT        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_BREAK         reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_CONTINUE      reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FUNCTION      reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    $end            reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    DOSPUNTOS       reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PTCOMA          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARIZQ          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    COMA            reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_END           reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSE          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSEIF        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARDER          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    CORDER          reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_RETURN        reduce using rule 61 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)


state 264

    (40) LISTAS -> LISTAS COMA LISTA .

    PARIZQ          reduce using rule 40 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 40 (LISTAS -> LISTAS COMA LISTA .)
    PARDER          reduce using rule 40 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 40 (LISTAS -> LISTAS COMA LISTA .)


state 265

    (116) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 116 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 266

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 318
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 267

    (122) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 319


state 268

    (120) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 320


state 269

    (123) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 123 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 270

    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (130) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (124) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (127) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (128) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO ELSEIF
    (130) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (131) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 321
    R_ELSE          shift and go to state 322
    R_ELSEIF        shift and go to state 108
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    ELSEIF                         shift and go to state 323
    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 271

    (127) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 324


state 272

    (128) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (131) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 326
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 325
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 273

    (129) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRING        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 129 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 274

    (91) RE -> PARIZQ RE . PARDER
    (85) RE -> RE . MENQUE RE
    (86) RE -> RE . MAYQUE RE
    (87) RE -> RE . IGUALQUE RE
    (88) RE -> RE . NIGUALQUE RE
    (89) RE -> RE . MENORIGUAL RE
    (90) RE -> RE . MAYORIGUAL RE

    PARDER          shift and go to state 197
    MENQUE          shift and go to state 113
    MAYQUE          shift and go to state 114
    IGUALQUE        shift and go to state 115
    NIGUALQUE       shift and go to state 116
    MENORIGUAL      shift and go to state 117
    MAYORIGUAL      shift and go to state 118


state 275

    (71) E -> R_LOG10 PARIZQ E PARDER .

    MAS             reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRING        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    PARIZQ          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 71 (E -> R_LOG10 PARIZQ E PARDER .)


state 276

    (72) E -> R_SIN PARIZQ E PARDER .

    MAS             reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_STRING        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 72 (E -> R_SIN PARIZQ E PARDER .)


state 277

    (73) E -> R_COS PARIZQ E PARDER .

    MAS             reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_STRING        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    PARIZQ          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 73 (E -> R_COS PARIZQ E PARDER .)


state 278

    (74) E -> R_TAN PARIZQ E PARDER .

    MAS             reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_STRING        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 74 (E -> R_TAN PARIZQ E PARDER .)


state 279

    (75) E -> R_SQRT PARIZQ E PARDER .

    MAS             reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRING        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    PARIZQ          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 75 (E -> R_SQRT PARIZQ E PARDER .)


state 280

    (76) E -> R_UPPERCASE PARIZQ E PARDER .

    MAS             reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 76 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 281

    (77) E -> R_LOWERCASE PARIZQ E PARDER .

    MAS             reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 77 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 282

    (78) E -> R_LOG PARIZQ E COMA . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 327

state 283

    (160) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (36) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (38) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 328
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    CORIZQ          shift and go to state 97

    E                              shift and go to state 329
    LISTAS                         shift and go to state 260
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94

state 284

    (155) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (137) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (138) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (139) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (140) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (141) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . BREAK
    (142) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 330
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 225
    FORS                           shift and go to state 226
    WHILES                         shift and go to state 227
    ASIGNACION                     shift and go to state 228
    I                              shift and go to state 229
    LLAMADAS                       shift and go to state 230
    NATIVAS                        shift and go to state 231
    STRUCTS                        shift and go to state 232
    BREAK                          shift and go to state 233
    CONTINUE                       shift and go to state 234

state 285

    (156) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 331


state 286

    (157) RANGO -> E DOSPUNTITOS . E
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 332

state 287

    (153) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 153 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 288

    (46) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 333

state 289

    (49) ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 49 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)


state 290

    (47) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (55) TIPO -> . R_NOTHING
    (56) TIPO -> . R_INT64
    (57) TIPO -> . R_FLOAT64
    (58) TIPO -> . R_STRING
    (59) TIPO -> . R_CHAR
    (60) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 160
    R_INT64         shift and go to state 161
    R_FLOAT64       shift and go to state 162
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 164
    R_BOOL          shift and go to state 165

    TIPO                           shift and go to state 334

state 291

    (50) ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 50 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)


state 292

    (25) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 25 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 293

    (27) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 27 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 27 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 294

    (33) IMPRESION -> DOLAR PARIZQ E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 335
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 295

    (34) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER

    PARDER          shift and go to state 336


state 296

    (35) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER

    PARDER          shift and go to state 337


state 297

    (84) E -> ID .
    (36) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (105) NATIVAS -> ID . PUNTO R_LENGTH

    PARDER          reduce using rule 84 (E -> ID .)
    MAS             reduce using rule 84 (E -> ID .)
    MENOS           reduce using rule 84 (E -> ID .)
    POR             reduce using rule 84 (E -> ID .)
    DIVIDIDO        reduce using rule 84 (E -> ID .)
    MODAL           reduce using rule 84 (E -> ID .)
    POTENCIA        reduce using rule 84 (E -> ID .)
    CORIZQ          shift and go to state 179
    PUNTO           shift and go to state 49


state 298

    (26) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 26 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 299

    (98) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 338


state 300

    (99) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 339


state 301

    (103) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA . E PARDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 340

state 302

    (104) NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .

    PTCOMA          reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARIZQ          reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    COMA            reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_END           reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_IF            reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FOR           reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_WHILE         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_GLOBAL        reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOCAL         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ID              reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINT         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINTLN       reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PARSE         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUNC         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FLOAT         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRING        reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TYPEOF        reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PUSH          reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_POP           reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_MUTABLE       reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRUCT        reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_BREAK         reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_CONTINUE      reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARDER          reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CORDER          reduce using rule 104 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)


state 303

    (161) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 341


state 304

    (163) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 163 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 305

    (168) ELEMENTO -> ID DOSPUNTOS TIPO .

    PTCOMA          reduce using rule 168 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    COMA            reduce using rule 168 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    R_END           reduce using rule 168 (ELEMENTO -> ID DOSPUNTOS TIPO .)


state 306

    (165) ELEMENTOS -> ELEMENTOS COMA ELEMENTO .

    PTCOMA          reduce using rule 165 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    COMA            reduce using rule 165 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    R_END           reduce using rule 165 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)


state 307

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (106) RETURN -> . R_RETURN LISTA
    (107) RETURN -> . R_RETURN
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 342
    R_RETURN        shift and go to state 259
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    RETURN                         shift and go to state 343
    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 308

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 344


state 309

    (111) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 345


state 310

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 346


state 311

    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 347


state 312

    (114) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 114 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 313

    (115) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 348


state 314

    (106) RETURN -> R_RETURN LISTA .

    R_END           reduce using rule 106 (RETURN -> R_RETURN LISTA .)


state 315

    (36) ARREGLOS -> ID CORIZQ LISTAS CORDER .
    (38) ARREGLOS -> ID CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    ID              reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 36 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 349


state 316

    (48) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 48 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 317

    (39) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 350
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 318

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 351


state 319

    (122) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 122 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 320

    (120) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 120 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 321

    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 352


state 322

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . INSTRUCCIONES BREAK
    (14) INSTRUCCIONES -> . INSTRUCCIONES CONTINUE
    (15) INSTRUCCIONES -> . IFS
    (16) INSTRUCCIONES -> . FORS
    (17) INSTRUCCIONES -> . WHILES
    (18) INSTRUCCIONES -> . ASIGNACION
    (19) INSTRUCCIONES -> . I
    (20) INSTRUCCIONES -> . LLAMADAS
    (21) INSTRUCCIONES -> . NATIVAS PTCOMA
    (22) INSTRUCCIONES -> . STRUCTS
    (23) INSTRUCCIONES -> . BREAK
    (24) INSTRUCCIONES -> . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 354
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    INSTRUCCIONES                  shift and go to state 353
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13
    BREAK                          shift and go to state 14
    CONTINUE                       shift and go to state 15

state 323

    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 324

    (127) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRING        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 127 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 325

    (128) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 355
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 326

    (131) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 356


state 327

    (78) E -> R_LOG PARIZQ E COMA E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 357
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 328

    (84) E -> ID .
    (105) NATIVAS -> ID . PUNTO R_LENGTH
    (36) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> ID . PARIZQ PARDER PTCOMA

    DOSPUNTOS       reduce using rule 84 (E -> ID .)
    MAS             reduce using rule 84 (E -> ID .)
    MENOS           reduce using rule 84 (E -> ID .)
    POR             reduce using rule 84 (E -> ID .)
    DIVIDIDO        reduce using rule 84 (E -> ID .)
    MODAL           reduce using rule 84 (E -> ID .)
    POTENCIA        reduce using rule 84 (E -> ID .)
    CORDER          reduce using rule 84 (E -> ID .)
    COMA            reduce using rule 84 (E -> ID .)
    PUNTO           shift and go to state 49
    CORIZQ          shift and go to state 179
    PARIZQ          shift and go to state 48


state 329

    (160) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E
    (45) LISTA -> E .

    DOSPUNTOS       shift and go to state 358
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124
    CORDER          reduce using rule 45 (LISTA -> E .)
    COMA            reduce using rule 45 (LISTA -> E .)


state 330

    (155) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 359


state 331

    (156) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRING        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 156 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 332

    (157) RANGO -> E DOSPUNTITOS E .
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    R_END           reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_IF            reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_FOR           reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_WHILE         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_GLOBAL        reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_LOCAL         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    ID              reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_PRINT         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_PRINTLN       reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_PARSE         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_TRUNC         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_FLOAT         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_STRING        reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_TYPEOF        reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_PUSH          reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_POP           reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_MUTABLE       reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_STRUCT        reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_BREAK         reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    R_CONTINUE      reduce using rule 157 (RANGO -> E DOSPUNTITOS E .)
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 333

    (46) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 360


state 334

    (47) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 361


state 335

    (33) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 33 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 33 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 336

    (34) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 34 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 34 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 337

    (35) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 35 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 35 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 338

    (98) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 98 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 339

    (99) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 99 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 340

    (103) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E . PARDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    PARDER          shift and go to state 362
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 341

    (161) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_IF            reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FUNCTION      reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_END           reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSE          reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSEIF        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 161 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 342

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 363


state 343

    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 364


state 344

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    ID              reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    $end            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)


state 345

    (111) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 365


state 346

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 347

    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 366


state 348

    (115) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_BREAK         reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_CONTINUE      reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 115 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)


state 349

    (38) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (40) LISTAS -> . LISTAS COMA LISTA
    (41) LISTAS -> . LISTA
    (42) LISTA -> . NATIVAS
    (43) LISTA -> . ARREGLOS
    (44) LISTA -> . LLAMADAS
    (45) LISTA -> . E
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (36) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (37) ARREGLOS -> . CORIZQ LISTAS CORDER
    (38) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (39) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    ID              shift and go to state 90
    CORIZQ          shift and go to state 97
    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69

    LISTAS                         shift and go to state 367
    LISTA                          shift and go to state 100
    NATIVAS                        shift and go to state 92
    ARREGLOS                       shift and go to state 93
    LLAMADAS                       shift and go to state 94
    E                              shift and go to state 95

state 350

    (39) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (40) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 368
    COMA            shift and go to state 185


state 351

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 352

    (124) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 124 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 353

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (13) INSTRUCCIONES -> INSTRUCCIONES . BREAK
    (14) INSTRUCCIONES -> INSTRUCCIONES . CONTINUE
    (116) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (119) IFS -> . R_IF LO R_END PTCOMA
    (120) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) IFS -> . R_IF LO ELSEIF
    (122) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (123) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (155) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (156) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (153) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (154) WHILES -> . R_WHILE LO R_END PTCOMA
    (46) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (48) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (49) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (50) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (51) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (52) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (53) ASIGNACION -> . R_LOCAL ID PTCOMA
    (25) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (26) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (61) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (62) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (98) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (99) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (101) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (104) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (105) NATIVAS -> . ID PUNTO R_LENGTH
    (161) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (162) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (163) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (164) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (54) BREAK -> . R_BREAK PTCOMA
    (132) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 369
    R_IF            shift and go to state 16
    R_FOR           shift and go to state 17
    R_WHILE         shift and go to state 18
    R_GLOBAL        shift and go to state 19
    R_LOCAL         shift and go to state 20
    ID              shift and go to state 5
    R_PRINT         shift and go to state 21
    R_PRINTLN       shift and go to state 22
    R_PARSE         shift and go to state 23
    R_TRUNC         shift and go to state 24
    R_FLOAT         shift and go to state 25
    R_STRING        shift and go to state 26
    R_TYPEOF        shift and go to state 27
    R_PUSH          shift and go to state 28
    R_POP           shift and go to state 29
    R_MUTABLE       shift and go to state 30
    R_STRUCT        shift and go to state 31
    R_BREAK         shift and go to state 32
    R_CONTINUE      shift and go to state 33

    IFS                            shift and go to state 36
    FORS                           shift and go to state 37
    WHILES                         shift and go to state 38
    ASIGNACION                     shift and go to state 39
    I                              shift and go to state 40
    LLAMADAS                       shift and go to state 41
    NATIVAS                        shift and go to state 42
    STRUCTS                        shift and go to state 43
    BREAK                          shift and go to state 44
    CONTINUE                       shift and go to state 45

state 354

    (130) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 370


state 355

    (128) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 371


state 356

    (131) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 131 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 357

    (78) E -> R_LOG PARIZQ E COMA E PARDER .

    MAS             reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRING        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_MUTABLE       reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRUCT        reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARIZQ          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 78 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 358

    (160) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (63) E -> . E MAS E
    (64) E -> . E MENOS E
    (65) E -> . E POR E
    (66) E -> . E DIVIDIDO E
    (67) E -> . E MODAL E
    (68) E -> . E POTENCIA E
    (69) E -> . MENOS E
    (70) E -> . PARIZQ E PARDER
    (71) E -> . R_LOG10 PARIZQ E PARDER
    (72) E -> . R_SIN PARIZQ E PARDER
    (73) E -> . R_COS PARIZQ E PARDER
    (74) E -> . R_TAN PARIZQ E PARDER
    (75) E -> . R_SQRT PARIZQ E PARDER
    (76) E -> . R_UPPERCASE PARIZQ E PARDER
    (77) E -> . R_LOWERCASE PARIZQ E PARDER
    (78) E -> . R_LOG PARIZQ E COMA E PARDER
    (79) E -> . DECIMAL
    (80) E -> . ENTERO
    (81) E -> . R_TRUE
    (82) E -> . R_FALSE
    (83) E -> . CADENA
    (84) E -> . ID

    MENOS           shift and go to state 56
    PARIZQ          shift and go to state 96
    R_LOG10         shift and go to state 57
    R_SIN           shift and go to state 58
    R_COS           shift and go to state 59
    R_TAN           shift and go to state 60
    R_SQRT          shift and go to state 61
    R_UPPERCASE     shift and go to state 62
    R_LOWERCASE     shift and go to state 63
    R_LOG           shift and go to state 64
    DECIMAL         shift and go to state 65
    ENTERO          shift and go to state 66
    R_TRUE          shift and go to state 67
    R_FALSE         shift and go to state 68
    CADENA          shift and go to state 69
    ID              shift and go to state 70

    E                              shift and go to state 372

state 359

    (155) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 155 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 360

    (46) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 46 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 361

    (47) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 47 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 362

    (103) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .

    PTCOMA          reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTOS       reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARIZQ          reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    COMA            reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_END           reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_IF            reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FOR           reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_WHILE         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_GLOBAL        reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOCAL         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ID              reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINT         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINTLN       reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PARSE         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUNC         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FLOAT         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRING        reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TYPEOF        reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PUSH          reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_POP           reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_MUTABLE       reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRUCT        reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_BREAK         reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_CONTINUE      reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARDER          reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CORDER          reduce using rule 103 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)


state 363

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)


state 364

    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 373


state 365

    (111) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)


state 366

    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_BREAK         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_CONTINUE      reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 367

    (38) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (40) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 374
    COMA            shift and go to state 185


state 368

    (39) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 39 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 369

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 375


state 370

    (130) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 130 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 371

    (128) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 372

    (160) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (63) E -> E . MAS E
    (64) E -> E . MENOS E
    (65) E -> E . POR E
    (66) E -> E . DIVIDIDO E
    (67) E -> E . MODAL E
    (68) E -> E . POTENCIA E

    CORDER          shift and go to state 376
    MAS             shift and go to state 119
    MENOS           shift and go to state 120
    POR             shift and go to state 121
    DIVIDIDO        shift and go to state 122
    MODAL           shift and go to state 123
    POTENCIA        shift and go to state 124


state 373

    (109) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_BREAK         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_CONTINUE      reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 374

    (38) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 38 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 375

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 376

    (160) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRING        reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_MUTABLE       reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRUCT        reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 160 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 3 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 3 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 3 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_BREAK in state 3 resolved as shift
WARNING: shift/reduce conflict for R_CONTINUE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 35 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 35 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 35 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 35 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 35 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 35 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 35 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 35 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 35 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 35 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 35 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 35 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 35 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 35 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 35 resolved as shift
WARNING: shift/reduce conflict for R_BREAK in state 35 resolved as shift
WARNING: shift/reduce conflict for R_CONTINUE in state 35 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 90 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 111 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 112 resolved as shift
