Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO INIT
Rule 2     INICIO -> INIT
Rule 3     INIT -> FUNCIONES
Rule 4     INIT -> INSTRUCCIONES
Rule 5     INIT -> STRUCTS
Rule 6     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 7     INSTRUCCIONES -> INSTRUCCION
Rule 8     INSTRUCCION -> IFS
Rule 9     INSTRUCCION -> FORS
Rule 10    INSTRUCCION -> WHILES
Rule 11    INSTRUCCION -> ASIGNACION
Rule 12    INSTRUCCION -> I
Rule 13    INSTRUCCION -> LLAMADAS PTCOMA
Rule 14    INSTRUCCION -> NATIVAS PTCOMA
Rule 15    INSTRUCCION -> BREAK
Rule 16    INSTRUCCION -> CONTINUE
Rule 17    INSTRUCCION -> RETURN
Rule 18    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 19    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 20    I -> R_PRINTLN PARIZQ PARDER PTCOMA
Rule 21    I -> R_PRINT PARIZQ PARDER PTCOMA
Rule 22    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 23    IMPRESIONES -> IMPRESION
Rule 24    IMPRESION -> ARREGLOS
Rule 25    IMPRESION -> LO
Rule 26    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 27    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 28    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 29    ARREGLOS -> ARREGLOS COMA ARREGLO
Rule 30    ARREGLOS -> ARREGLO
Rule 31    ARREGLO -> CORIZQ LISTAS CORDER
Rule 32    LISTAS -> LISTAS COMA LISTA
Rule 33    LISTAS -> LISTA
Rule 34    LISTA -> ARREGLOS
Rule 35    LISTA -> LO
Rule 36    ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 37    ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 38    ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
Rule 39    ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
Rule 40    ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 41    ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA
Rule 42    ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA
Rule 43    ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA
Rule 44    ASIGNACION -> E IGUAL LISTA PTCOMA
Rule 45    ASIGNACION -> R_GLOBAL E PTCOMA
Rule 46    ASIGNACION -> R_LOCAL E PTCOMA
Rule 47    BREAK -> R_BREAK PTCOMA
Rule 48    TIPO -> R_NOTHING
Rule 49    TIPO -> R_INT64
Rule 50    TIPO -> R_FLOAT64
Rule 51    TIPO -> R_STRING
Rule 52    TIPO -> R_CHAR
Rule 53    TIPO -> R_BOOL
Rule 54    LLAMADAS -> ID PARIZQ LISTAS PARDER
Rule 55    LLAMADAS -> ID PARIZQ PARDER
Rule 56    E -> E MAS E
Rule 57    E -> E MENOS E
Rule 58    E -> E POR E
Rule 59    E -> E DIVIDIDO E
Rule 60    E -> E MODAL E
Rule 61    E -> E POTENCIA E
Rule 62    E -> MENOS E
Rule 63    E -> PARIZQ E PARDER
Rule 64    E -> R_LOG10 PARIZQ E PARDER
Rule 65    E -> R_SIN PARIZQ E PARDER
Rule 66    E -> R_COS PARIZQ E PARDER
Rule 67    E -> R_TAN PARIZQ E PARDER
Rule 68    E -> R_SQRT PARIZQ E PARDER
Rule 69    E -> R_UPPERCASE PARIZQ E PARDER
Rule 70    E -> R_LOWERCASE PARIZQ E PARDER
Rule 71    E -> R_LOG PARIZQ E COMA E PARDER
Rule 72    E -> DECIMAL
Rule 73    E -> ENTERO
Rule 74    E -> R_TRUE
Rule 75    E -> R_FALSE
Rule 76    E -> R_NOTHING
Rule 77    E -> CADENA
Rule 78    E -> LLAMADAS
Rule 79    E -> ACCESOS
Rule 80    E -> ID
Rule 81    E -> ID ARRAYS
Rule 82    ARRAYS -> ARRAYS ARRAY
Rule 83    ARRAYS -> ARRAY
Rule 84    ARRAY -> CORIZQ E CORDER
Rule 85    E -> NATIVAS
Rule 86    RE -> RE MENQUE RE
Rule 87    RE -> RE MAYQUE RE
Rule 88    RE -> RE IGUALQUE RE
Rule 89    RE -> RE NIGUALQUE RE
Rule 90    RE -> RE MENORIGUAL RE
Rule 91    RE -> RE MAYORIGUAL RE
Rule 92    RE -> PARIZQ RE PARDER
Rule 93    RE -> E
Rule 94    LO -> LO AND LO
Rule 95    LO -> LO OR LO
Rule 96    LO -> DIFERENTE LO
Rule 97    LO -> PARIZQ LO PARDER
Rule 98    LO -> RE
Rule 99    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 100   NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 101   NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 102   NATIVAS -> R_STRING PARIZQ LISTA PARDER
Rule 103   NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 104   NATIVAS -> R_TRUNC PARIZQ LISTA PARDER
Rule 105   NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
Rule 106   NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER
Rule 107   NATIVAS -> R_LENGTH PARIZQ E PARDER
Rule 108   RETURN -> R_RETURN LISTA PTCOMA
Rule 109   RETURN -> R_RETURN PTCOMA
Rule 110   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
Rule 111   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
Rule 112   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 113   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 114   PARAMETROS -> PARAMETROS COMA PARAMETRO
Rule 115   PARAMETROS -> PARAMETRO
Rule 116   PARAMETRO -> ID
Rule 117   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 118   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 119   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 120   IFS -> R_IF LO R_END PTCOMA
Rule 121   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 122   IFS -> R_IF LO ELSEIF
Rule 123   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 124   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 125   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 126   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 127   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 128   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 129   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 130   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 131   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 132   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 133   CONTINUE -> R_CONTINUE PTCOMA
Rule 134   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP
Rule 135   INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP
Rule 136   INSTRUCCION_LOOP -> IFS
Rule 137   INSTRUCCION_LOOP -> FORS
Rule 138   INSTRUCCION_LOOP -> WHILES
Rule 139   INSTRUCCION_LOOP -> ASIGNACION
Rule 140   INSTRUCCION_LOOP -> I
Rule 141   INSTRUCCION_LOOP -> LLAMADAS PTCOMA
Rule 142   INSTRUCCION_LOOP -> NATIVAS PTCOMA
Rule 143   INSTRUCCION_LOOP -> BREAK
Rule 144   INSTRUCCION_LOOP -> CONTINUE
Rule 145   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 146   WHILES -> R_WHILE LO R_END PTCOMA
Rule 147   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 148   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 149   RANGO -> E DOSPUNTITOS E
Rule 150   RANGO -> E
Rule 151   RANGO -> ARREGLOS
Rule 152   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 153   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 154   STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 155   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 156   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 157   ELEMENTOS -> ELEMENTOS ELEMENTO
Rule 158   ELEMENTOS -> ELEMENTO
Rule 159   ELEMENTO -> ID PTCOMA
Rule 160   ELEMENTO -> ID DOSPUNTOS TIPO PTCOMA
Rule 161   ELEMENTO -> ID DOSPUNTOS ID PTCOMA
Rule 162   ACCESOS -> ACCESOS PUNTO ACCESO
Rule 163   ACCESOS -> ACCESO
Rule 164   ACCESO -> ID

Terminals, with rules where they appear

AND                  : 94
CADENA               : 77
COMA                 : 22 29 32 71 99 100 105 114
CORDER               : 31 84 152
CORIZQ               : 31 84 152
DECIMAL              : 72
DIFERENTE            : 96 105 106
DIVIDIDO             : 59
DOLAR                : 26 27 28
DOSPUNTITOS          : 149
DOSPUNTOS            : 36 37 38 39 40 41 152 160 161
ENTERO               : 73
ID                   : 38 39 41 54 55 80 81 110 111 112 113 116 147 148 152 153 154 155 156 159 160 161 161 164
IGUAL                : 36 37 38 39 40 41 42 43 44
IGUALQUE             : 88
MAS                  : 56
MAYORIGUAL           : 91
MAYQUE               : 87
MENORIGUAL           : 90
MENOS                : 57 62
MENQUE               : 86
MODAL                : 60
NIGUALQUE            : 89
OR                   : 95
PARDER               : 18 19 20 21 26 27 28 54 55 63 64 65 66 67 68 69 70 71 92 97 99 100 101 102 103 104 105 106 107 110 111 112 113
PARIZQ               : 18 19 20 21 26 27 28 54 55 63 64 65 66 67 68 69 70 71 92 97 99 100 101 102 103 104 105 106 107 110 111 112 113
POR                  : 58
POTENCIA             : 61
PTCOMA               : 13 14 18 19 20 21 36 37 38 39 40 41 42 43 44 45 46 47 108 109 110 111 112 113 117 118 120 121 123 124 125 126 128 129 131 132 133 141 142 145 146 147 148 153 154 155 156 159 160 161
PUNTO                : 162
R_BOOL               : 53
R_BREAK              : 47
R_CHAR               : 52
R_CONTINUE           : 133
R_COS                : 66
R_ELSE               : 118 121 123 124 126 129 131 132
R_ELSEIF             : 125 126 127 128 129 130 131 132
R_END                : 110 111 112 113 117 118 120 121 123 124 125 126 128 129 131 132 145 146 147 148 153 154 155 156
R_FALSE              : 75
R_FLOAT              : 101
R_FLOAT64            : 50
R_FOR                : 147 148
R_FUNCTION           : 110 111 112 113
R_GLOBAL             : 36 38 42 45
R_IF                 : 117 118 119 120 121 122 123 124
R_IN                 : 147 148
R_INT64              : 49
R_LENGTH             : 107
R_LOCAL              : 37 39 43 46
R_LOG                : 71
R_LOG10              : 64
R_LOWERCASE          : 70
R_MUTABLE            : 153 155
R_NOTHING            : 48 76
R_PARSE              : 99
R_POP                : 106
R_PRINT              : 18 21
R_PRINTLN            : 19 20
R_PUSH               : 105
R_RETURN             : 108 109
R_SIN                : 65
R_SQRT               : 68
R_STRING             : 51 102
R_STRUCT             : 153 154 155 156
R_TAN                : 67
R_TRUE               : 74
R_TRUNC              : 100 104
R_TYPEOF             : 103
R_UPPERCASE          : 69
R_WHILE              : 145 146
error                : 

Nonterminals, with rules where they appear

ACCESO               : 162 163
ACCESOS              : 79 162
ARRAY                : 82 83
ARRAYS               : 81 82
ARREGLO              : 29 30
ARREGLOS             : 24 27 29 34 151
ASIGNACION           : 11 139
BREAK                : 15 143
CONTINUE             : 16 144
E                    : 26 36 37 38 39 40 41 42 43 44 45 46 56 56 57 57 58 58 59 59 60 60 61 61 62 63 64 65 66 67 68 69 70 71 71 84 93 105 106 107 149 149 150 152 152
ELEMENTO             : 157 158
ELEMENTOS            : 153 154 157
ELSEIF               : 119 122 127 130
FORS                 : 9 137
FUNCIONES            : 3
I                    : 12 140
IFS                  : 8 136
IMPRESION            : 22 23
IMPRESIONES          : 18 19 22
INICIO               : 1 0
INIT                 : 1 2
INSTRUCCION          : 6 7
INSTRUCCIONES        : 4 6 110 112 117 118 118 119 121 123 125 126 126 127 129 131
INSTRUCCIONES_LOOP   : 134 145 147
INSTRUCCION_LOOP     : 134 135
LISTA                : 32 33 36 37 38 39 40 41 42 43 44 99 100 101 102 103 104 105 108
LISTAS               : 31 32 54
LLAMADAS             : 13 78 141
LO                   : 25 35 94 94 95 95 96 97 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 145 146
NATIVAS              : 14 28 85 142
PARAMETRO            : 114 115
PARAMETROS           : 110 111 114
RANGO                : 147 148
RE                   : 86 86 87 87 88 88 89 89 90 90 91 91 92 98
RETURN               : 17
STRUCTS              : 5
TIPO                 : 36 37 40 99 100 160
WHILES               : 10 138

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO INIT
    (2) INICIO -> . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (5) INIT -> . STRUCTS
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (112) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_FUNCTION      shift and go to state 6
    R_MUTABLE       shift and go to state 10
    R_STRUCT        shift and go to state 11
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INICIO                         shift and go to state 1
    INIT                           shift and go to state 2
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    STRUCTS                        shift and go to state 5
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (5) INIT -> . STRUCTS
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (112) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (153) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (154) STRUCTS -> . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_FUNCTION      shift and go to state 6
    R_MUTABLE       shift and go to state 10
    R_STRUCT        shift and go to state 11
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INIT                           shift and go to state 58
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    STRUCTS                        shift and go to state 5
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 2

    (2) INICIO -> INIT .

    R_FUNCTION      reduce using rule 2 (INICIO -> INIT .)
    R_MUTABLE       reduce using rule 2 (INICIO -> INIT .)
    R_STRUCT        reduce using rule 2 (INICIO -> INIT .)
    R_IF            reduce using rule 2 (INICIO -> INIT .)
    R_FOR           reduce using rule 2 (INICIO -> INIT .)
    R_WHILE         reduce using rule 2 (INICIO -> INIT .)
    R_GLOBAL        reduce using rule 2 (INICIO -> INIT .)
    R_LOCAL         reduce using rule 2 (INICIO -> INIT .)
    R_PRINT         reduce using rule 2 (INICIO -> INIT .)
    R_PRINTLN       reduce using rule 2 (INICIO -> INIT .)
    ID              reduce using rule 2 (INICIO -> INIT .)
    R_PARSE         reduce using rule 2 (INICIO -> INIT .)
    R_TRUNC         reduce using rule 2 (INICIO -> INIT .)
    R_FLOAT         reduce using rule 2 (INICIO -> INIT .)
    R_STRING        reduce using rule 2 (INICIO -> INIT .)
    R_TYPEOF        reduce using rule 2 (INICIO -> INIT .)
    R_PUSH          reduce using rule 2 (INICIO -> INIT .)
    R_POP           reduce using rule 2 (INICIO -> INIT .)
    R_LENGTH        reduce using rule 2 (INICIO -> INIT .)
    R_BREAK         reduce using rule 2 (INICIO -> INIT .)
    R_CONTINUE      reduce using rule 2 (INICIO -> INIT .)
    R_RETURN        reduce using rule 2 (INICIO -> INIT .)
    MENOS           reduce using rule 2 (INICIO -> INIT .)
    PARIZQ          reduce using rule 2 (INICIO -> INIT .)
    R_LOG10         reduce using rule 2 (INICIO -> INIT .)
    R_SIN           reduce using rule 2 (INICIO -> INIT .)
    R_COS           reduce using rule 2 (INICIO -> INIT .)
    R_TAN           reduce using rule 2 (INICIO -> INIT .)
    R_SQRT          reduce using rule 2 (INICIO -> INIT .)
    R_UPPERCASE     reduce using rule 2 (INICIO -> INIT .)
    R_LOWERCASE     reduce using rule 2 (INICIO -> INIT .)
    R_LOG           reduce using rule 2 (INICIO -> INIT .)
    DECIMAL         reduce using rule 2 (INICIO -> INIT .)
    ENTERO          reduce using rule 2 (INICIO -> INIT .)
    R_TRUE          reduce using rule 2 (INICIO -> INIT .)
    R_FALSE         reduce using rule 2 (INICIO -> INIT .)
    R_NOTHING       reduce using rule 2 (INICIO -> INIT .)
    CADENA          reduce using rule 2 (INICIO -> INIT .)
    $end            reduce using rule 2 (INICIO -> INIT .)


state 3

    (3) INIT -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INIT -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INIT -> FUNCIONES .)
    R_IF            reduce using rule 3 (INIT -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INIT -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INIT -> FUNCIONES .)
    ID              reduce using rule 3 (INIT -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INIT -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRING        reduce using rule 3 (INIT -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INIT -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INIT -> FUNCIONES .)
    R_POP           reduce using rule 3 (INIT -> FUNCIONES .)
    R_LENGTH        reduce using rule 3 (INIT -> FUNCIONES .)
    R_BREAK         reduce using rule 3 (INIT -> FUNCIONES .)
    R_CONTINUE      reduce using rule 3 (INIT -> FUNCIONES .)
    R_RETURN        reduce using rule 3 (INIT -> FUNCIONES .)
    MENOS           reduce using rule 3 (INIT -> FUNCIONES .)
    PARIZQ          reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOG10         reduce using rule 3 (INIT -> FUNCIONES .)
    R_SIN           reduce using rule 3 (INIT -> FUNCIONES .)
    R_COS           reduce using rule 3 (INIT -> FUNCIONES .)
    R_TAN           reduce using rule 3 (INIT -> FUNCIONES .)
    R_SQRT          reduce using rule 3 (INIT -> FUNCIONES .)
    R_UPPERCASE     reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOWERCASE     reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOG           reduce using rule 3 (INIT -> FUNCIONES .)
    DECIMAL         reduce using rule 3 (INIT -> FUNCIONES .)
    ENTERO          reduce using rule 3 (INIT -> FUNCIONES .)
    R_TRUE          reduce using rule 3 (INIT -> FUNCIONES .)
    R_FALSE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_NOTHING       reduce using rule 3 (INIT -> FUNCIONES .)
    CADENA          reduce using rule 3 (INIT -> FUNCIONES .)
    $end            reduce using rule 3 (INIT -> FUNCIONES .)


state 4

    (4) INIT -> INSTRUCCIONES .
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_LENGTH resolved as shift
  ! shift/reduce conflict for R_BREAK resolved as shift
  ! shift/reduce conflict for R_CONTINUE resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! shift/reduce conflict for R_LOG10 resolved as shift
  ! shift/reduce conflict for R_SIN resolved as shift
  ! shift/reduce conflict for R_COS resolved as shift
  ! shift/reduce conflict for R_TAN resolved as shift
  ! shift/reduce conflict for R_SQRT resolved as shift
  ! shift/reduce conflict for R_UPPERCASE resolved as shift
  ! shift/reduce conflict for R_LOWERCASE resolved as shift
  ! shift/reduce conflict for R_LOG resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for R_TRUE resolved as shift
  ! shift/reduce conflict for R_FALSE resolved as shift
  ! shift/reduce conflict for R_NOTHING resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
    R_FUNCTION      reduce using rule 4 (INIT -> INSTRUCCIONES .)
    R_MUTABLE       reduce using rule 4 (INIT -> INSTRUCCIONES .)
    R_STRUCT        reduce using rule 4 (INIT -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INIT -> INSTRUCCIONES .)
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

  ! R_IF            [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LENGTH        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_BREAK         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_CONTINUE      [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_RETURN        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! MENOS           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! PARIZQ          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOG10         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_SIN           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_COS           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TAN           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_SQRT          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_UPPERCASE     [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOWERCASE     [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOG           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! DECIMAL         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! ENTERO          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TRUE          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FALSE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_NOTHING       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! CADENA          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 5

    (5) INIT -> STRUCTS .

    R_FUNCTION      reduce using rule 5 (INIT -> STRUCTS .)
    R_MUTABLE       reduce using rule 5 (INIT -> STRUCTS .)
    R_STRUCT        reduce using rule 5 (INIT -> STRUCTS .)
    R_IF            reduce using rule 5 (INIT -> STRUCTS .)
    R_FOR           reduce using rule 5 (INIT -> STRUCTS .)
    R_WHILE         reduce using rule 5 (INIT -> STRUCTS .)
    R_GLOBAL        reduce using rule 5 (INIT -> STRUCTS .)
    R_LOCAL         reduce using rule 5 (INIT -> STRUCTS .)
    R_PRINT         reduce using rule 5 (INIT -> STRUCTS .)
    R_PRINTLN       reduce using rule 5 (INIT -> STRUCTS .)
    ID              reduce using rule 5 (INIT -> STRUCTS .)
    R_PARSE         reduce using rule 5 (INIT -> STRUCTS .)
    R_TRUNC         reduce using rule 5 (INIT -> STRUCTS .)
    R_FLOAT         reduce using rule 5 (INIT -> STRUCTS .)
    R_STRING        reduce using rule 5 (INIT -> STRUCTS .)
    R_TYPEOF        reduce using rule 5 (INIT -> STRUCTS .)
    R_PUSH          reduce using rule 5 (INIT -> STRUCTS .)
    R_POP           reduce using rule 5 (INIT -> STRUCTS .)
    R_LENGTH        reduce using rule 5 (INIT -> STRUCTS .)
    R_BREAK         reduce using rule 5 (INIT -> STRUCTS .)
    R_CONTINUE      reduce using rule 5 (INIT -> STRUCTS .)
    R_RETURN        reduce using rule 5 (INIT -> STRUCTS .)
    MENOS           reduce using rule 5 (INIT -> STRUCTS .)
    PARIZQ          reduce using rule 5 (INIT -> STRUCTS .)
    R_LOG10         reduce using rule 5 (INIT -> STRUCTS .)
    R_SIN           reduce using rule 5 (INIT -> STRUCTS .)
    R_COS           reduce using rule 5 (INIT -> STRUCTS .)
    R_TAN           reduce using rule 5 (INIT -> STRUCTS .)
    R_SQRT          reduce using rule 5 (INIT -> STRUCTS .)
    R_UPPERCASE     reduce using rule 5 (INIT -> STRUCTS .)
    R_LOWERCASE     reduce using rule 5 (INIT -> STRUCTS .)
    R_LOG           reduce using rule 5 (INIT -> STRUCTS .)
    DECIMAL         reduce using rule 5 (INIT -> STRUCTS .)
    ENTERO          reduce using rule 5 (INIT -> STRUCTS .)
    R_TRUE          reduce using rule 5 (INIT -> STRUCTS .)
    R_FALSE         reduce using rule 5 (INIT -> STRUCTS .)
    R_NOTHING       reduce using rule 5 (INIT -> STRUCTS .)
    CADENA          reduce using rule 5 (INIT -> STRUCTS .)
    $end            reduce using rule 5 (INIT -> STRUCTS .)


state 6

    (110) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA

    ID              shift and go to state 60


state 7

    (54) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (55) LLAMADAS -> ID . PARIZQ PARDER
    (80) E -> ID .
    (81) E -> ID . ARRAYS
    (164) ACCESO -> ID .
    (82) ARRAYS -> . ARRAYS ARRAY
    (83) ARRAYS -> . ARRAY
    (84) ARRAY -> . CORIZQ E CORDER

  ! reduce/reduce conflict for IGUAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MAS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MENOS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MODAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 80 (E -> ID .)
    PARIZQ          shift and go to state 61
    IGUAL           reduce using rule 80 (E -> ID .)
    MAS             reduce using rule 80 (E -> ID .)
    MENOS           reduce using rule 80 (E -> ID .)
    POR             reduce using rule 80 (E -> ID .)
    DIVIDIDO        reduce using rule 80 (E -> ID .)
    MODAL           reduce using rule 80 (E -> ID .)
    POTENCIA        reduce using rule 80 (E -> ID .)
    PUNTO           reduce using rule 164 (ACCESO -> ID .)
    CORIZQ          shift and go to state 64

  ! IGUAL           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MAS             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MENOS           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POR             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DIVIDIDO        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MODAL           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POTENCIA        [ reduce using rule 164 (ACCESO -> ID .) ]

    ARRAYS                         shift and go to state 62
    ARRAY                          shift and go to state 63

state 8

    (63) E -> PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 65
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 9

    (7) INSTRUCCIONES -> INSTRUCCION .

    R_IF            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_FOR           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_WHILE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOCAL         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    ID              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_PARSE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_TRUNC         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_FLOAT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRING        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_PUSH          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_POP           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_LENGTH        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_BREAK         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_CONTINUE      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_RETURN        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    MENOS           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    PARIZQ          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOG10         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_SIN           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_COS           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_TAN           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_SQRT          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_UPPERCASE     reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOWERCASE     reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOG           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    DECIMAL         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    ENTERO          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_TRUE          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_FALSE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_NOTHING       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    CADENA          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRUCT        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_END           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSE          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)


state 10

    (153) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (155) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 69


state 11

    (154) STRUCTS -> R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 70


state 12

    (8) INSTRUCCION -> IFS .

    R_IF            reduce using rule 8 (INSTRUCCION -> IFS .)
    R_FOR           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_WHILE         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCION -> IFS .)
    R_LOCAL         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_PRINT         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCION -> IFS .)
    ID              reduce using rule 8 (INSTRUCCION -> IFS .)
    R_PARSE         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_TRUNC         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_FLOAT         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_STRING        reduce using rule 8 (INSTRUCCION -> IFS .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCION -> IFS .)
    R_PUSH          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_POP           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_LENGTH        reduce using rule 8 (INSTRUCCION -> IFS .)
    R_BREAK         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_CONTINUE      reduce using rule 8 (INSTRUCCION -> IFS .)
    R_RETURN        reduce using rule 8 (INSTRUCCION -> IFS .)
    MENOS           reduce using rule 8 (INSTRUCCION -> IFS .)
    PARIZQ          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_LOG10         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_SIN           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_COS           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_TAN           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_SQRT          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_UPPERCASE     reduce using rule 8 (INSTRUCCION -> IFS .)
    R_LOWERCASE     reduce using rule 8 (INSTRUCCION -> IFS .)
    R_LOG           reduce using rule 8 (INSTRUCCION -> IFS .)
    DECIMAL         reduce using rule 8 (INSTRUCCION -> IFS .)
    ENTERO          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_TRUE          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_FALSE         reduce using rule 8 (INSTRUCCION -> IFS .)
    R_NOTHING       reduce using rule 8 (INSTRUCCION -> IFS .)
    CADENA          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCION -> IFS .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCION -> IFS .)
    R_STRUCT        reduce using rule 8 (INSTRUCCION -> IFS .)
    $end            reduce using rule 8 (INSTRUCCION -> IFS .)
    R_END           reduce using rule 8 (INSTRUCCION -> IFS .)
    R_ELSE          reduce using rule 8 (INSTRUCCION -> IFS .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCION -> IFS .)


state 13

    (9) INSTRUCCION -> FORS .

    R_IF            reduce using rule 9 (INSTRUCCION -> FORS .)
    R_FOR           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_WHILE         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCION -> FORS .)
    R_LOCAL         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_PRINT         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCION -> FORS .)
    ID              reduce using rule 9 (INSTRUCCION -> FORS .)
    R_PARSE         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_TRUNC         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_FLOAT         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_STRING        reduce using rule 9 (INSTRUCCION -> FORS .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCION -> FORS .)
    R_PUSH          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_POP           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_LENGTH        reduce using rule 9 (INSTRUCCION -> FORS .)
    R_BREAK         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_CONTINUE      reduce using rule 9 (INSTRUCCION -> FORS .)
    R_RETURN        reduce using rule 9 (INSTRUCCION -> FORS .)
    MENOS           reduce using rule 9 (INSTRUCCION -> FORS .)
    PARIZQ          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_LOG10         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_SIN           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_COS           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_TAN           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_SQRT          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_UPPERCASE     reduce using rule 9 (INSTRUCCION -> FORS .)
    R_LOWERCASE     reduce using rule 9 (INSTRUCCION -> FORS .)
    R_LOG           reduce using rule 9 (INSTRUCCION -> FORS .)
    DECIMAL         reduce using rule 9 (INSTRUCCION -> FORS .)
    ENTERO          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_TRUE          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_FALSE         reduce using rule 9 (INSTRUCCION -> FORS .)
    R_NOTHING       reduce using rule 9 (INSTRUCCION -> FORS .)
    CADENA          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCION -> FORS .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCION -> FORS .)
    R_STRUCT        reduce using rule 9 (INSTRUCCION -> FORS .)
    $end            reduce using rule 9 (INSTRUCCION -> FORS .)
    R_END           reduce using rule 9 (INSTRUCCION -> FORS .)
    R_ELSE          reduce using rule 9 (INSTRUCCION -> FORS .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCION -> FORS .)


state 14

    (10) INSTRUCCION -> WHILES .

    R_IF            reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_FOR           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_WHILE         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_LOCAL         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_PRINT         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCION -> WHILES .)
    ID              reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_PARSE         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_TRUNC         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_FLOAT         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_STRING        reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_PUSH          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_POP           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_LENGTH        reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_BREAK         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_CONTINUE      reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_RETURN        reduce using rule 10 (INSTRUCCION -> WHILES .)
    MENOS           reduce using rule 10 (INSTRUCCION -> WHILES .)
    PARIZQ          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_LOG10         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_SIN           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_COS           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_TAN           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_SQRT          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_UPPERCASE     reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_LOWERCASE     reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_LOG           reduce using rule 10 (INSTRUCCION -> WHILES .)
    DECIMAL         reduce using rule 10 (INSTRUCCION -> WHILES .)
    ENTERO          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_TRUE          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_FALSE         reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_NOTHING       reduce using rule 10 (INSTRUCCION -> WHILES .)
    CADENA          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_STRUCT        reduce using rule 10 (INSTRUCCION -> WHILES .)
    $end            reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_END           reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_ELSE          reduce using rule 10 (INSTRUCCION -> WHILES .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCION -> WHILES .)


state 15

    (11) INSTRUCCION -> ASIGNACION .

    R_IF            reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_FOR           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_WHILE         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_LOCAL         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_PRINT         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    ID              reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_PARSE         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_TRUNC         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_FLOAT         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_STRING        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_PUSH          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_POP           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_LENGTH        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_BREAK         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_CONTINUE      reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_RETURN        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    MENOS           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    PARIZQ          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_LOG10         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_SIN           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_COS           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_TAN           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_SQRT          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_UPPERCASE     reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_LOWERCASE     reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_LOG           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    DECIMAL         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    ENTERO          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_TRUE          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_FALSE         reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_NOTHING       reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    CADENA          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_STRUCT        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_END           reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_ELSE          reduce using rule 11 (INSTRUCCION -> ASIGNACION .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCION -> ASIGNACION .)


state 16

    (12) INSTRUCCION -> I .

    R_IF            reduce using rule 12 (INSTRUCCION -> I .)
    R_FOR           reduce using rule 12 (INSTRUCCION -> I .)
    R_WHILE         reduce using rule 12 (INSTRUCCION -> I .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCION -> I .)
    R_LOCAL         reduce using rule 12 (INSTRUCCION -> I .)
    R_PRINT         reduce using rule 12 (INSTRUCCION -> I .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCION -> I .)
    ID              reduce using rule 12 (INSTRUCCION -> I .)
    R_PARSE         reduce using rule 12 (INSTRUCCION -> I .)
    R_TRUNC         reduce using rule 12 (INSTRUCCION -> I .)
    R_FLOAT         reduce using rule 12 (INSTRUCCION -> I .)
    R_STRING        reduce using rule 12 (INSTRUCCION -> I .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCION -> I .)
    R_PUSH          reduce using rule 12 (INSTRUCCION -> I .)
    R_POP           reduce using rule 12 (INSTRUCCION -> I .)
    R_LENGTH        reduce using rule 12 (INSTRUCCION -> I .)
    R_BREAK         reduce using rule 12 (INSTRUCCION -> I .)
    R_CONTINUE      reduce using rule 12 (INSTRUCCION -> I .)
    R_RETURN        reduce using rule 12 (INSTRUCCION -> I .)
    MENOS           reduce using rule 12 (INSTRUCCION -> I .)
    PARIZQ          reduce using rule 12 (INSTRUCCION -> I .)
    R_LOG10         reduce using rule 12 (INSTRUCCION -> I .)
    R_SIN           reduce using rule 12 (INSTRUCCION -> I .)
    R_COS           reduce using rule 12 (INSTRUCCION -> I .)
    R_TAN           reduce using rule 12 (INSTRUCCION -> I .)
    R_SQRT          reduce using rule 12 (INSTRUCCION -> I .)
    R_UPPERCASE     reduce using rule 12 (INSTRUCCION -> I .)
    R_LOWERCASE     reduce using rule 12 (INSTRUCCION -> I .)
    R_LOG           reduce using rule 12 (INSTRUCCION -> I .)
    DECIMAL         reduce using rule 12 (INSTRUCCION -> I .)
    ENTERO          reduce using rule 12 (INSTRUCCION -> I .)
    R_TRUE          reduce using rule 12 (INSTRUCCION -> I .)
    R_FALSE         reduce using rule 12 (INSTRUCCION -> I .)
    R_NOTHING       reduce using rule 12 (INSTRUCCION -> I .)
    CADENA          reduce using rule 12 (INSTRUCCION -> I .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCION -> I .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCION -> I .)
    R_STRUCT        reduce using rule 12 (INSTRUCCION -> I .)
    $end            reduce using rule 12 (INSTRUCCION -> I .)
    R_END           reduce using rule 12 (INSTRUCCION -> I .)
    R_ELSE          reduce using rule 12 (INSTRUCCION -> I .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCION -> I .)


state 17

    (13) INSTRUCCION -> LLAMADAS . PTCOMA
    (78) E -> LLAMADAS .

    PTCOMA          shift and go to state 71
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)


state 18

    (14) INSTRUCCION -> NATIVAS . PTCOMA
    (85) E -> NATIVAS .

    PTCOMA          shift and go to state 72
    IGUAL           reduce using rule 85 (E -> NATIVAS .)
    MAS             reduce using rule 85 (E -> NATIVAS .)
    MENOS           reduce using rule 85 (E -> NATIVAS .)
    POR             reduce using rule 85 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 85 (E -> NATIVAS .)
    MODAL           reduce using rule 85 (E -> NATIVAS .)
    POTENCIA        reduce using rule 85 (E -> NATIVAS .)


state 19

    (15) INSTRUCCION -> BREAK .

    R_IF            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FOR           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_WHILE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOCAL         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCION -> BREAK .)
    ID              reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PARSE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TRUNC         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FLOAT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRING        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PUSH          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_POP           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LENGTH        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_BREAK         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_CONTINUE      reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_RETURN        reduce using rule 15 (INSTRUCCION -> BREAK .)
    MENOS           reduce using rule 15 (INSTRUCCION -> BREAK .)
    PARIZQ          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOG10         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_SIN           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_COS           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TAN           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_SQRT          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_UPPERCASE     reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOWERCASE     reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOG           reduce using rule 15 (INSTRUCCION -> BREAK .)
    DECIMAL         reduce using rule 15 (INSTRUCCION -> BREAK .)
    ENTERO          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TRUE          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FALSE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_NOTHING       reduce using rule 15 (INSTRUCCION -> BREAK .)
    CADENA          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRUCT        reduce using rule 15 (INSTRUCCION -> BREAK .)
    $end            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_END           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSE          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCION -> BREAK .)


state 20

    (16) INSTRUCCION -> CONTINUE .

    R_IF            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FOR           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_WHILE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOCAL         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    ID              reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PARSE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TRUNC         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FLOAT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRING        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PUSH          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_POP           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LENGTH        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_BREAK         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_CONTINUE      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_RETURN        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    MENOS           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    PARIZQ          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOG10         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_SIN           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_COS           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TAN           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_SQRT          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_UPPERCASE     reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOWERCASE     reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOG           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    DECIMAL         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    ENTERO          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TRUE          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FALSE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_NOTHING       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    CADENA          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRUCT        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    $end            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_END           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSE          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)


state 21

    (17) INSTRUCCION -> RETURN .

    R_IF            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FOR           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_WHILE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOCAL         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCION -> RETURN .)
    ID              reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PARSE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TRUNC         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FLOAT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRING        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PUSH          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_POP           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LENGTH        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_BREAK         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_CONTINUE      reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_RETURN        reduce using rule 17 (INSTRUCCION -> RETURN .)
    MENOS           reduce using rule 17 (INSTRUCCION -> RETURN .)
    PARIZQ          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOG10         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_SIN           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_COS           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TAN           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_SQRT          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_UPPERCASE     reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOWERCASE     reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOG           reduce using rule 17 (INSTRUCCION -> RETURN .)
    DECIMAL         reduce using rule 17 (INSTRUCCION -> RETURN .)
    ENTERO          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TRUE          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FALSE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_NOTHING       reduce using rule 17 (INSTRUCCION -> RETURN .)
    CADENA          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRUCT        reduce using rule 17 (INSTRUCCION -> RETURN .)
    $end            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_END           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSE          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCION -> RETURN .)


state 22

    (117) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (120) IFS -> R_IF . LO R_END PTCOMA
    (121) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> R_IF . LO ELSEIF
    (123) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 73
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 23

    (147) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 78


state 24

    (145) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> R_WHILE . LO R_END PTCOMA
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 79
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 25

    (36) ASIGNACION -> R_GLOBAL . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> R_GLOBAL . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> R_GLOBAL . E PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 80
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 26

    (40) ASIGNACION -> E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> E . IGUAL LISTA DOSPUNTOS ID PTCOMA
    (44) ASIGNACION -> E . IGUAL LISTA PTCOMA
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           shift and go to state 81
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 27

    (37) ASIGNACION -> R_LOCAL . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (43) ASIGNACION -> R_LOCAL . E IGUAL LISTA PTCOMA
    (46) ASIGNACION -> R_LOCAL . E PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 88
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 28

    (18) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA
    (21) I -> R_PRINT . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 89


state 29

    (19) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> R_PRINTLN . PARIZQ PARDER PTCOMA

    PARIZQ          shift and go to state 90


state 30

    (99) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 91


state 31

    (100) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER
    (104) NATIVAS -> R_TRUNC . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 92


state 32

    (101) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 93


state 33

    (102) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 94


state 34

    (103) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 95


state 35

    (105) NATIVAS -> R_PUSH . DIFERENTE PARIZQ E COMA LISTA PARDER

    DIFERENTE       shift and go to state 96


state 36

    (106) NATIVAS -> R_POP . DIFERENTE PARIZQ E PARDER

    DIFERENTE       shift and go to state 97


state 37

    (107) NATIVAS -> R_LENGTH . PARIZQ E PARDER

    PARIZQ          shift and go to state 98


state 38

    (47) BREAK -> R_BREAK . PTCOMA

    PTCOMA          shift and go to state 99


state 39

    (133) CONTINUE -> R_CONTINUE . PTCOMA

    PTCOMA          shift and go to state 100


state 40

    (108) RETURN -> R_RETURN . LISTA PTCOMA
    (109) RETURN -> R_RETURN . PTCOMA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PTCOMA          shift and go to state 102
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 101
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 41

    (62) E -> MENOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 107
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 42

    (64) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 108


state 43

    (65) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 109


state 44

    (66) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 110


state 45

    (67) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 111


state 46

    (68) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 112


state 47

    (69) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 113


state 48

    (70) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 114


state 49

    (71) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 115


state 50

    (72) E -> DECIMAL .

    IGUAL           reduce using rule 72 (E -> DECIMAL .)
    MAS             reduce using rule 72 (E -> DECIMAL .)
    MENOS           reduce using rule 72 (E -> DECIMAL .)
    POR             reduce using rule 72 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 72 (E -> DECIMAL .)
    MODAL           reduce using rule 72 (E -> DECIMAL .)
    POTENCIA        reduce using rule 72 (E -> DECIMAL .)
    PARDER          reduce using rule 72 (E -> DECIMAL .)
    MENQUE          reduce using rule 72 (E -> DECIMAL .)
    MAYQUE          reduce using rule 72 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 72 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 72 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 72 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 72 (E -> DECIMAL .)
    R_END           reduce using rule 72 (E -> DECIMAL .)
    R_ELSE          reduce using rule 72 (E -> DECIMAL .)
    AND             reduce using rule 72 (E -> DECIMAL .)
    OR              reduce using rule 72 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 72 (E -> DECIMAL .)
    R_IF            reduce using rule 72 (E -> DECIMAL .)
    R_FOR           reduce using rule 72 (E -> DECIMAL .)
    R_WHILE         reduce using rule 72 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 72 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 72 (E -> DECIMAL .)
    R_PRINT         reduce using rule 72 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 72 (E -> DECIMAL .)
    ID              reduce using rule 72 (E -> DECIMAL .)
    R_PARSE         reduce using rule 72 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 72 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 72 (E -> DECIMAL .)
    R_STRING        reduce using rule 72 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 72 (E -> DECIMAL .)
    R_PUSH          reduce using rule 72 (E -> DECIMAL .)
    R_POP           reduce using rule 72 (E -> DECIMAL .)
    R_LENGTH        reduce using rule 72 (E -> DECIMAL .)
    R_BREAK         reduce using rule 72 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 72 (E -> DECIMAL .)
    R_RETURN        reduce using rule 72 (E -> DECIMAL .)
    PARIZQ          reduce using rule 72 (E -> DECIMAL .)
    R_LOG10         reduce using rule 72 (E -> DECIMAL .)
    R_SIN           reduce using rule 72 (E -> DECIMAL .)
    R_COS           reduce using rule 72 (E -> DECIMAL .)
    R_TAN           reduce using rule 72 (E -> DECIMAL .)
    R_SQRT          reduce using rule 72 (E -> DECIMAL .)
    R_UPPERCASE     reduce using rule 72 (E -> DECIMAL .)
    R_LOWERCASE     reduce using rule 72 (E -> DECIMAL .)
    R_LOG           reduce using rule 72 (E -> DECIMAL .)
    DECIMAL         reduce using rule 72 (E -> DECIMAL .)
    ENTERO          reduce using rule 72 (E -> DECIMAL .)
    R_TRUE          reduce using rule 72 (E -> DECIMAL .)
    R_FALSE         reduce using rule 72 (E -> DECIMAL .)
    R_NOTHING       reduce using rule 72 (E -> DECIMAL .)
    CADENA          reduce using rule 72 (E -> DECIMAL .)
    PTCOMA          reduce using rule 72 (E -> DECIMAL .)
    COMA            reduce using rule 72 (E -> DECIMAL .)
    CORDER          reduce using rule 72 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 72 (E -> DECIMAL .)
    DOSPUNTITOS     reduce using rule 72 (E -> DECIMAL .)


state 51

    (73) E -> ENTERO .

    IGUAL           reduce using rule 73 (E -> ENTERO .)
    MAS             reduce using rule 73 (E -> ENTERO .)
    MENOS           reduce using rule 73 (E -> ENTERO .)
    POR             reduce using rule 73 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 73 (E -> ENTERO .)
    MODAL           reduce using rule 73 (E -> ENTERO .)
    POTENCIA        reduce using rule 73 (E -> ENTERO .)
    PARDER          reduce using rule 73 (E -> ENTERO .)
    MENQUE          reduce using rule 73 (E -> ENTERO .)
    MAYQUE          reduce using rule 73 (E -> ENTERO .)
    IGUALQUE        reduce using rule 73 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 73 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 73 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 73 (E -> ENTERO .)
    R_END           reduce using rule 73 (E -> ENTERO .)
    R_ELSE          reduce using rule 73 (E -> ENTERO .)
    AND             reduce using rule 73 (E -> ENTERO .)
    OR              reduce using rule 73 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 73 (E -> ENTERO .)
    R_IF            reduce using rule 73 (E -> ENTERO .)
    R_FOR           reduce using rule 73 (E -> ENTERO .)
    R_WHILE         reduce using rule 73 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 73 (E -> ENTERO .)
    R_LOCAL         reduce using rule 73 (E -> ENTERO .)
    R_PRINT         reduce using rule 73 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 73 (E -> ENTERO .)
    ID              reduce using rule 73 (E -> ENTERO .)
    R_PARSE         reduce using rule 73 (E -> ENTERO .)
    R_TRUNC         reduce using rule 73 (E -> ENTERO .)
    R_FLOAT         reduce using rule 73 (E -> ENTERO .)
    R_STRING        reduce using rule 73 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 73 (E -> ENTERO .)
    R_PUSH          reduce using rule 73 (E -> ENTERO .)
    R_POP           reduce using rule 73 (E -> ENTERO .)
    R_LENGTH        reduce using rule 73 (E -> ENTERO .)
    R_BREAK         reduce using rule 73 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 73 (E -> ENTERO .)
    R_RETURN        reduce using rule 73 (E -> ENTERO .)
    PARIZQ          reduce using rule 73 (E -> ENTERO .)
    R_LOG10         reduce using rule 73 (E -> ENTERO .)
    R_SIN           reduce using rule 73 (E -> ENTERO .)
    R_COS           reduce using rule 73 (E -> ENTERO .)
    R_TAN           reduce using rule 73 (E -> ENTERO .)
    R_SQRT          reduce using rule 73 (E -> ENTERO .)
    R_UPPERCASE     reduce using rule 73 (E -> ENTERO .)
    R_LOWERCASE     reduce using rule 73 (E -> ENTERO .)
    R_LOG           reduce using rule 73 (E -> ENTERO .)
    DECIMAL         reduce using rule 73 (E -> ENTERO .)
    ENTERO          reduce using rule 73 (E -> ENTERO .)
    R_TRUE          reduce using rule 73 (E -> ENTERO .)
    R_FALSE         reduce using rule 73 (E -> ENTERO .)
    R_NOTHING       reduce using rule 73 (E -> ENTERO .)
    CADENA          reduce using rule 73 (E -> ENTERO .)
    PTCOMA          reduce using rule 73 (E -> ENTERO .)
    COMA            reduce using rule 73 (E -> ENTERO .)
    CORDER          reduce using rule 73 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 73 (E -> ENTERO .)
    DOSPUNTITOS     reduce using rule 73 (E -> ENTERO .)


state 52

    (74) E -> R_TRUE .

    IGUAL           reduce using rule 74 (E -> R_TRUE .)
    MAS             reduce using rule 74 (E -> R_TRUE .)
    MENOS           reduce using rule 74 (E -> R_TRUE .)
    POR             reduce using rule 74 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 74 (E -> R_TRUE .)
    MODAL           reduce using rule 74 (E -> R_TRUE .)
    POTENCIA        reduce using rule 74 (E -> R_TRUE .)
    PARDER          reduce using rule 74 (E -> R_TRUE .)
    MENQUE          reduce using rule 74 (E -> R_TRUE .)
    MAYQUE          reduce using rule 74 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 74 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 74 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 74 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 74 (E -> R_TRUE .)
    R_END           reduce using rule 74 (E -> R_TRUE .)
    R_ELSE          reduce using rule 74 (E -> R_TRUE .)
    AND             reduce using rule 74 (E -> R_TRUE .)
    OR              reduce using rule 74 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 74 (E -> R_TRUE .)
    R_IF            reduce using rule 74 (E -> R_TRUE .)
    R_FOR           reduce using rule 74 (E -> R_TRUE .)
    R_WHILE         reduce using rule 74 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 74 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 74 (E -> R_TRUE .)
    R_PRINT         reduce using rule 74 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 74 (E -> R_TRUE .)
    ID              reduce using rule 74 (E -> R_TRUE .)
    R_PARSE         reduce using rule 74 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 74 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 74 (E -> R_TRUE .)
    R_STRING        reduce using rule 74 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 74 (E -> R_TRUE .)
    R_PUSH          reduce using rule 74 (E -> R_TRUE .)
    R_POP           reduce using rule 74 (E -> R_TRUE .)
    R_LENGTH        reduce using rule 74 (E -> R_TRUE .)
    R_BREAK         reduce using rule 74 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 74 (E -> R_TRUE .)
    R_RETURN        reduce using rule 74 (E -> R_TRUE .)
    PARIZQ          reduce using rule 74 (E -> R_TRUE .)
    R_LOG10         reduce using rule 74 (E -> R_TRUE .)
    R_SIN           reduce using rule 74 (E -> R_TRUE .)
    R_COS           reduce using rule 74 (E -> R_TRUE .)
    R_TAN           reduce using rule 74 (E -> R_TRUE .)
    R_SQRT          reduce using rule 74 (E -> R_TRUE .)
    R_UPPERCASE     reduce using rule 74 (E -> R_TRUE .)
    R_LOWERCASE     reduce using rule 74 (E -> R_TRUE .)
    R_LOG           reduce using rule 74 (E -> R_TRUE .)
    DECIMAL         reduce using rule 74 (E -> R_TRUE .)
    ENTERO          reduce using rule 74 (E -> R_TRUE .)
    R_TRUE          reduce using rule 74 (E -> R_TRUE .)
    R_FALSE         reduce using rule 74 (E -> R_TRUE .)
    R_NOTHING       reduce using rule 74 (E -> R_TRUE .)
    CADENA          reduce using rule 74 (E -> R_TRUE .)
    PTCOMA          reduce using rule 74 (E -> R_TRUE .)
    COMA            reduce using rule 74 (E -> R_TRUE .)
    CORDER          reduce using rule 74 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 74 (E -> R_TRUE .)
    DOSPUNTITOS     reduce using rule 74 (E -> R_TRUE .)


state 53

    (75) E -> R_FALSE .

    IGUAL           reduce using rule 75 (E -> R_FALSE .)
    MAS             reduce using rule 75 (E -> R_FALSE .)
    MENOS           reduce using rule 75 (E -> R_FALSE .)
    POR             reduce using rule 75 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 75 (E -> R_FALSE .)
    MODAL           reduce using rule 75 (E -> R_FALSE .)
    POTENCIA        reduce using rule 75 (E -> R_FALSE .)
    PARDER          reduce using rule 75 (E -> R_FALSE .)
    MENQUE          reduce using rule 75 (E -> R_FALSE .)
    MAYQUE          reduce using rule 75 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 75 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 75 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 75 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 75 (E -> R_FALSE .)
    R_END           reduce using rule 75 (E -> R_FALSE .)
    R_ELSE          reduce using rule 75 (E -> R_FALSE .)
    AND             reduce using rule 75 (E -> R_FALSE .)
    OR              reduce using rule 75 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 75 (E -> R_FALSE .)
    R_IF            reduce using rule 75 (E -> R_FALSE .)
    R_FOR           reduce using rule 75 (E -> R_FALSE .)
    R_WHILE         reduce using rule 75 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 75 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 75 (E -> R_FALSE .)
    R_PRINT         reduce using rule 75 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 75 (E -> R_FALSE .)
    ID              reduce using rule 75 (E -> R_FALSE .)
    R_PARSE         reduce using rule 75 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 75 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 75 (E -> R_FALSE .)
    R_STRING        reduce using rule 75 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 75 (E -> R_FALSE .)
    R_PUSH          reduce using rule 75 (E -> R_FALSE .)
    R_POP           reduce using rule 75 (E -> R_FALSE .)
    R_LENGTH        reduce using rule 75 (E -> R_FALSE .)
    R_BREAK         reduce using rule 75 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 75 (E -> R_FALSE .)
    R_RETURN        reduce using rule 75 (E -> R_FALSE .)
    PARIZQ          reduce using rule 75 (E -> R_FALSE .)
    R_LOG10         reduce using rule 75 (E -> R_FALSE .)
    R_SIN           reduce using rule 75 (E -> R_FALSE .)
    R_COS           reduce using rule 75 (E -> R_FALSE .)
    R_TAN           reduce using rule 75 (E -> R_FALSE .)
    R_SQRT          reduce using rule 75 (E -> R_FALSE .)
    R_UPPERCASE     reduce using rule 75 (E -> R_FALSE .)
    R_LOWERCASE     reduce using rule 75 (E -> R_FALSE .)
    R_LOG           reduce using rule 75 (E -> R_FALSE .)
    DECIMAL         reduce using rule 75 (E -> R_FALSE .)
    ENTERO          reduce using rule 75 (E -> R_FALSE .)
    R_TRUE          reduce using rule 75 (E -> R_FALSE .)
    R_FALSE         reduce using rule 75 (E -> R_FALSE .)
    R_NOTHING       reduce using rule 75 (E -> R_FALSE .)
    CADENA          reduce using rule 75 (E -> R_FALSE .)
    PTCOMA          reduce using rule 75 (E -> R_FALSE .)
    COMA            reduce using rule 75 (E -> R_FALSE .)
    CORDER          reduce using rule 75 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 75 (E -> R_FALSE .)
    DOSPUNTITOS     reduce using rule 75 (E -> R_FALSE .)


state 54

    (76) E -> R_NOTHING .

    IGUAL           reduce using rule 76 (E -> R_NOTHING .)
    MAS             reduce using rule 76 (E -> R_NOTHING .)
    MENOS           reduce using rule 76 (E -> R_NOTHING .)
    POR             reduce using rule 76 (E -> R_NOTHING .)
    DIVIDIDO        reduce using rule 76 (E -> R_NOTHING .)
    MODAL           reduce using rule 76 (E -> R_NOTHING .)
    POTENCIA        reduce using rule 76 (E -> R_NOTHING .)
    PARDER          reduce using rule 76 (E -> R_NOTHING .)
    MENQUE          reduce using rule 76 (E -> R_NOTHING .)
    MAYQUE          reduce using rule 76 (E -> R_NOTHING .)
    IGUALQUE        reduce using rule 76 (E -> R_NOTHING .)
    NIGUALQUE       reduce using rule 76 (E -> R_NOTHING .)
    MENORIGUAL      reduce using rule 76 (E -> R_NOTHING .)
    MAYORIGUAL      reduce using rule 76 (E -> R_NOTHING .)
    R_END           reduce using rule 76 (E -> R_NOTHING .)
    R_ELSE          reduce using rule 76 (E -> R_NOTHING .)
    AND             reduce using rule 76 (E -> R_NOTHING .)
    OR              reduce using rule 76 (E -> R_NOTHING .)
    R_ELSEIF        reduce using rule 76 (E -> R_NOTHING .)
    R_IF            reduce using rule 76 (E -> R_NOTHING .)
    R_FOR           reduce using rule 76 (E -> R_NOTHING .)
    R_WHILE         reduce using rule 76 (E -> R_NOTHING .)
    R_GLOBAL        reduce using rule 76 (E -> R_NOTHING .)
    R_LOCAL         reduce using rule 76 (E -> R_NOTHING .)
    R_PRINT         reduce using rule 76 (E -> R_NOTHING .)
    R_PRINTLN       reduce using rule 76 (E -> R_NOTHING .)
    ID              reduce using rule 76 (E -> R_NOTHING .)
    R_PARSE         reduce using rule 76 (E -> R_NOTHING .)
    R_TRUNC         reduce using rule 76 (E -> R_NOTHING .)
    R_FLOAT         reduce using rule 76 (E -> R_NOTHING .)
    R_STRING        reduce using rule 76 (E -> R_NOTHING .)
    R_TYPEOF        reduce using rule 76 (E -> R_NOTHING .)
    R_PUSH          reduce using rule 76 (E -> R_NOTHING .)
    R_POP           reduce using rule 76 (E -> R_NOTHING .)
    R_LENGTH        reduce using rule 76 (E -> R_NOTHING .)
    R_BREAK         reduce using rule 76 (E -> R_NOTHING .)
    R_CONTINUE      reduce using rule 76 (E -> R_NOTHING .)
    R_RETURN        reduce using rule 76 (E -> R_NOTHING .)
    PARIZQ          reduce using rule 76 (E -> R_NOTHING .)
    R_LOG10         reduce using rule 76 (E -> R_NOTHING .)
    R_SIN           reduce using rule 76 (E -> R_NOTHING .)
    R_COS           reduce using rule 76 (E -> R_NOTHING .)
    R_TAN           reduce using rule 76 (E -> R_NOTHING .)
    R_SQRT          reduce using rule 76 (E -> R_NOTHING .)
    R_UPPERCASE     reduce using rule 76 (E -> R_NOTHING .)
    R_LOWERCASE     reduce using rule 76 (E -> R_NOTHING .)
    R_LOG           reduce using rule 76 (E -> R_NOTHING .)
    DECIMAL         reduce using rule 76 (E -> R_NOTHING .)
    ENTERO          reduce using rule 76 (E -> R_NOTHING .)
    R_TRUE          reduce using rule 76 (E -> R_NOTHING .)
    R_FALSE         reduce using rule 76 (E -> R_NOTHING .)
    R_NOTHING       reduce using rule 76 (E -> R_NOTHING .)
    CADENA          reduce using rule 76 (E -> R_NOTHING .)
    PTCOMA          reduce using rule 76 (E -> R_NOTHING .)
    COMA            reduce using rule 76 (E -> R_NOTHING .)
    CORDER          reduce using rule 76 (E -> R_NOTHING .)
    DOSPUNTOS       reduce using rule 76 (E -> R_NOTHING .)
    DOSPUNTITOS     reduce using rule 76 (E -> R_NOTHING .)


state 55

    (77) E -> CADENA .

    IGUAL           reduce using rule 77 (E -> CADENA .)
    MAS             reduce using rule 77 (E -> CADENA .)
    MENOS           reduce using rule 77 (E -> CADENA .)
    POR             reduce using rule 77 (E -> CADENA .)
    DIVIDIDO        reduce using rule 77 (E -> CADENA .)
    MODAL           reduce using rule 77 (E -> CADENA .)
    POTENCIA        reduce using rule 77 (E -> CADENA .)
    PARDER          reduce using rule 77 (E -> CADENA .)
    MENQUE          reduce using rule 77 (E -> CADENA .)
    MAYQUE          reduce using rule 77 (E -> CADENA .)
    IGUALQUE        reduce using rule 77 (E -> CADENA .)
    NIGUALQUE       reduce using rule 77 (E -> CADENA .)
    MENORIGUAL      reduce using rule 77 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 77 (E -> CADENA .)
    R_END           reduce using rule 77 (E -> CADENA .)
    R_ELSE          reduce using rule 77 (E -> CADENA .)
    AND             reduce using rule 77 (E -> CADENA .)
    OR              reduce using rule 77 (E -> CADENA .)
    R_ELSEIF        reduce using rule 77 (E -> CADENA .)
    R_IF            reduce using rule 77 (E -> CADENA .)
    R_FOR           reduce using rule 77 (E -> CADENA .)
    R_WHILE         reduce using rule 77 (E -> CADENA .)
    R_GLOBAL        reduce using rule 77 (E -> CADENA .)
    R_LOCAL         reduce using rule 77 (E -> CADENA .)
    R_PRINT         reduce using rule 77 (E -> CADENA .)
    R_PRINTLN       reduce using rule 77 (E -> CADENA .)
    ID              reduce using rule 77 (E -> CADENA .)
    R_PARSE         reduce using rule 77 (E -> CADENA .)
    R_TRUNC         reduce using rule 77 (E -> CADENA .)
    R_FLOAT         reduce using rule 77 (E -> CADENA .)
    R_STRING        reduce using rule 77 (E -> CADENA .)
    R_TYPEOF        reduce using rule 77 (E -> CADENA .)
    R_PUSH          reduce using rule 77 (E -> CADENA .)
    R_POP           reduce using rule 77 (E -> CADENA .)
    R_LENGTH        reduce using rule 77 (E -> CADENA .)
    R_BREAK         reduce using rule 77 (E -> CADENA .)
    R_CONTINUE      reduce using rule 77 (E -> CADENA .)
    R_RETURN        reduce using rule 77 (E -> CADENA .)
    PARIZQ          reduce using rule 77 (E -> CADENA .)
    R_LOG10         reduce using rule 77 (E -> CADENA .)
    R_SIN           reduce using rule 77 (E -> CADENA .)
    R_COS           reduce using rule 77 (E -> CADENA .)
    R_TAN           reduce using rule 77 (E -> CADENA .)
    R_SQRT          reduce using rule 77 (E -> CADENA .)
    R_UPPERCASE     reduce using rule 77 (E -> CADENA .)
    R_LOWERCASE     reduce using rule 77 (E -> CADENA .)
    R_LOG           reduce using rule 77 (E -> CADENA .)
    DECIMAL         reduce using rule 77 (E -> CADENA .)
    ENTERO          reduce using rule 77 (E -> CADENA .)
    R_TRUE          reduce using rule 77 (E -> CADENA .)
    R_FALSE         reduce using rule 77 (E -> CADENA .)
    R_NOTHING       reduce using rule 77 (E -> CADENA .)
    CADENA          reduce using rule 77 (E -> CADENA .)
    PTCOMA          reduce using rule 77 (E -> CADENA .)
    COMA            reduce using rule 77 (E -> CADENA .)
    CORDER          reduce using rule 77 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 77 (E -> CADENA .)
    DOSPUNTITOS     reduce using rule 77 (E -> CADENA .)


state 56

    (79) E -> ACCESOS .
    (162) ACCESOS -> ACCESOS . PUNTO ACCESO

    IGUAL           reduce using rule 79 (E -> ACCESOS .)
    MAS             reduce using rule 79 (E -> ACCESOS .)
    MENOS           reduce using rule 79 (E -> ACCESOS .)
    POR             reduce using rule 79 (E -> ACCESOS .)
    DIVIDIDO        reduce using rule 79 (E -> ACCESOS .)
    MODAL           reduce using rule 79 (E -> ACCESOS .)
    POTENCIA        reduce using rule 79 (E -> ACCESOS .)
    PARDER          reduce using rule 79 (E -> ACCESOS .)
    MENQUE          reduce using rule 79 (E -> ACCESOS .)
    MAYQUE          reduce using rule 79 (E -> ACCESOS .)
    IGUALQUE        reduce using rule 79 (E -> ACCESOS .)
    NIGUALQUE       reduce using rule 79 (E -> ACCESOS .)
    MENORIGUAL      reduce using rule 79 (E -> ACCESOS .)
    MAYORIGUAL      reduce using rule 79 (E -> ACCESOS .)
    R_END           reduce using rule 79 (E -> ACCESOS .)
    R_ELSE          reduce using rule 79 (E -> ACCESOS .)
    AND             reduce using rule 79 (E -> ACCESOS .)
    OR              reduce using rule 79 (E -> ACCESOS .)
    R_ELSEIF        reduce using rule 79 (E -> ACCESOS .)
    R_IF            reduce using rule 79 (E -> ACCESOS .)
    R_FOR           reduce using rule 79 (E -> ACCESOS .)
    R_WHILE         reduce using rule 79 (E -> ACCESOS .)
    R_GLOBAL        reduce using rule 79 (E -> ACCESOS .)
    R_LOCAL         reduce using rule 79 (E -> ACCESOS .)
    R_PRINT         reduce using rule 79 (E -> ACCESOS .)
    R_PRINTLN       reduce using rule 79 (E -> ACCESOS .)
    ID              reduce using rule 79 (E -> ACCESOS .)
    R_PARSE         reduce using rule 79 (E -> ACCESOS .)
    R_TRUNC         reduce using rule 79 (E -> ACCESOS .)
    R_FLOAT         reduce using rule 79 (E -> ACCESOS .)
    R_STRING        reduce using rule 79 (E -> ACCESOS .)
    R_TYPEOF        reduce using rule 79 (E -> ACCESOS .)
    R_PUSH          reduce using rule 79 (E -> ACCESOS .)
    R_POP           reduce using rule 79 (E -> ACCESOS .)
    R_LENGTH        reduce using rule 79 (E -> ACCESOS .)
    R_BREAK         reduce using rule 79 (E -> ACCESOS .)
    R_CONTINUE      reduce using rule 79 (E -> ACCESOS .)
    R_RETURN        reduce using rule 79 (E -> ACCESOS .)
    PARIZQ          reduce using rule 79 (E -> ACCESOS .)
    R_LOG10         reduce using rule 79 (E -> ACCESOS .)
    R_SIN           reduce using rule 79 (E -> ACCESOS .)
    R_COS           reduce using rule 79 (E -> ACCESOS .)
    R_TAN           reduce using rule 79 (E -> ACCESOS .)
    R_SQRT          reduce using rule 79 (E -> ACCESOS .)
    R_UPPERCASE     reduce using rule 79 (E -> ACCESOS .)
    R_LOWERCASE     reduce using rule 79 (E -> ACCESOS .)
    R_LOG           reduce using rule 79 (E -> ACCESOS .)
    DECIMAL         reduce using rule 79 (E -> ACCESOS .)
    ENTERO          reduce using rule 79 (E -> ACCESOS .)
    R_TRUE          reduce using rule 79 (E -> ACCESOS .)
    R_FALSE         reduce using rule 79 (E -> ACCESOS .)
    R_NOTHING       reduce using rule 79 (E -> ACCESOS .)
    CADENA          reduce using rule 79 (E -> ACCESOS .)
    PTCOMA          reduce using rule 79 (E -> ACCESOS .)
    COMA            reduce using rule 79 (E -> ACCESOS .)
    CORDER          reduce using rule 79 (E -> ACCESOS .)
    DOSPUNTOS       reduce using rule 79 (E -> ACCESOS .)
    DOSPUNTITOS     reduce using rule 79 (E -> ACCESOS .)
    PUNTO           shift and go to state 116


state 57

    (163) ACCESOS -> ACCESO .

    PUNTO           reduce using rule 163 (ACCESOS -> ACCESO .)
    IGUAL           reduce using rule 163 (ACCESOS -> ACCESO .)
    MAS             reduce using rule 163 (ACCESOS -> ACCESO .)
    MENOS           reduce using rule 163 (ACCESOS -> ACCESO .)
    POR             reduce using rule 163 (ACCESOS -> ACCESO .)
    DIVIDIDO        reduce using rule 163 (ACCESOS -> ACCESO .)
    MODAL           reduce using rule 163 (ACCESOS -> ACCESO .)
    POTENCIA        reduce using rule 163 (ACCESOS -> ACCESO .)
    PARDER          reduce using rule 163 (ACCESOS -> ACCESO .)
    MENQUE          reduce using rule 163 (ACCESOS -> ACCESO .)
    MAYQUE          reduce using rule 163 (ACCESOS -> ACCESO .)
    IGUALQUE        reduce using rule 163 (ACCESOS -> ACCESO .)
    NIGUALQUE       reduce using rule 163 (ACCESOS -> ACCESO .)
    MENORIGUAL      reduce using rule 163 (ACCESOS -> ACCESO .)
    MAYORIGUAL      reduce using rule 163 (ACCESOS -> ACCESO .)
    R_END           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_ELSE          reduce using rule 163 (ACCESOS -> ACCESO .)
    AND             reduce using rule 163 (ACCESOS -> ACCESO .)
    OR              reduce using rule 163 (ACCESOS -> ACCESO .)
    R_ELSEIF        reduce using rule 163 (ACCESOS -> ACCESO .)
    R_IF            reduce using rule 163 (ACCESOS -> ACCESO .)
    R_FOR           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_WHILE         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_GLOBAL        reduce using rule 163 (ACCESOS -> ACCESO .)
    R_LOCAL         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_PRINT         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_PRINTLN       reduce using rule 163 (ACCESOS -> ACCESO .)
    ID              reduce using rule 163 (ACCESOS -> ACCESO .)
    R_PARSE         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_TRUNC         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_FLOAT         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_STRING        reduce using rule 163 (ACCESOS -> ACCESO .)
    R_TYPEOF        reduce using rule 163 (ACCESOS -> ACCESO .)
    R_PUSH          reduce using rule 163 (ACCESOS -> ACCESO .)
    R_POP           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_LENGTH        reduce using rule 163 (ACCESOS -> ACCESO .)
    R_BREAK         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_CONTINUE      reduce using rule 163 (ACCESOS -> ACCESO .)
    R_RETURN        reduce using rule 163 (ACCESOS -> ACCESO .)
    PARIZQ          reduce using rule 163 (ACCESOS -> ACCESO .)
    R_LOG10         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_SIN           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_COS           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_TAN           reduce using rule 163 (ACCESOS -> ACCESO .)
    R_SQRT          reduce using rule 163 (ACCESOS -> ACCESO .)
    R_UPPERCASE     reduce using rule 163 (ACCESOS -> ACCESO .)
    R_LOWERCASE     reduce using rule 163 (ACCESOS -> ACCESO .)
    R_LOG           reduce using rule 163 (ACCESOS -> ACCESO .)
    DECIMAL         reduce using rule 163 (ACCESOS -> ACCESO .)
    ENTERO          reduce using rule 163 (ACCESOS -> ACCESO .)
    R_TRUE          reduce using rule 163 (ACCESOS -> ACCESO .)
    R_FALSE         reduce using rule 163 (ACCESOS -> ACCESO .)
    R_NOTHING       reduce using rule 163 (ACCESOS -> ACCESO .)
    CADENA          reduce using rule 163 (ACCESOS -> ACCESO .)
    PTCOMA          reduce using rule 163 (ACCESOS -> ACCESO .)
    COMA            reduce using rule 163 (ACCESOS -> ACCESO .)
    CORDER          reduce using rule 163 (ACCESOS -> ACCESO .)
    DOSPUNTOS       reduce using rule 163 (ACCESOS -> ACCESO .)
    DOSPUNTITOS     reduce using rule 163 (ACCESOS -> ACCESO .)


state 58

    (1) INICIO -> INICIO INIT .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_IF            reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO INIT .)
    ID              reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRING        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_POP           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LENGTH        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_BREAK         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_CONTINUE      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_RETURN        reduce using rule 1 (INICIO -> INICIO INIT .)
    MENOS           reduce using rule 1 (INICIO -> INICIO INIT .)
    PARIZQ          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOG10         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_SIN           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_COS           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TAN           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_SQRT          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_UPPERCASE     reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOWERCASE     reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOG           reduce using rule 1 (INICIO -> INICIO INIT .)
    DECIMAL         reduce using rule 1 (INICIO -> INICIO INIT .)
    ENTERO          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TRUE          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FALSE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_NOTHING       reduce using rule 1 (INICIO -> INICIO INIT .)
    CADENA          reduce using rule 1 (INICIO -> INICIO INIT .)
    $end            reduce using rule 1 (INICIO -> INICIO INIT .)


state 59

    (6) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRING        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LENGTH        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_BREAK         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_CONTINUE      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    MENOS           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PARIZQ          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOG10         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_SIN           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_COS           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TAN           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_SQRT          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_UPPERCASE     reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOWERCASE     reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOG           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    DECIMAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ENTERO          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TRUE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FALSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_NOTHING       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    CADENA          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 60

    (110) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA

    PARIZQ          shift and go to state 117


state 61

    (54) LLAMADAS -> ID PARIZQ . LISTAS PARDER
    (55) LLAMADAS -> ID PARIZQ . PARDER
    (32) LISTAS -> . LISTAS COMA LISTA
    (33) LISTAS -> . LISTA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARDER          shift and go to state 119
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTAS                         shift and go to state 118
    LISTA                          shift and go to state 120
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 62

    (81) E -> ID ARRAYS .
    (82) ARRAYS -> ARRAYS . ARRAY
    (84) ARRAY -> . CORIZQ E CORDER

    IGUAL           reduce using rule 81 (E -> ID ARRAYS .)
    MAS             reduce using rule 81 (E -> ID ARRAYS .)
    MENOS           reduce using rule 81 (E -> ID ARRAYS .)
    POR             reduce using rule 81 (E -> ID ARRAYS .)
    DIVIDIDO        reduce using rule 81 (E -> ID ARRAYS .)
    MODAL           reduce using rule 81 (E -> ID ARRAYS .)
    POTENCIA        reduce using rule 81 (E -> ID ARRAYS .)
    PARDER          reduce using rule 81 (E -> ID ARRAYS .)
    MENQUE          reduce using rule 81 (E -> ID ARRAYS .)
    MAYQUE          reduce using rule 81 (E -> ID ARRAYS .)
    IGUALQUE        reduce using rule 81 (E -> ID ARRAYS .)
    NIGUALQUE       reduce using rule 81 (E -> ID ARRAYS .)
    MENORIGUAL      reduce using rule 81 (E -> ID ARRAYS .)
    MAYORIGUAL      reduce using rule 81 (E -> ID ARRAYS .)
    R_END           reduce using rule 81 (E -> ID ARRAYS .)
    R_ELSE          reduce using rule 81 (E -> ID ARRAYS .)
    AND             reduce using rule 81 (E -> ID ARRAYS .)
    OR              reduce using rule 81 (E -> ID ARRAYS .)
    R_ELSEIF        reduce using rule 81 (E -> ID ARRAYS .)
    R_IF            reduce using rule 81 (E -> ID ARRAYS .)
    R_FOR           reduce using rule 81 (E -> ID ARRAYS .)
    R_WHILE         reduce using rule 81 (E -> ID ARRAYS .)
    R_GLOBAL        reduce using rule 81 (E -> ID ARRAYS .)
    R_LOCAL         reduce using rule 81 (E -> ID ARRAYS .)
    R_PRINT         reduce using rule 81 (E -> ID ARRAYS .)
    R_PRINTLN       reduce using rule 81 (E -> ID ARRAYS .)
    ID              reduce using rule 81 (E -> ID ARRAYS .)
    R_PARSE         reduce using rule 81 (E -> ID ARRAYS .)
    R_TRUNC         reduce using rule 81 (E -> ID ARRAYS .)
    R_FLOAT         reduce using rule 81 (E -> ID ARRAYS .)
    R_STRING        reduce using rule 81 (E -> ID ARRAYS .)
    R_TYPEOF        reduce using rule 81 (E -> ID ARRAYS .)
    R_PUSH          reduce using rule 81 (E -> ID ARRAYS .)
    R_POP           reduce using rule 81 (E -> ID ARRAYS .)
    R_LENGTH        reduce using rule 81 (E -> ID ARRAYS .)
    R_BREAK         reduce using rule 81 (E -> ID ARRAYS .)
    R_CONTINUE      reduce using rule 81 (E -> ID ARRAYS .)
    R_RETURN        reduce using rule 81 (E -> ID ARRAYS .)
    PARIZQ          reduce using rule 81 (E -> ID ARRAYS .)
    R_LOG10         reduce using rule 81 (E -> ID ARRAYS .)
    R_SIN           reduce using rule 81 (E -> ID ARRAYS .)
    R_COS           reduce using rule 81 (E -> ID ARRAYS .)
    R_TAN           reduce using rule 81 (E -> ID ARRAYS .)
    R_SQRT          reduce using rule 81 (E -> ID ARRAYS .)
    R_UPPERCASE     reduce using rule 81 (E -> ID ARRAYS .)
    R_LOWERCASE     reduce using rule 81 (E -> ID ARRAYS .)
    R_LOG           reduce using rule 81 (E -> ID ARRAYS .)
    DECIMAL         reduce using rule 81 (E -> ID ARRAYS .)
    ENTERO          reduce using rule 81 (E -> ID ARRAYS .)
    R_TRUE          reduce using rule 81 (E -> ID ARRAYS .)
    R_FALSE         reduce using rule 81 (E -> ID ARRAYS .)
    R_NOTHING       reduce using rule 81 (E -> ID ARRAYS .)
    CADENA          reduce using rule 81 (E -> ID ARRAYS .)
    PTCOMA          reduce using rule 81 (E -> ID ARRAYS .)
    COMA            reduce using rule 81 (E -> ID ARRAYS .)
    CORDER          reduce using rule 81 (E -> ID ARRAYS .)
    DOSPUNTOS       reduce using rule 81 (E -> ID ARRAYS .)
    DOSPUNTITOS     reduce using rule 81 (E -> ID ARRAYS .)
    CORIZQ          shift and go to state 64

    ARRAY                          shift and go to state 121

state 63

    (83) ARRAYS -> ARRAY .

    CORIZQ          reduce using rule 83 (ARRAYS -> ARRAY .)
    IGUAL           reduce using rule 83 (ARRAYS -> ARRAY .)
    MAS             reduce using rule 83 (ARRAYS -> ARRAY .)
    MENOS           reduce using rule 83 (ARRAYS -> ARRAY .)
    POR             reduce using rule 83 (ARRAYS -> ARRAY .)
    DIVIDIDO        reduce using rule 83 (ARRAYS -> ARRAY .)
    MODAL           reduce using rule 83 (ARRAYS -> ARRAY .)
    POTENCIA        reduce using rule 83 (ARRAYS -> ARRAY .)
    PARDER          reduce using rule 83 (ARRAYS -> ARRAY .)
    MENQUE          reduce using rule 83 (ARRAYS -> ARRAY .)
    MAYQUE          reduce using rule 83 (ARRAYS -> ARRAY .)
    IGUALQUE        reduce using rule 83 (ARRAYS -> ARRAY .)
    NIGUALQUE       reduce using rule 83 (ARRAYS -> ARRAY .)
    MENORIGUAL      reduce using rule 83 (ARRAYS -> ARRAY .)
    MAYORIGUAL      reduce using rule 83 (ARRAYS -> ARRAY .)
    R_END           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_ELSE          reduce using rule 83 (ARRAYS -> ARRAY .)
    AND             reduce using rule 83 (ARRAYS -> ARRAY .)
    OR              reduce using rule 83 (ARRAYS -> ARRAY .)
    R_ELSEIF        reduce using rule 83 (ARRAYS -> ARRAY .)
    R_IF            reduce using rule 83 (ARRAYS -> ARRAY .)
    R_FOR           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_WHILE         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_GLOBAL        reduce using rule 83 (ARRAYS -> ARRAY .)
    R_LOCAL         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_PRINT         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_PRINTLN       reduce using rule 83 (ARRAYS -> ARRAY .)
    ID              reduce using rule 83 (ARRAYS -> ARRAY .)
    R_PARSE         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_TRUNC         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_FLOAT         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_STRING        reduce using rule 83 (ARRAYS -> ARRAY .)
    R_TYPEOF        reduce using rule 83 (ARRAYS -> ARRAY .)
    R_PUSH          reduce using rule 83 (ARRAYS -> ARRAY .)
    R_POP           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_LENGTH        reduce using rule 83 (ARRAYS -> ARRAY .)
    R_BREAK         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_CONTINUE      reduce using rule 83 (ARRAYS -> ARRAY .)
    R_RETURN        reduce using rule 83 (ARRAYS -> ARRAY .)
    PARIZQ          reduce using rule 83 (ARRAYS -> ARRAY .)
    R_LOG10         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_SIN           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_COS           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_TAN           reduce using rule 83 (ARRAYS -> ARRAY .)
    R_SQRT          reduce using rule 83 (ARRAYS -> ARRAY .)
    R_UPPERCASE     reduce using rule 83 (ARRAYS -> ARRAY .)
    R_LOWERCASE     reduce using rule 83 (ARRAYS -> ARRAY .)
    R_LOG           reduce using rule 83 (ARRAYS -> ARRAY .)
    DECIMAL         reduce using rule 83 (ARRAYS -> ARRAY .)
    ENTERO          reduce using rule 83 (ARRAYS -> ARRAY .)
    R_TRUE          reduce using rule 83 (ARRAYS -> ARRAY .)
    R_FALSE         reduce using rule 83 (ARRAYS -> ARRAY .)
    R_NOTHING       reduce using rule 83 (ARRAYS -> ARRAY .)
    CADENA          reduce using rule 83 (ARRAYS -> ARRAY .)
    PTCOMA          reduce using rule 83 (ARRAYS -> ARRAY .)
    COMA            reduce using rule 83 (ARRAYS -> ARRAY .)
    CORDER          reduce using rule 83 (ARRAYS -> ARRAY .)
    DOSPUNTOS       reduce using rule 83 (ARRAYS -> ARRAY .)
    DOSPUNTITOS     reduce using rule 83 (ARRAYS -> ARRAY .)


state 64

    (84) ARRAY -> CORIZQ . E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 122
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 65

    (63) E -> PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 123
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 66

    (78) E -> LLAMADAS .

    PARDER          reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)
    MENQUE          reduce using rule 78 (E -> LLAMADAS .)
    MAYQUE          reduce using rule 78 (E -> LLAMADAS .)
    IGUALQUE        reduce using rule 78 (E -> LLAMADAS .)
    NIGUALQUE       reduce using rule 78 (E -> LLAMADAS .)
    MENORIGUAL      reduce using rule 78 (E -> LLAMADAS .)
    MAYORIGUAL      reduce using rule 78 (E -> LLAMADAS .)
    R_END           reduce using rule 78 (E -> LLAMADAS .)
    R_ELSE          reduce using rule 78 (E -> LLAMADAS .)
    AND             reduce using rule 78 (E -> LLAMADAS .)
    OR              reduce using rule 78 (E -> LLAMADAS .)
    R_ELSEIF        reduce using rule 78 (E -> LLAMADAS .)
    R_IF            reduce using rule 78 (E -> LLAMADAS .)
    R_FOR           reduce using rule 78 (E -> LLAMADAS .)
    R_WHILE         reduce using rule 78 (E -> LLAMADAS .)
    R_GLOBAL        reduce using rule 78 (E -> LLAMADAS .)
    R_LOCAL         reduce using rule 78 (E -> LLAMADAS .)
    R_PRINT         reduce using rule 78 (E -> LLAMADAS .)
    R_PRINTLN       reduce using rule 78 (E -> LLAMADAS .)
    ID              reduce using rule 78 (E -> LLAMADAS .)
    R_PARSE         reduce using rule 78 (E -> LLAMADAS .)
    R_TRUNC         reduce using rule 78 (E -> LLAMADAS .)
    R_FLOAT         reduce using rule 78 (E -> LLAMADAS .)
    R_STRING        reduce using rule 78 (E -> LLAMADAS .)
    R_TYPEOF        reduce using rule 78 (E -> LLAMADAS .)
    R_PUSH          reduce using rule 78 (E -> LLAMADAS .)
    R_POP           reduce using rule 78 (E -> LLAMADAS .)
    R_LENGTH        reduce using rule 78 (E -> LLAMADAS .)
    R_BREAK         reduce using rule 78 (E -> LLAMADAS .)
    R_CONTINUE      reduce using rule 78 (E -> LLAMADAS .)
    R_RETURN        reduce using rule 78 (E -> LLAMADAS .)
    PARIZQ          reduce using rule 78 (E -> LLAMADAS .)
    R_LOG10         reduce using rule 78 (E -> LLAMADAS .)
    R_SIN           reduce using rule 78 (E -> LLAMADAS .)
    R_COS           reduce using rule 78 (E -> LLAMADAS .)
    R_TAN           reduce using rule 78 (E -> LLAMADAS .)
    R_SQRT          reduce using rule 78 (E -> LLAMADAS .)
    R_UPPERCASE     reduce using rule 78 (E -> LLAMADAS .)
    R_LOWERCASE     reduce using rule 78 (E -> LLAMADAS .)
    R_LOG           reduce using rule 78 (E -> LLAMADAS .)
    DECIMAL         reduce using rule 78 (E -> LLAMADAS .)
    ENTERO          reduce using rule 78 (E -> LLAMADAS .)
    R_TRUE          reduce using rule 78 (E -> LLAMADAS .)
    R_FALSE         reduce using rule 78 (E -> LLAMADAS .)
    R_NOTHING       reduce using rule 78 (E -> LLAMADAS .)
    CADENA          reduce using rule 78 (E -> LLAMADAS .)
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    PTCOMA          reduce using rule 78 (E -> LLAMADAS .)
    COMA            reduce using rule 78 (E -> LLAMADAS .)
    CORDER          reduce using rule 78 (E -> LLAMADAS .)
    DOSPUNTOS       reduce using rule 78 (E -> LLAMADAS .)
    DOSPUNTITOS     reduce using rule 78 (E -> LLAMADAS .)


state 67

    (80) E -> ID .
    (81) E -> ID . ARRAYS
    (54) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (55) LLAMADAS -> ID . PARIZQ PARDER
    (164) ACCESO -> ID .
    (82) ARRAYS -> . ARRAYS ARRAY
    (83) ARRAYS -> . ARRAY
    (84) ARRAY -> . CORIZQ E CORDER

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! reduce/reduce conflict for PARDER resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MAS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MENOS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MODAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MENQUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MAYQUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for IGUALQUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for NIGUALQUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_END resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_ELSE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_ELSEIF resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_IF resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FOR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_WHILE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_GLOBAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOCAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PRINT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PRINTLN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PARSE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TRUNC resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FLOAT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_STRING resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TYPEOF resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PUSH resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_POP resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LENGTH resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_BREAK resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_CONTINUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_RETURN resolved using rule 80 (E -> ID .)
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! reduce/reduce conflict for R_LOG10 resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_SIN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_COS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TAN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_SQRT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_UPPERCASE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOWERCASE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOG resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for ENTERO resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TRUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FALSE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_NOTHING resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for CADENA resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for IGUAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for PTCOMA resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for COMA resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for CORDER resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DOSPUNTOS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DOSPUNTITOS resolved using rule 80 (E -> ID .)
    PARDER          reduce using rule 80 (E -> ID .)
    MAS             reduce using rule 80 (E -> ID .)
    MENOS           reduce using rule 80 (E -> ID .)
    POR             reduce using rule 80 (E -> ID .)
    DIVIDIDO        reduce using rule 80 (E -> ID .)
    MODAL           reduce using rule 80 (E -> ID .)
    POTENCIA        reduce using rule 80 (E -> ID .)
    MENQUE          reduce using rule 80 (E -> ID .)
    MAYQUE          reduce using rule 80 (E -> ID .)
    IGUALQUE        reduce using rule 80 (E -> ID .)
    NIGUALQUE       reduce using rule 80 (E -> ID .)
    MENORIGUAL      reduce using rule 80 (E -> ID .)
    MAYORIGUAL      reduce using rule 80 (E -> ID .)
    R_END           reduce using rule 80 (E -> ID .)
    R_ELSE          reduce using rule 80 (E -> ID .)
    AND             reduce using rule 80 (E -> ID .)
    OR              reduce using rule 80 (E -> ID .)
    R_ELSEIF        reduce using rule 80 (E -> ID .)
    R_IF            reduce using rule 80 (E -> ID .)
    R_FOR           reduce using rule 80 (E -> ID .)
    R_WHILE         reduce using rule 80 (E -> ID .)
    R_GLOBAL        reduce using rule 80 (E -> ID .)
    R_LOCAL         reduce using rule 80 (E -> ID .)
    R_PRINT         reduce using rule 80 (E -> ID .)
    R_PRINTLN       reduce using rule 80 (E -> ID .)
    ID              reduce using rule 80 (E -> ID .)
    R_PARSE         reduce using rule 80 (E -> ID .)
    R_TRUNC         reduce using rule 80 (E -> ID .)
    R_FLOAT         reduce using rule 80 (E -> ID .)
    R_STRING        reduce using rule 80 (E -> ID .)
    R_TYPEOF        reduce using rule 80 (E -> ID .)
    R_PUSH          reduce using rule 80 (E -> ID .)
    R_POP           reduce using rule 80 (E -> ID .)
    R_LENGTH        reduce using rule 80 (E -> ID .)
    R_BREAK         reduce using rule 80 (E -> ID .)
    R_CONTINUE      reduce using rule 80 (E -> ID .)
    R_RETURN        reduce using rule 80 (E -> ID .)
    R_LOG10         reduce using rule 80 (E -> ID .)
    R_SIN           reduce using rule 80 (E -> ID .)
    R_COS           reduce using rule 80 (E -> ID .)
    R_TAN           reduce using rule 80 (E -> ID .)
    R_SQRT          reduce using rule 80 (E -> ID .)
    R_UPPERCASE     reduce using rule 80 (E -> ID .)
    R_LOWERCASE     reduce using rule 80 (E -> ID .)
    R_LOG           reduce using rule 80 (E -> ID .)
    DECIMAL         reduce using rule 80 (E -> ID .)
    ENTERO          reduce using rule 80 (E -> ID .)
    R_TRUE          reduce using rule 80 (E -> ID .)
    R_FALSE         reduce using rule 80 (E -> ID .)
    R_NOTHING       reduce using rule 80 (E -> ID .)
    CADENA          reduce using rule 80 (E -> ID .)
    IGUAL           reduce using rule 80 (E -> ID .)
    PTCOMA          reduce using rule 80 (E -> ID .)
    COMA            reduce using rule 80 (E -> ID .)
    CORDER          reduce using rule 80 (E -> ID .)
    DOSPUNTOS       reduce using rule 80 (E -> ID .)
    DOSPUNTITOS     reduce using rule 80 (E -> ID .)
    PARIZQ          shift and go to state 61
    PUNTO           reduce using rule 164 (ACCESO -> ID .)
    CORIZQ          shift and go to state 64

  ! PARIZQ          [ reduce using rule 80 (E -> ID .) ]
  ! PARDER          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MAS             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MENOS           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POR             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DIVIDIDO        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MODAL           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POTENCIA        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MENQUE          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MAYQUE          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! IGUALQUE        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! NIGUALQUE       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MENORIGUAL      [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MAYORIGUAL      [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_END           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_ELSE          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! AND             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! OR              [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_ELSEIF        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_IF            [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FOR           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_WHILE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_GLOBAL        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOCAL         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PRINT         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PRINTLN       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! ID              [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PARSE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TRUNC         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FLOAT         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_STRING        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TYPEOF        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PUSH          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_POP           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LENGTH        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_BREAK         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_CONTINUE      [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_RETURN        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! PARIZQ          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOG10         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_SIN           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_COS           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TAN           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_SQRT          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_UPPERCASE     [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOWERCASE     [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOG           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DECIMAL         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! ENTERO          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TRUE          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FALSE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_NOTHING       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! CADENA          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! IGUAL           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! PTCOMA          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! COMA            [ reduce using rule 164 (ACCESO -> ID .) ]
  ! CORDER          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DOSPUNTOS       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DOSPUNTITOS     [ reduce using rule 164 (ACCESO -> ID .) ]

    ARRAYS                         shift and go to state 62
    ARRAY                          shift and go to state 63

state 68

    (85) E -> NATIVAS .

    PARDER          reduce using rule 85 (E -> NATIVAS .)
    MAS             reduce using rule 85 (E -> NATIVAS .)
    MENOS           reduce using rule 85 (E -> NATIVAS .)
    POR             reduce using rule 85 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 85 (E -> NATIVAS .)
    MODAL           reduce using rule 85 (E -> NATIVAS .)
    POTENCIA        reduce using rule 85 (E -> NATIVAS .)
    MENQUE          reduce using rule 85 (E -> NATIVAS .)
    MAYQUE          reduce using rule 85 (E -> NATIVAS .)
    IGUALQUE        reduce using rule 85 (E -> NATIVAS .)
    NIGUALQUE       reduce using rule 85 (E -> NATIVAS .)
    MENORIGUAL      reduce using rule 85 (E -> NATIVAS .)
    MAYORIGUAL      reduce using rule 85 (E -> NATIVAS .)
    R_END           reduce using rule 85 (E -> NATIVAS .)
    R_ELSE          reduce using rule 85 (E -> NATIVAS .)
    AND             reduce using rule 85 (E -> NATIVAS .)
    OR              reduce using rule 85 (E -> NATIVAS .)
    R_ELSEIF        reduce using rule 85 (E -> NATIVAS .)
    R_IF            reduce using rule 85 (E -> NATIVAS .)
    R_FOR           reduce using rule 85 (E -> NATIVAS .)
    R_WHILE         reduce using rule 85 (E -> NATIVAS .)
    R_GLOBAL        reduce using rule 85 (E -> NATIVAS .)
    R_LOCAL         reduce using rule 85 (E -> NATIVAS .)
    R_PRINT         reduce using rule 85 (E -> NATIVAS .)
    R_PRINTLN       reduce using rule 85 (E -> NATIVAS .)
    ID              reduce using rule 85 (E -> NATIVAS .)
    R_PARSE         reduce using rule 85 (E -> NATIVAS .)
    R_TRUNC         reduce using rule 85 (E -> NATIVAS .)
    R_FLOAT         reduce using rule 85 (E -> NATIVAS .)
    R_STRING        reduce using rule 85 (E -> NATIVAS .)
    R_TYPEOF        reduce using rule 85 (E -> NATIVAS .)
    R_PUSH          reduce using rule 85 (E -> NATIVAS .)
    R_POP           reduce using rule 85 (E -> NATIVAS .)
    R_LENGTH        reduce using rule 85 (E -> NATIVAS .)
    R_BREAK         reduce using rule 85 (E -> NATIVAS .)
    R_CONTINUE      reduce using rule 85 (E -> NATIVAS .)
    R_RETURN        reduce using rule 85 (E -> NATIVAS .)
    PARIZQ          reduce using rule 85 (E -> NATIVAS .)
    R_LOG10         reduce using rule 85 (E -> NATIVAS .)
    R_SIN           reduce using rule 85 (E -> NATIVAS .)
    R_COS           reduce using rule 85 (E -> NATIVAS .)
    R_TAN           reduce using rule 85 (E -> NATIVAS .)
    R_SQRT          reduce using rule 85 (E -> NATIVAS .)
    R_UPPERCASE     reduce using rule 85 (E -> NATIVAS .)
    R_LOWERCASE     reduce using rule 85 (E -> NATIVAS .)
    R_LOG           reduce using rule 85 (E -> NATIVAS .)
    DECIMAL         reduce using rule 85 (E -> NATIVAS .)
    ENTERO          reduce using rule 85 (E -> NATIVAS .)
    R_TRUE          reduce using rule 85 (E -> NATIVAS .)
    R_FALSE         reduce using rule 85 (E -> NATIVAS .)
    R_NOTHING       reduce using rule 85 (E -> NATIVAS .)
    CADENA          reduce using rule 85 (E -> NATIVAS .)
    IGUAL           reduce using rule 85 (E -> NATIVAS .)
    PTCOMA          reduce using rule 85 (E -> NATIVAS .)
    COMA            reduce using rule 85 (E -> NATIVAS .)
    CORDER          reduce using rule 85 (E -> NATIVAS .)
    DOSPUNTOS       reduce using rule 85 (E -> NATIVAS .)
    DOSPUNTITOS     reduce using rule 85 (E -> NATIVAS .)


state 69

    (153) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (155) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 124


state 70

    (154) STRUCTS -> R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (157) ELEMENTOS -> . ELEMENTOS ELEMENTO
    (158) ELEMENTOS -> . ELEMENTO
    (159) ELEMENTO -> . ID PTCOMA
    (160) ELEMENTO -> . ID DOSPUNTOS TIPO PTCOMA
    (161) ELEMENTO -> . ID DOSPUNTOS ID PTCOMA

    R_END           shift and go to state 127
    ID              shift and go to state 125

    ELEMENTOS                      shift and go to state 126
    ELEMENTO                       shift and go to state 128

state 71

    (13) INSTRUCCION -> LLAMADAS PTCOMA .

    R_IF            reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    ID              reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LENGTH        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_RETURN        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    MENOS           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    PARIZQ          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOG10         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_SIN           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_COS           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TAN           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_SQRT          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_UPPERCASE     reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOWERCASE     reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOG           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    DECIMAL         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    ENTERO          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TRUE          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FALSE         reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_NOTHING       reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    CADENA          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRUCT        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    $end            reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_END           reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSE          reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCION -> LLAMADAS PTCOMA .)


state 72

    (14) INSTRUCCION -> NATIVAS PTCOMA .

    R_IF            reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    ID              reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LENGTH        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    MENOS           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    PARIZQ          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOG10         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_SIN           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_COS           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TAN           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_SQRT          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_UPPERCASE     reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOWERCASE     reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOG           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    DECIMAL         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    ENTERO          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TRUE          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FALSE         reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_NOTHING       reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    CADENA          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    $end            reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_END           reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCION -> NATIVAS PTCOMA .)


state 73

    (117) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (120) IFS -> R_IF LO . R_END PTCOMA
    (121) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> R_IF LO . ELSEIF
    (123) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (128) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> . R_ELSEIF LO ELSEIF
    (131) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 130
    R_ELSE          shift and go to state 131
    AND             shift and go to state 133
    OR              shift and go to state 134
    R_ELSEIF        shift and go to state 135
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 129
    ELSEIF                         shift and go to state 132
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 74

    (96) LO -> DIFERENTE . LO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 136
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 75

    (97) LO -> PARIZQ . LO PARDER
    (92) RE -> PARIZQ . RE PARDER
    (63) E -> PARIZQ . E PARDER
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 137
    RE                             shift and go to state 138
    E                              shift and go to state 139
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 76

    (98) LO -> RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 98 (LO -> RE .)
    R_ELSE          reduce using rule 98 (LO -> RE .)
    AND             reduce using rule 98 (LO -> RE .)
    OR              reduce using rule 98 (LO -> RE .)
    R_ELSEIF        reduce using rule 98 (LO -> RE .)
    R_IF            reduce using rule 98 (LO -> RE .)
    R_FOR           reduce using rule 98 (LO -> RE .)
    R_WHILE         reduce using rule 98 (LO -> RE .)
    R_GLOBAL        reduce using rule 98 (LO -> RE .)
    R_LOCAL         reduce using rule 98 (LO -> RE .)
    R_PRINT         reduce using rule 98 (LO -> RE .)
    R_PRINTLN       reduce using rule 98 (LO -> RE .)
    ID              reduce using rule 98 (LO -> RE .)
    R_PARSE         reduce using rule 98 (LO -> RE .)
    R_TRUNC         reduce using rule 98 (LO -> RE .)
    R_FLOAT         reduce using rule 98 (LO -> RE .)
    R_STRING        reduce using rule 98 (LO -> RE .)
    R_TYPEOF        reduce using rule 98 (LO -> RE .)
    R_PUSH          reduce using rule 98 (LO -> RE .)
    R_POP           reduce using rule 98 (LO -> RE .)
    R_LENGTH        reduce using rule 98 (LO -> RE .)
    R_BREAK         reduce using rule 98 (LO -> RE .)
    R_CONTINUE      reduce using rule 98 (LO -> RE .)
    R_RETURN        reduce using rule 98 (LO -> RE .)
    MENOS           reduce using rule 98 (LO -> RE .)
    PARIZQ          reduce using rule 98 (LO -> RE .)
    R_LOG10         reduce using rule 98 (LO -> RE .)
    R_SIN           reduce using rule 98 (LO -> RE .)
    R_COS           reduce using rule 98 (LO -> RE .)
    R_TAN           reduce using rule 98 (LO -> RE .)
    R_SQRT          reduce using rule 98 (LO -> RE .)
    R_UPPERCASE     reduce using rule 98 (LO -> RE .)
    R_LOWERCASE     reduce using rule 98 (LO -> RE .)
    R_LOG           reduce using rule 98 (LO -> RE .)
    DECIMAL         reduce using rule 98 (LO -> RE .)
    ENTERO          reduce using rule 98 (LO -> RE .)
    R_TRUE          reduce using rule 98 (LO -> RE .)
    R_FALSE         reduce using rule 98 (LO -> RE .)
    R_NOTHING       reduce using rule 98 (LO -> RE .)
    CADENA          reduce using rule 98 (LO -> RE .)
    PTCOMA          reduce using rule 98 (LO -> RE .)
    PARDER          reduce using rule 98 (LO -> RE .)
    COMA            reduce using rule 98 (LO -> RE .)
    DOSPUNTOS       reduce using rule 98 (LO -> RE .)
    CORDER          reduce using rule 98 (LO -> RE .)
    MENQUE          shift and go to state 140
    MAYQUE          shift and go to state 141
    IGUALQUE        shift and go to state 142
    NIGUALQUE       shift and go to state 143
    MENORIGUAL      shift and go to state 144
    MAYORIGUAL      shift and go to state 145


state 77

    (93) RE -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    MENQUE          reduce using rule 93 (RE -> E .)
    MAYQUE          reduce using rule 93 (RE -> E .)
    IGUALQUE        reduce using rule 93 (RE -> E .)
    NIGUALQUE       reduce using rule 93 (RE -> E .)
    MENORIGUAL      reduce using rule 93 (RE -> E .)
    MAYORIGUAL      reduce using rule 93 (RE -> E .)
    R_END           reduce using rule 93 (RE -> E .)
    R_ELSE          reduce using rule 93 (RE -> E .)
    AND             reduce using rule 93 (RE -> E .)
    OR              reduce using rule 93 (RE -> E .)
    R_ELSEIF        reduce using rule 93 (RE -> E .)
    R_IF            reduce using rule 93 (RE -> E .)
    R_FOR           reduce using rule 93 (RE -> E .)
    R_WHILE         reduce using rule 93 (RE -> E .)
    R_GLOBAL        reduce using rule 93 (RE -> E .)
    R_LOCAL         reduce using rule 93 (RE -> E .)
    R_PRINT         reduce using rule 93 (RE -> E .)
    R_PRINTLN       reduce using rule 93 (RE -> E .)
    ID              reduce using rule 93 (RE -> E .)
    R_PARSE         reduce using rule 93 (RE -> E .)
    R_TRUNC         reduce using rule 93 (RE -> E .)
    R_FLOAT         reduce using rule 93 (RE -> E .)
    R_STRING        reduce using rule 93 (RE -> E .)
    R_TYPEOF        reduce using rule 93 (RE -> E .)
    R_PUSH          reduce using rule 93 (RE -> E .)
    R_POP           reduce using rule 93 (RE -> E .)
    R_LENGTH        reduce using rule 93 (RE -> E .)
    R_BREAK         reduce using rule 93 (RE -> E .)
    R_CONTINUE      reduce using rule 93 (RE -> E .)
    R_RETURN        reduce using rule 93 (RE -> E .)
    PARIZQ          reduce using rule 93 (RE -> E .)
    R_LOG10         reduce using rule 93 (RE -> E .)
    R_SIN           reduce using rule 93 (RE -> E .)
    R_COS           reduce using rule 93 (RE -> E .)
    R_TAN           reduce using rule 93 (RE -> E .)
    R_SQRT          reduce using rule 93 (RE -> E .)
    R_UPPERCASE     reduce using rule 93 (RE -> E .)
    R_LOWERCASE     reduce using rule 93 (RE -> E .)
    R_LOG           reduce using rule 93 (RE -> E .)
    DECIMAL         reduce using rule 93 (RE -> E .)
    ENTERO          reduce using rule 93 (RE -> E .)
    R_TRUE          reduce using rule 93 (RE -> E .)
    R_FALSE         reduce using rule 93 (RE -> E .)
    R_NOTHING       reduce using rule 93 (RE -> E .)
    CADENA          reduce using rule 93 (RE -> E .)
    PTCOMA          reduce using rule 93 (RE -> E .)
    PARDER          reduce using rule 93 (RE -> E .)
    COMA            reduce using rule 93 (RE -> E .)
    DOSPUNTOS       reduce using rule 93 (RE -> E .)
    CORDER          reduce using rule 93 (RE -> E .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! MENOS           [ reduce using rule 93 (RE -> E .) ]


state 78

    (147) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 146


state 79

    (145) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> R_WHILE LO . R_END PTCOMA
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (136) INSTRUCCION_LOOP -> . IFS
    (137) INSTRUCCION_LOOP -> . FORS
    (138) INSTRUCCION_LOOP -> . WHILES
    (139) INSTRUCCION_LOOP -> . ASIGNACION
    (140) INSTRUCCION_LOOP -> . I
    (141) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (142) INSTRUCCION_LOOP -> . NATIVAS PTCOMA
    (143) INSTRUCCION_LOOP -> . BREAK
    (144) INSTRUCCION_LOOP -> . CONTINUE
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 148
    AND             shift and go to state 133
    OR              shift and go to state 134
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES_LOOP             shift and go to state 147
    INSTRUCCION_LOOP               shift and go to state 149
    IFS                            shift and go to state 150
    FORS                           shift and go to state 151
    WHILES                         shift and go to state 152
    ASIGNACION                     shift and go to state 153
    I                              shift and go to state 154
    LLAMADAS                       shift and go to state 155
    NATIVAS                        shift and go to state 156
    BREAK                          shift and go to state 157
    CONTINUE                       shift and go to state 158
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 80

    (36) ASIGNACION -> R_GLOBAL E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL E . IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> R_GLOBAL E . IGUAL LISTA PTCOMA
    (45) ASIGNACION -> R_GLOBAL E . PTCOMA
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           shift and go to state 159
    PTCOMA          shift and go to state 160
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 81

    (40) ASIGNACION -> E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> E IGUAL . LISTA DOSPUNTOS ID PTCOMA
    (44) ASIGNACION -> E IGUAL . LISTA PTCOMA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 77
    LISTA                          shift and go to state 161
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 82

    (56) E -> E MAS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 162
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 83

    (57) E -> E MENOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 163
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 84

    (58) E -> E POR . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 164
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 85

    (59) E -> E DIVIDIDO . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 165
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 86

    (60) E -> E MODAL . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 166
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 87

    (61) E -> E POTENCIA . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 167
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 88

    (37) ASIGNACION -> R_LOCAL E . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL E . IGUAL LISTA DOSPUNTOS ID PTCOMA
    (43) ASIGNACION -> R_LOCAL E . IGUAL LISTA PTCOMA
    (46) ASIGNACION -> R_LOCAL E . PTCOMA
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           shift and go to state 168
    PTCOMA          shift and go to state 169
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 89

    (18) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (21) I -> R_PRINT PARIZQ . PARDER PTCOMA
    (22) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (23) IMPRESIONES -> . IMPRESION
    (24) IMPRESION -> . ARREGLOS
    (25) IMPRESION -> . LO
    (26) IMPRESION -> . DOLAR PARIZQ E PARDER
    (27) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (28) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARDER          shift and go to state 171
    DOLAR           shift and go to state 175
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    IMPRESIONES                    shift and go to state 170
    IMPRESION                      shift and go to state 172
    ARREGLOS                       shift and go to state 173
    LO                             shift and go to state 174
    E                              shift and go to state 77
    NATIVAS                        shift and go to state 68
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 90

    (19) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (20) I -> R_PRINTLN PARIZQ . PARDER PTCOMA
    (22) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (23) IMPRESIONES -> . IMPRESION
    (24) IMPRESION -> . ARREGLOS
    (25) IMPRESION -> . LO
    (26) IMPRESION -> . DOLAR PARIZQ E PARDER
    (27) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (28) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARDER          shift and go to state 177
    DOLAR           shift and go to state 175
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    IMPRESIONES                    shift and go to state 176
    IMPRESION                      shift and go to state 172
    ARREGLOS                       shift and go to state 173
    LO                             shift and go to state 174
    E                              shift and go to state 77
    NATIVAS                        shift and go to state 68
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 91

    (99) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 179
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 182
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184

    TIPO                           shift and go to state 178

state 92

    (100) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (104) NATIVAS -> R_TRUNC PARIZQ . LISTA PARDER
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    R_NOTHING       shift and go to state 187
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 188
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    TIPO                           shift and go to state 185
    LISTA                          shift and go to state 186
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 93

    (101) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 189
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 94

    (102) NATIVAS -> R_STRING PARIZQ . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 190
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 95

    (103) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 191
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 96

    (105) NATIVAS -> R_PUSH DIFERENTE . PARIZQ E COMA LISTA PARDER

    PARIZQ          shift and go to state 192


state 97

    (106) NATIVAS -> R_POP DIFERENTE . PARIZQ E PARDER

    PARIZQ          shift and go to state 193


state 98

    (107) NATIVAS -> R_LENGTH PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 194
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 99

    (47) BREAK -> R_BREAK PTCOMA .

    R_IF            reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_FOR           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_WHILE         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_GLOBAL        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_LOCAL         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_PRINT         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_PRINTLN       reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    ID              reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_PARSE         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_TRUNC         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_FLOAT         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_STRING        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_TYPEOF        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_PUSH          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_POP           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_LENGTH        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_BREAK         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_CONTINUE      reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_RETURN        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    MENOS           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    PARIZQ          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_LOG10         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_SIN           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_COS           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_TAN           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_SQRT          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_UPPERCASE     reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_LOWERCASE     reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_LOG           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    DECIMAL         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    ENTERO          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_TRUE          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_FALSE         reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_NOTHING       reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    CADENA          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_FUNCTION      reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_MUTABLE       reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_STRUCT        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    $end            reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_END           reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_ELSE          reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)
    R_ELSEIF        reduce using rule 47 (BREAK -> R_BREAK PTCOMA .)


state 100

    (133) CONTINUE -> R_CONTINUE PTCOMA .

    R_IF            reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FOR           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_WHILE         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_GLOBAL        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOCAL         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINT         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINTLN       reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    ID              reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PARSE         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUNC         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FLOAT         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRING        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TYPEOF        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PUSH          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_POP           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LENGTH        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_BREAK         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_CONTINUE      reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_RETURN        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    MENOS           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    PARIZQ          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOG10         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_SIN           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_COS           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TAN           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_SQRT          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_UPPERCASE     reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOWERCASE     reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOG           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    DECIMAL         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    ENTERO          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUE          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FALSE         reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_NOTHING       reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    CADENA          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FUNCTION      reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_MUTABLE       reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRUCT        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    $end            reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_END           reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSE          reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSEIF        reduce using rule 133 (CONTINUE -> R_CONTINUE PTCOMA .)


state 101

    (108) RETURN -> R_RETURN LISTA . PTCOMA

    PTCOMA          shift and go to state 195


state 102

    (109) RETURN -> R_RETURN PTCOMA .

    R_IF            reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_FOR           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_WHILE         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_GLOBAL        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_LOCAL         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_PRINT         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_PRINTLN       reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    ID              reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_PARSE         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_TRUNC         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_FLOAT         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_STRING        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_TYPEOF        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_PUSH          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_POP           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_LENGTH        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_BREAK         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_CONTINUE      reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_RETURN        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    MENOS           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    PARIZQ          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_LOG10         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_SIN           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_COS           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_TAN           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_SQRT          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_UPPERCASE     reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_LOWERCASE     reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_LOG           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    DECIMAL         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    ENTERO          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_TRUE          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_FALSE         reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_NOTHING       reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    CADENA          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_FUNCTION      reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_MUTABLE       reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_STRUCT        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    $end            reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_END           reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_ELSE          reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)
    R_ELSEIF        reduce using rule 109 (RETURN -> R_RETURN PTCOMA .)


state 103

    (34) LISTA -> ARREGLOS .
    (29) ARREGLOS -> ARREGLOS . COMA ARREGLO

  ! shift/reduce conflict for COMA resolved as shift
    PTCOMA          reduce using rule 34 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 34 (LISTA -> ARREGLOS .)
    DOSPUNTOS       reduce using rule 34 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 34 (LISTA -> ARREGLOS .)
    COMA            shift and go to state 196

  ! COMA            [ reduce using rule 34 (LISTA -> ARREGLOS .) ]


state 104

    (35) LISTA -> LO .
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    PTCOMA          reduce using rule 35 (LISTA -> LO .)
    PARDER          reduce using rule 35 (LISTA -> LO .)
    COMA            reduce using rule 35 (LISTA -> LO .)
    DOSPUNTOS       reduce using rule 35 (LISTA -> LO .)
    CORDER          reduce using rule 35 (LISTA -> LO .)
    AND             shift and go to state 133
    OR              shift and go to state 134


state 105

    (30) ARREGLOS -> ARREGLO .

    COMA            reduce using rule 30 (ARREGLOS -> ARREGLO .)
    PTCOMA          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    PARDER          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    DOSPUNTOS       reduce using rule 30 (ARREGLOS -> ARREGLO .)
    CORDER          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_END           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_IF            reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_FOR           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_WHILE         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_GLOBAL        reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_LOCAL         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_PRINT         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_PRINTLN       reduce using rule 30 (ARREGLOS -> ARREGLO .)
    ID              reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_PARSE         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_TRUNC         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_FLOAT         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_STRING        reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_TYPEOF        reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_PUSH          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_POP           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_LENGTH        reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_BREAK         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_CONTINUE      reduce using rule 30 (ARREGLOS -> ARREGLO .)
    MENOS           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    PARIZQ          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_LOG10         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_SIN           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_COS           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_TAN           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_SQRT          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_UPPERCASE     reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_LOWERCASE     reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_LOG           reduce using rule 30 (ARREGLOS -> ARREGLO .)
    DECIMAL         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    ENTERO          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_TRUE          reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_FALSE         reduce using rule 30 (ARREGLOS -> ARREGLO .)
    R_NOTHING       reduce using rule 30 (ARREGLOS -> ARREGLO .)
    CADENA          reduce using rule 30 (ARREGLOS -> ARREGLO .)


state 106

    (31) ARREGLO -> CORIZQ . LISTAS CORDER
    (32) LISTAS -> . LISTAS COMA LISTA
    (33) LISTAS -> . LISTA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTAS                         shift and go to state 197
    LISTA                          shift and go to state 120
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 107

    (62) E -> MENOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 62 (E -> MENOS E .)
    MAS             reduce using rule 62 (E -> MENOS E .)
    MENOS           reduce using rule 62 (E -> MENOS E .)
    POR             reduce using rule 62 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 62 (E -> MENOS E .)
    MODAL           reduce using rule 62 (E -> MENOS E .)
    POTENCIA        reduce using rule 62 (E -> MENOS E .)
    PARDER          reduce using rule 62 (E -> MENOS E .)
    MENQUE          reduce using rule 62 (E -> MENOS E .)
    MAYQUE          reduce using rule 62 (E -> MENOS E .)
    IGUALQUE        reduce using rule 62 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 62 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 62 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 62 (E -> MENOS E .)
    R_END           reduce using rule 62 (E -> MENOS E .)
    R_ELSE          reduce using rule 62 (E -> MENOS E .)
    AND             reduce using rule 62 (E -> MENOS E .)
    OR              reduce using rule 62 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 62 (E -> MENOS E .)
    R_IF            reduce using rule 62 (E -> MENOS E .)
    R_FOR           reduce using rule 62 (E -> MENOS E .)
    R_WHILE         reduce using rule 62 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 62 (E -> MENOS E .)
    R_LOCAL         reduce using rule 62 (E -> MENOS E .)
    R_PRINT         reduce using rule 62 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 62 (E -> MENOS E .)
    ID              reduce using rule 62 (E -> MENOS E .)
    R_PARSE         reduce using rule 62 (E -> MENOS E .)
    R_TRUNC         reduce using rule 62 (E -> MENOS E .)
    R_FLOAT         reduce using rule 62 (E -> MENOS E .)
    R_STRING        reduce using rule 62 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 62 (E -> MENOS E .)
    R_PUSH          reduce using rule 62 (E -> MENOS E .)
    R_POP           reduce using rule 62 (E -> MENOS E .)
    R_LENGTH        reduce using rule 62 (E -> MENOS E .)
    R_BREAK         reduce using rule 62 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 62 (E -> MENOS E .)
    R_RETURN        reduce using rule 62 (E -> MENOS E .)
    PARIZQ          reduce using rule 62 (E -> MENOS E .)
    R_LOG10         reduce using rule 62 (E -> MENOS E .)
    R_SIN           reduce using rule 62 (E -> MENOS E .)
    R_COS           reduce using rule 62 (E -> MENOS E .)
    R_TAN           reduce using rule 62 (E -> MENOS E .)
    R_SQRT          reduce using rule 62 (E -> MENOS E .)
    R_UPPERCASE     reduce using rule 62 (E -> MENOS E .)
    R_LOWERCASE     reduce using rule 62 (E -> MENOS E .)
    R_LOG           reduce using rule 62 (E -> MENOS E .)
    DECIMAL         reduce using rule 62 (E -> MENOS E .)
    ENTERO          reduce using rule 62 (E -> MENOS E .)
    R_TRUE          reduce using rule 62 (E -> MENOS E .)
    R_FALSE         reduce using rule 62 (E -> MENOS E .)
    R_NOTHING       reduce using rule 62 (E -> MENOS E .)
    CADENA          reduce using rule 62 (E -> MENOS E .)
    PTCOMA          reduce using rule 62 (E -> MENOS E .)
    COMA            reduce using rule 62 (E -> MENOS E .)
    CORDER          reduce using rule 62 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 62 (E -> MENOS E .)
    DOSPUNTITOS     reduce using rule 62 (E -> MENOS E .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODAL           [ shift and go to state 86 ]
  ! POTENCIA        [ shift and go to state 87 ]


state 108

    (64) E -> R_LOG10 PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 198
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 109

    (65) E -> R_SIN PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 199
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 110

    (66) E -> R_COS PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 200
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 111

    (67) E -> R_TAN PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 201
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 112

    (68) E -> R_SQRT PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 202
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 113

    (69) E -> R_UPPERCASE PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 203
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 114

    (70) E -> R_LOWERCASE PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 204
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 115

    (71) E -> R_LOG PARIZQ . E COMA E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 205
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 116

    (162) ACCESOS -> ACCESOS PUNTO . ACCESO
    (164) ACCESO -> . ID

    ID              shift and go to state 207

    ACCESO                         shift and go to state 206

state 117

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER R_END PTCOMA
    (112) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (114) PARAMETROS -> . PARAMETROS COMA PARAMETRO
    (115) PARAMETROS -> . PARAMETRO
    (116) PARAMETRO -> . ID

    PARDER          shift and go to state 210
    ID              shift and go to state 208

    PARAMETROS                     shift and go to state 209
    PARAMETRO                      shift and go to state 211

state 118

    (54) LLAMADAS -> ID PARIZQ LISTAS . PARDER
    (32) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 212
    COMA            shift and go to state 213


state 119

    (55) LLAMADAS -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    IGUAL           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MAS             reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    POR             reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MODAL           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_END           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSE          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    AND             reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    OR              reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSEIF        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_IF            reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FOR           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_WHILE         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_GLOBAL        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOCAL         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINT         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINTLN       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    ID              reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PARSE         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TRUNC         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FLOAT         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_STRING        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TYPEOF        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PUSH          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_POP           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LENGTH        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_BREAK         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_CONTINUE      reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_RETURN        reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    PARIZQ          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOG10         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_SIN           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_COS           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TAN           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_SQRT          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_UPPERCASE     reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOWERCASE     reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOG           reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    DECIMAL         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    ENTERO          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TRUE          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FALSE         reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    R_NOTHING       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    CADENA          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    COMA            reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTITOS     reduce using rule 55 (LLAMADAS -> ID PARIZQ PARDER .)


state 120

    (33) LISTAS -> LISTA .

    PARDER          reduce using rule 33 (LISTAS -> LISTA .)
    COMA            reduce using rule 33 (LISTAS -> LISTA .)
    CORDER          reduce using rule 33 (LISTAS -> LISTA .)


state 121

    (82) ARRAYS -> ARRAYS ARRAY .

    CORIZQ          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    IGUAL           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MAS             reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MENOS           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    POR             reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    DIVIDIDO        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MODAL           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    POTENCIA        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    PARDER          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MENQUE          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MAYQUE          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    IGUALQUE        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    NIGUALQUE       reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MENORIGUAL      reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    MAYORIGUAL      reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_END           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_ELSE          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    AND             reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    OR              reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_ELSEIF        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_IF            reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_FOR           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_WHILE         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_GLOBAL        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_LOCAL         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_PRINT         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_PRINTLN       reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    ID              reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_PARSE         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_TRUNC         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_FLOAT         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_STRING        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_TYPEOF        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_PUSH          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_POP           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_LENGTH        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_BREAK         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_CONTINUE      reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_RETURN        reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    PARIZQ          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_LOG10         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_SIN           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_COS           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_TAN           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_SQRT          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_UPPERCASE     reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_LOWERCASE     reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_LOG           reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    DECIMAL         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    ENTERO          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_TRUE          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_FALSE         reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    R_NOTHING       reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    CADENA          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    PTCOMA          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    COMA            reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    CORDER          reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    DOSPUNTOS       reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)
    DOSPUNTITOS     reduce using rule 82 (ARRAYS -> ARRAYS ARRAY .)


state 122

    (84) ARRAY -> CORIZQ E . CORDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    CORDER          shift and go to state 214
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 123

    (63) E -> PARIZQ E PARDER .

    IGUAL           reduce using rule 63 (E -> PARIZQ E PARDER .)
    MAS             reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 63 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 63 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 63 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 63 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 63 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 63 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 63 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 63 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 63 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 63 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_STRING        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_RETURN        reduce using rule 63 (E -> PARIZQ E PARDER .)
    PARIZQ          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LOG10         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_SIN           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_COS           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TAN           reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_SQRT          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_LOG           reduce using rule 63 (E -> PARIZQ E PARDER .)
    DECIMAL         reduce using rule 63 (E -> PARIZQ E PARDER .)
    ENTERO          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_TRUE          reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_FALSE         reduce using rule 63 (E -> PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 63 (E -> PARIZQ E PARDER .)
    CADENA          reduce using rule 63 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 63 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 63 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 63 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 63 (E -> PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 63 (E -> PARIZQ E PARDER .)


state 124

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (155) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (157) ELEMENTOS -> . ELEMENTOS ELEMENTO
    (158) ELEMENTOS -> . ELEMENTO
    (159) ELEMENTO -> . ID PTCOMA
    (160) ELEMENTO -> . ID DOSPUNTOS TIPO PTCOMA
    (161) ELEMENTO -> . ID DOSPUNTOS ID PTCOMA

    R_END           shift and go to state 216
    ID              shift and go to state 125

    ELEMENTOS                      shift and go to state 215
    ELEMENTO                       shift and go to state 128

state 125

    (159) ELEMENTO -> ID . PTCOMA
    (160) ELEMENTO -> ID . DOSPUNTOS TIPO PTCOMA
    (161) ELEMENTO -> ID . DOSPUNTOS ID PTCOMA

    PTCOMA          shift and go to state 217
    DOSPUNTOS       shift and go to state 218


state 126

    (154) STRUCTS -> R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (157) ELEMENTOS -> ELEMENTOS . ELEMENTO
    (159) ELEMENTO -> . ID PTCOMA
    (160) ELEMENTO -> . ID DOSPUNTOS TIPO PTCOMA
    (161) ELEMENTO -> . ID DOSPUNTOS ID PTCOMA

    R_END           shift and go to state 219
    ID              shift and go to state 125

    ELEMENTO                       shift and go to state 220

state 127

    (156) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 221


state 128

    (158) ELEMENTOS -> ELEMENTO .

    R_END           reduce using rule 158 (ELEMENTOS -> ELEMENTO .)
    ID              reduce using rule 158 (ELEMENTOS -> ELEMENTO .)


state 129

    (117) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (118) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (123) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (128) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> . R_ELSEIF LO ELSEIF
    (131) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 222
    R_ELSE          shift and go to state 223
    R_ELSEIF        shift and go to state 135
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    ELSEIF                         shift and go to state 224
    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 130

    (120) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 225


state 131

    (121) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (124) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 227
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 226
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 132

    (122) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_STRING        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_LENGTH        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    MENOS           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    PARIZQ          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_LOG10         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_SIN           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_COS           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_TAN           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_SQRT          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_UPPERCASE     reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_LOWERCASE     reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_LOG           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    DECIMAL         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    ENTERO          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_TRUE          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_FALSE         reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_NOTHING       reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    CADENA          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 122 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 122 (IFS -> R_IF LO ELSEIF .)


state 133

    (94) LO -> LO AND . LO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 228
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 134

    (95) LO -> LO OR . LO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 229
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 135

    (125) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (128) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (129) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> R_ELSEIF . LO ELSEIF
    (131) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LO                             shift and go to state 230
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 136

    (96) LO -> DIFERENTE LO .
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    R_END           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 96 (LO -> DIFERENTE LO .)
    AND             reduce using rule 96 (LO -> DIFERENTE LO .)
    OR              reduce using rule 96 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 96 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 96 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 96 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 96 (LO -> DIFERENTE LO .)
    ID              reduce using rule 96 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_STRING        reduce using rule 96 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 96 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 96 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_LENGTH        reduce using rule 96 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 96 (LO -> DIFERENTE LO .)
    R_RETURN        reduce using rule 96 (LO -> DIFERENTE LO .)
    MENOS           reduce using rule 96 (LO -> DIFERENTE LO .)
    PARIZQ          reduce using rule 96 (LO -> DIFERENTE LO .)
    R_LOG10         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_SIN           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_COS           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_TAN           reduce using rule 96 (LO -> DIFERENTE LO .)
    R_SQRT          reduce using rule 96 (LO -> DIFERENTE LO .)
    R_UPPERCASE     reduce using rule 96 (LO -> DIFERENTE LO .)
    R_LOWERCASE     reduce using rule 96 (LO -> DIFERENTE LO .)
    R_LOG           reduce using rule 96 (LO -> DIFERENTE LO .)
    DECIMAL         reduce using rule 96 (LO -> DIFERENTE LO .)
    ENTERO          reduce using rule 96 (LO -> DIFERENTE LO .)
    R_TRUE          reduce using rule 96 (LO -> DIFERENTE LO .)
    R_FALSE         reduce using rule 96 (LO -> DIFERENTE LO .)
    R_NOTHING       reduce using rule 96 (LO -> DIFERENTE LO .)
    CADENA          reduce using rule 96 (LO -> DIFERENTE LO .)
    PTCOMA          reduce using rule 96 (LO -> DIFERENTE LO .)
    PARDER          reduce using rule 96 (LO -> DIFERENTE LO .)
    COMA            reduce using rule 96 (LO -> DIFERENTE LO .)
    DOSPUNTOS       reduce using rule 96 (LO -> DIFERENTE LO .)
    CORDER          reduce using rule 96 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 133 ]
  ! OR              [ shift and go to state 134 ]


state 137

    (97) LO -> PARIZQ LO . PARDER
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    PARDER          shift and go to state 231
    AND             shift and go to state 133
    OR              shift and go to state 134


state 138

    (92) RE -> PARIZQ RE . PARDER
    (98) LO -> RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 232
    AND             reduce using rule 98 (LO -> RE .)
    OR              reduce using rule 98 (LO -> RE .)
    MENQUE          shift and go to state 140
    MAYQUE          shift and go to state 141
    IGUALQUE        shift and go to state 142
    NIGUALQUE       shift and go to state 143
    MENORIGUAL      shift and go to state 144
    MAYORIGUAL      shift and go to state 145

  ! PARDER          [ reduce using rule 98 (LO -> RE .) ]


state 139

    (63) E -> PARIZQ E . PARDER
    (93) RE -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 123
    MENQUE          reduce using rule 93 (RE -> E .)
    MAYQUE          reduce using rule 93 (RE -> E .)
    IGUALQUE        reduce using rule 93 (RE -> E .)
    NIGUALQUE       reduce using rule 93 (RE -> E .)
    MENORIGUAL      reduce using rule 93 (RE -> E .)
    MAYORIGUAL      reduce using rule 93 (RE -> E .)
    AND             reduce using rule 93 (RE -> E .)
    OR              reduce using rule 93 (RE -> E .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! PARDER          [ reduce using rule 93 (RE -> E .) ]


state 140

    (86) RE -> RE MENQUE . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 233
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 141

    (87) RE -> RE MAYQUE . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 235
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 142

    (88) RE -> RE IGUALQUE . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 236
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 143

    (89) RE -> RE NIGUALQUE . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 237
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 144

    (90) RE -> RE MENORIGUAL . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 238
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 145

    (91) RE -> RE MAYORIGUAL . RE
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 239
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 146

    (147) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (149) RANGO -> . E DOSPUNTITOS E
    (150) RANGO -> . E
    (151) RANGO -> . ARREGLOS
    (152) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (164) ACCESO -> . ID

    ID              shift and go to state 240
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    CORIZQ          shift and go to state 106

    RANGO                          shift and go to state 241
    E                              shift and go to state 242
    ARREGLOS                       shift and go to state 243
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ARREGLO                        shift and go to state 105
    ACCESO                         shift and go to state 57

state 147

    (145) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (136) INSTRUCCION_LOOP -> . IFS
    (137) INSTRUCCION_LOOP -> . FORS
    (138) INSTRUCCION_LOOP -> . WHILES
    (139) INSTRUCCION_LOOP -> . ASIGNACION
    (140) INSTRUCCION_LOOP -> . I
    (141) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (142) INSTRUCCION_LOOP -> . NATIVAS PTCOMA
    (143) INSTRUCCION_LOOP -> . BREAK
    (144) INSTRUCCION_LOOP -> . CONTINUE
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 244
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION_LOOP               shift and go to state 245
    IFS                            shift and go to state 150
    FORS                           shift and go to state 151
    WHILES                         shift and go to state 152
    ASIGNACION                     shift and go to state 153
    I                              shift and go to state 154
    LLAMADAS                       shift and go to state 155
    NATIVAS                        shift and go to state 156
    BREAK                          shift and go to state 157
    CONTINUE                       shift and go to state 158
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 148

    (146) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 246


state 149

    (135) INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .

    R_END           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_IF            reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    ID              reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_POP           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LENGTH        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    MENOS           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    PARIZQ          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOG10         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_SIN           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_COS           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TAN           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_SQRT          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_UPPERCASE     reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOWERCASE     reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOG           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    DECIMAL         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    ENTERO          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TRUE          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FALSE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_NOTHING       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    CADENA          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)


state 150

    (136) INSTRUCCION_LOOP -> IFS .

    R_END           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_IF            reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_FOR           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_WHILE         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_LOCAL         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_PRINT         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    ID              reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_PARSE         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_TRUNC         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_FLOAT         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_STRING        reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_PUSH          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_POP           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_LENGTH        reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_BREAK         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    MENOS           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    PARIZQ          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_LOG10         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_SIN           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_COS           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_TAN           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_SQRT          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_UPPERCASE     reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_LOWERCASE     reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_LOG           reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    DECIMAL         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    ENTERO          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_TRUE          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_FALSE         reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    R_NOTHING       reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)
    CADENA          reduce using rule 136 (INSTRUCCION_LOOP -> IFS .)


state 151

    (137) INSTRUCCION_LOOP -> FORS .

    R_END           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_IF            reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_FOR           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_WHILE         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_LOCAL         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_PRINT         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    ID              reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_PARSE         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_TRUNC         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_FLOAT         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_STRING        reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_PUSH          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_POP           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_LENGTH        reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_BREAK         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    MENOS           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    PARIZQ          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_LOG10         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_SIN           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_COS           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_TAN           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_SQRT          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_UPPERCASE     reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_LOWERCASE     reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_LOG           reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    DECIMAL         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    ENTERO          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_TRUE          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_FALSE         reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    R_NOTHING       reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)
    CADENA          reduce using rule 137 (INSTRUCCION_LOOP -> FORS .)


state 152

    (138) INSTRUCCION_LOOP -> WHILES .

    R_END           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_IF            reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_FOR           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_WHILE         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINT         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    ID              reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_PARSE         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_STRING        reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_PUSH          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_POP           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_LENGTH        reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_BREAK         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    MENOS           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    PARIZQ          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_LOG10         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_SIN           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_COS           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_TAN           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_SQRT          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_UPPERCASE     reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_LOWERCASE     reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_LOG           reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    DECIMAL         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    ENTERO          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_TRUE          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_FALSE         reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    R_NOTHING       reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)
    CADENA          reduce using rule 138 (INSTRUCCION_LOOP -> WHILES .)


state 153

    (139) INSTRUCCION_LOOP -> ASIGNACION .

    R_END           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    ID              reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_STRING        reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LENGTH        reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    MENOS           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    PARIZQ          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOG10         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_SIN           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_COS           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TAN           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_SQRT          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_UPPERCASE     reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOWERCASE     reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOG           reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    DECIMAL         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    ENTERO          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TRUE          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FALSE         reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_NOTHING       reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)
    CADENA          reduce using rule 139 (INSTRUCCION_LOOP -> ASIGNACION .)


state 154

    (140) INSTRUCCION_LOOP -> I .

    R_END           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_IF            reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_FOR           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_WHILE         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_GLOBAL        reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_LOCAL         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_PRINT         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_PRINTLN       reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    ID              reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_PARSE         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_TRUNC         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_FLOAT         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_STRING        reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_TYPEOF        reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_PUSH          reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_POP           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_LENGTH        reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_BREAK         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_CONTINUE      reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    MENOS           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    PARIZQ          reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_LOG10         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_SIN           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_COS           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_TAN           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_SQRT          reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_UPPERCASE     reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_LOWERCASE     reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_LOG           reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    DECIMAL         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    ENTERO          reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_TRUE          reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_FALSE         reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    R_NOTHING       reduce using rule 140 (INSTRUCCION_LOOP -> I .)
    CADENA          reduce using rule 140 (INSTRUCCION_LOOP -> I .)


state 155

    (141) INSTRUCCION_LOOP -> LLAMADAS . PTCOMA
    (78) E -> LLAMADAS .

    PTCOMA          shift and go to state 247
    IGUAL           reduce using rule 78 (E -> LLAMADAS .)
    MAS             reduce using rule 78 (E -> LLAMADAS .)
    MENOS           reduce using rule 78 (E -> LLAMADAS .)
    POR             reduce using rule 78 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 78 (E -> LLAMADAS .)
    MODAL           reduce using rule 78 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 78 (E -> LLAMADAS .)


state 156

    (142) INSTRUCCION_LOOP -> NATIVAS . PTCOMA
    (85) E -> NATIVAS .

    PTCOMA          shift and go to state 248
    IGUAL           reduce using rule 85 (E -> NATIVAS .)
    MAS             reduce using rule 85 (E -> NATIVAS .)
    MENOS           reduce using rule 85 (E -> NATIVAS .)
    POR             reduce using rule 85 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 85 (E -> NATIVAS .)
    MODAL           reduce using rule 85 (E -> NATIVAS .)
    POTENCIA        reduce using rule 85 (E -> NATIVAS .)


state 157

    (143) INSTRUCCION_LOOP -> BREAK .

    R_END           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_IF            reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_FOR           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_WHILE         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_GLOBAL        reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_LOCAL         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINT         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINTLN       reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    ID              reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_PARSE         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_TRUNC         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_FLOAT         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_STRING        reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_TYPEOF        reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_PUSH          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_POP           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_LENGTH        reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_BREAK         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_CONTINUE      reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    MENOS           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    PARIZQ          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_LOG10         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_SIN           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_COS           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_TAN           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_SQRT          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_UPPERCASE     reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_LOWERCASE     reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_LOG           reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    DECIMAL         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    ENTERO          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_TRUE          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_FALSE         reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    R_NOTHING       reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)
    CADENA          reduce using rule 143 (INSTRUCCION_LOOP -> BREAK .)


state 158

    (144) INSTRUCCION_LOOP -> CONTINUE .

    R_END           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_IF            reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FOR           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_WHILE         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_GLOBAL        reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOCAL         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINT         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINTLN       reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    ID              reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PARSE         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TRUNC         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FLOAT         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_STRING        reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TYPEOF        reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PUSH          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_POP           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LENGTH        reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_BREAK         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_CONTINUE      reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    MENOS           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    PARIZQ          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOG10         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_SIN           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_COS           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TAN           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_SQRT          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_UPPERCASE     reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOWERCASE     reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOG           reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    DECIMAL         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    ENTERO          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TRUE          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FALSE         reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    R_NOTHING       reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)
    CADENA          reduce using rule 144 (INSTRUCCION_LOOP -> CONTINUE .)


state 159

    (36) ASIGNACION -> R_GLOBAL E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL E IGUAL . LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> R_GLOBAL E IGUAL . LISTA PTCOMA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 77
    LISTA                          shift and go to state 249
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 160

    (45) ASIGNACION -> R_GLOBAL E PTCOMA .

    R_IF            reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FOR           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_WHILE         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_GLOBAL        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOCAL         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PRINT         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PRINTLN       reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    ID              reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PARSE         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TRUNC         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FLOAT         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_STRING        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TYPEOF        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_PUSH          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_POP           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LENGTH        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_BREAK         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_CONTINUE      reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_RETURN        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    MENOS           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    PARIZQ          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOG10         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_SIN           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_COS           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TAN           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_SQRT          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_UPPERCASE     reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOWERCASE     reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_LOG           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    DECIMAL         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    ENTERO          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_TRUE          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FALSE         reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_NOTHING       reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    CADENA          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_FUNCTION      reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_MUTABLE       reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_STRUCT        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    $end            reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_END           reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_ELSE          reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)
    R_ELSEIF        reduce using rule 45 (ASIGNACION -> R_GLOBAL E PTCOMA .)


state 161

    (40) ASIGNACION -> E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> E IGUAL LISTA . DOSPUNTOS ID PTCOMA
    (44) ASIGNACION -> E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 250
    PTCOMA          shift and go to state 251


state 162

    (56) E -> E MAS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 56 (E -> E MAS E .)
    MAS             reduce using rule 56 (E -> E MAS E .)
    MENOS           reduce using rule 56 (E -> E MAS E .)
    PARDER          reduce using rule 56 (E -> E MAS E .)
    MENQUE          reduce using rule 56 (E -> E MAS E .)
    MAYQUE          reduce using rule 56 (E -> E MAS E .)
    IGUALQUE        reduce using rule 56 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 56 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 56 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 56 (E -> E MAS E .)
    R_END           reduce using rule 56 (E -> E MAS E .)
    R_ELSE          reduce using rule 56 (E -> E MAS E .)
    AND             reduce using rule 56 (E -> E MAS E .)
    OR              reduce using rule 56 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 56 (E -> E MAS E .)
    R_IF            reduce using rule 56 (E -> E MAS E .)
    R_FOR           reduce using rule 56 (E -> E MAS E .)
    R_WHILE         reduce using rule 56 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 56 (E -> E MAS E .)
    R_LOCAL         reduce using rule 56 (E -> E MAS E .)
    R_PRINT         reduce using rule 56 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 56 (E -> E MAS E .)
    ID              reduce using rule 56 (E -> E MAS E .)
    R_PARSE         reduce using rule 56 (E -> E MAS E .)
    R_TRUNC         reduce using rule 56 (E -> E MAS E .)
    R_FLOAT         reduce using rule 56 (E -> E MAS E .)
    R_STRING        reduce using rule 56 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 56 (E -> E MAS E .)
    R_PUSH          reduce using rule 56 (E -> E MAS E .)
    R_POP           reduce using rule 56 (E -> E MAS E .)
    R_LENGTH        reduce using rule 56 (E -> E MAS E .)
    R_BREAK         reduce using rule 56 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 56 (E -> E MAS E .)
    R_RETURN        reduce using rule 56 (E -> E MAS E .)
    PARIZQ          reduce using rule 56 (E -> E MAS E .)
    R_LOG10         reduce using rule 56 (E -> E MAS E .)
    R_SIN           reduce using rule 56 (E -> E MAS E .)
    R_COS           reduce using rule 56 (E -> E MAS E .)
    R_TAN           reduce using rule 56 (E -> E MAS E .)
    R_SQRT          reduce using rule 56 (E -> E MAS E .)
    R_UPPERCASE     reduce using rule 56 (E -> E MAS E .)
    R_LOWERCASE     reduce using rule 56 (E -> E MAS E .)
    R_LOG           reduce using rule 56 (E -> E MAS E .)
    DECIMAL         reduce using rule 56 (E -> E MAS E .)
    ENTERO          reduce using rule 56 (E -> E MAS E .)
    R_TRUE          reduce using rule 56 (E -> E MAS E .)
    R_FALSE         reduce using rule 56 (E -> E MAS E .)
    R_NOTHING       reduce using rule 56 (E -> E MAS E .)
    CADENA          reduce using rule 56 (E -> E MAS E .)
    PTCOMA          reduce using rule 56 (E -> E MAS E .)
    COMA            reduce using rule 56 (E -> E MAS E .)
    CORDER          reduce using rule 56 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 56 (E -> E MAS E .)
    DOSPUNTITOS     reduce using rule 56 (E -> E MAS E .)
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! POR             [ reduce using rule 56 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 56 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 56 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 56 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]


state 163

    (57) E -> E MENOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 57 (E -> E MENOS E .)
    MAS             reduce using rule 57 (E -> E MENOS E .)
    MENOS           reduce using rule 57 (E -> E MENOS E .)
    PARDER          reduce using rule 57 (E -> E MENOS E .)
    MENQUE          reduce using rule 57 (E -> E MENOS E .)
    MAYQUE          reduce using rule 57 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 57 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 57 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 57 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 57 (E -> E MENOS E .)
    R_END           reduce using rule 57 (E -> E MENOS E .)
    R_ELSE          reduce using rule 57 (E -> E MENOS E .)
    AND             reduce using rule 57 (E -> E MENOS E .)
    OR              reduce using rule 57 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 57 (E -> E MENOS E .)
    R_IF            reduce using rule 57 (E -> E MENOS E .)
    R_FOR           reduce using rule 57 (E -> E MENOS E .)
    R_WHILE         reduce using rule 57 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 57 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 57 (E -> E MENOS E .)
    R_PRINT         reduce using rule 57 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 57 (E -> E MENOS E .)
    ID              reduce using rule 57 (E -> E MENOS E .)
    R_PARSE         reduce using rule 57 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 57 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 57 (E -> E MENOS E .)
    R_STRING        reduce using rule 57 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 57 (E -> E MENOS E .)
    R_PUSH          reduce using rule 57 (E -> E MENOS E .)
    R_POP           reduce using rule 57 (E -> E MENOS E .)
    R_LENGTH        reduce using rule 57 (E -> E MENOS E .)
    R_BREAK         reduce using rule 57 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 57 (E -> E MENOS E .)
    R_RETURN        reduce using rule 57 (E -> E MENOS E .)
    PARIZQ          reduce using rule 57 (E -> E MENOS E .)
    R_LOG10         reduce using rule 57 (E -> E MENOS E .)
    R_SIN           reduce using rule 57 (E -> E MENOS E .)
    R_COS           reduce using rule 57 (E -> E MENOS E .)
    R_TAN           reduce using rule 57 (E -> E MENOS E .)
    R_SQRT          reduce using rule 57 (E -> E MENOS E .)
    R_UPPERCASE     reduce using rule 57 (E -> E MENOS E .)
    R_LOWERCASE     reduce using rule 57 (E -> E MENOS E .)
    R_LOG           reduce using rule 57 (E -> E MENOS E .)
    DECIMAL         reduce using rule 57 (E -> E MENOS E .)
    ENTERO          reduce using rule 57 (E -> E MENOS E .)
    R_TRUE          reduce using rule 57 (E -> E MENOS E .)
    R_FALSE         reduce using rule 57 (E -> E MENOS E .)
    R_NOTHING       reduce using rule 57 (E -> E MENOS E .)
    CADENA          reduce using rule 57 (E -> E MENOS E .)
    PTCOMA          reduce using rule 57 (E -> E MENOS E .)
    COMA            reduce using rule 57 (E -> E MENOS E .)
    CORDER          reduce using rule 57 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 57 (E -> E MENOS E .)
    DOSPUNTITOS     reduce using rule 57 (E -> E MENOS E .)
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! POR             [ reduce using rule 57 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 57 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 57 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 57 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]


state 164

    (58) E -> E POR E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 58 (E -> E POR E .)
    MAS             reduce using rule 58 (E -> E POR E .)
    MENOS           reduce using rule 58 (E -> E POR E .)
    POR             reduce using rule 58 (E -> E POR E .)
    DIVIDIDO        reduce using rule 58 (E -> E POR E .)
    MODAL           reduce using rule 58 (E -> E POR E .)
    PARDER          reduce using rule 58 (E -> E POR E .)
    MENQUE          reduce using rule 58 (E -> E POR E .)
    MAYQUE          reduce using rule 58 (E -> E POR E .)
    IGUALQUE        reduce using rule 58 (E -> E POR E .)
    NIGUALQUE       reduce using rule 58 (E -> E POR E .)
    MENORIGUAL      reduce using rule 58 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 58 (E -> E POR E .)
    R_END           reduce using rule 58 (E -> E POR E .)
    R_ELSE          reduce using rule 58 (E -> E POR E .)
    AND             reduce using rule 58 (E -> E POR E .)
    OR              reduce using rule 58 (E -> E POR E .)
    R_ELSEIF        reduce using rule 58 (E -> E POR E .)
    R_IF            reduce using rule 58 (E -> E POR E .)
    R_FOR           reduce using rule 58 (E -> E POR E .)
    R_WHILE         reduce using rule 58 (E -> E POR E .)
    R_GLOBAL        reduce using rule 58 (E -> E POR E .)
    R_LOCAL         reduce using rule 58 (E -> E POR E .)
    R_PRINT         reduce using rule 58 (E -> E POR E .)
    R_PRINTLN       reduce using rule 58 (E -> E POR E .)
    ID              reduce using rule 58 (E -> E POR E .)
    R_PARSE         reduce using rule 58 (E -> E POR E .)
    R_TRUNC         reduce using rule 58 (E -> E POR E .)
    R_FLOAT         reduce using rule 58 (E -> E POR E .)
    R_STRING        reduce using rule 58 (E -> E POR E .)
    R_TYPEOF        reduce using rule 58 (E -> E POR E .)
    R_PUSH          reduce using rule 58 (E -> E POR E .)
    R_POP           reduce using rule 58 (E -> E POR E .)
    R_LENGTH        reduce using rule 58 (E -> E POR E .)
    R_BREAK         reduce using rule 58 (E -> E POR E .)
    R_CONTINUE      reduce using rule 58 (E -> E POR E .)
    R_RETURN        reduce using rule 58 (E -> E POR E .)
    PARIZQ          reduce using rule 58 (E -> E POR E .)
    R_LOG10         reduce using rule 58 (E -> E POR E .)
    R_SIN           reduce using rule 58 (E -> E POR E .)
    R_COS           reduce using rule 58 (E -> E POR E .)
    R_TAN           reduce using rule 58 (E -> E POR E .)
    R_SQRT          reduce using rule 58 (E -> E POR E .)
    R_UPPERCASE     reduce using rule 58 (E -> E POR E .)
    R_LOWERCASE     reduce using rule 58 (E -> E POR E .)
    R_LOG           reduce using rule 58 (E -> E POR E .)
    DECIMAL         reduce using rule 58 (E -> E POR E .)
    ENTERO          reduce using rule 58 (E -> E POR E .)
    R_TRUE          reduce using rule 58 (E -> E POR E .)
    R_FALSE         reduce using rule 58 (E -> E POR E .)
    R_NOTHING       reduce using rule 58 (E -> E POR E .)
    CADENA          reduce using rule 58 (E -> E POR E .)
    PTCOMA          reduce using rule 58 (E -> E POR E .)
    COMA            reduce using rule 58 (E -> E POR E .)
    CORDER          reduce using rule 58 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 58 (E -> E POR E .)
    DOSPUNTITOS     reduce using rule 58 (E -> E POR E .)
    POTENCIA        shift and go to state 87

  ! POTENCIA        [ reduce using rule 58 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODAL           [ shift and go to state 86 ]


state 165

    (59) E -> E DIVIDIDO E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 59 (E -> E DIVIDIDO E .)
    MAS             reduce using rule 59 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 59 (E -> E DIVIDIDO E .)
    POR             reduce using rule 59 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 59 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 59 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 59 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 59 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 59 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 59 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 59 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 59 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 59 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 59 (E -> E DIVIDIDO E .)
    AND             reduce using rule 59 (E -> E DIVIDIDO E .)
    OR              reduce using rule 59 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 59 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 59 (E -> E DIVIDIDO E .)
    ID              reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_STRING        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LENGTH        reduce using rule 59 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 59 (E -> E DIVIDIDO E .)
    R_RETURN        reduce using rule 59 (E -> E DIVIDIDO E .)
    PARIZQ          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LOG10         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_SIN           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_COS           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TAN           reduce using rule 59 (E -> E DIVIDIDO E .)
    R_SQRT          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_UPPERCASE     reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LOWERCASE     reduce using rule 59 (E -> E DIVIDIDO E .)
    R_LOG           reduce using rule 59 (E -> E DIVIDIDO E .)
    DECIMAL         reduce using rule 59 (E -> E DIVIDIDO E .)
    ENTERO          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_TRUE          reduce using rule 59 (E -> E DIVIDIDO E .)
    R_FALSE         reduce using rule 59 (E -> E DIVIDIDO E .)
    R_NOTHING       reduce using rule 59 (E -> E DIVIDIDO E .)
    CADENA          reduce using rule 59 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 59 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 59 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 59 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 59 (E -> E DIVIDIDO E .)
    DOSPUNTITOS     reduce using rule 59 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 87

  ! POTENCIA        [ reduce using rule 59 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODAL           [ shift and go to state 86 ]


state 166

    (60) E -> E MODAL E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 60 (E -> E MODAL E .)
    MAS             reduce using rule 60 (E -> E MODAL E .)
    MENOS           reduce using rule 60 (E -> E MODAL E .)
    POR             reduce using rule 60 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 60 (E -> E MODAL E .)
    MODAL           reduce using rule 60 (E -> E MODAL E .)
    PARDER          reduce using rule 60 (E -> E MODAL E .)
    MENQUE          reduce using rule 60 (E -> E MODAL E .)
    MAYQUE          reduce using rule 60 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 60 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 60 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 60 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 60 (E -> E MODAL E .)
    R_END           reduce using rule 60 (E -> E MODAL E .)
    R_ELSE          reduce using rule 60 (E -> E MODAL E .)
    AND             reduce using rule 60 (E -> E MODAL E .)
    OR              reduce using rule 60 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 60 (E -> E MODAL E .)
    R_IF            reduce using rule 60 (E -> E MODAL E .)
    R_FOR           reduce using rule 60 (E -> E MODAL E .)
    R_WHILE         reduce using rule 60 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 60 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 60 (E -> E MODAL E .)
    R_PRINT         reduce using rule 60 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 60 (E -> E MODAL E .)
    ID              reduce using rule 60 (E -> E MODAL E .)
    R_PARSE         reduce using rule 60 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 60 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 60 (E -> E MODAL E .)
    R_STRING        reduce using rule 60 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 60 (E -> E MODAL E .)
    R_PUSH          reduce using rule 60 (E -> E MODAL E .)
    R_POP           reduce using rule 60 (E -> E MODAL E .)
    R_LENGTH        reduce using rule 60 (E -> E MODAL E .)
    R_BREAK         reduce using rule 60 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 60 (E -> E MODAL E .)
    R_RETURN        reduce using rule 60 (E -> E MODAL E .)
    PARIZQ          reduce using rule 60 (E -> E MODAL E .)
    R_LOG10         reduce using rule 60 (E -> E MODAL E .)
    R_SIN           reduce using rule 60 (E -> E MODAL E .)
    R_COS           reduce using rule 60 (E -> E MODAL E .)
    R_TAN           reduce using rule 60 (E -> E MODAL E .)
    R_SQRT          reduce using rule 60 (E -> E MODAL E .)
    R_UPPERCASE     reduce using rule 60 (E -> E MODAL E .)
    R_LOWERCASE     reduce using rule 60 (E -> E MODAL E .)
    R_LOG           reduce using rule 60 (E -> E MODAL E .)
    DECIMAL         reduce using rule 60 (E -> E MODAL E .)
    ENTERO          reduce using rule 60 (E -> E MODAL E .)
    R_TRUE          reduce using rule 60 (E -> E MODAL E .)
    R_FALSE         reduce using rule 60 (E -> E MODAL E .)
    R_NOTHING       reduce using rule 60 (E -> E MODAL E .)
    CADENA          reduce using rule 60 (E -> E MODAL E .)
    PTCOMA          reduce using rule 60 (E -> E MODAL E .)
    COMA            reduce using rule 60 (E -> E MODAL E .)
    CORDER          reduce using rule 60 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 60 (E -> E MODAL E .)
    DOSPUNTITOS     reduce using rule 60 (E -> E MODAL E .)
    POTENCIA        shift and go to state 87

  ! POTENCIA        [ reduce using rule 60 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODAL           [ shift and go to state 86 ]


state 167

    (61) E -> E POTENCIA E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    IGUAL           reduce using rule 61 (E -> E POTENCIA E .)
    MAS             reduce using rule 61 (E -> E POTENCIA E .)
    MENOS           reduce using rule 61 (E -> E POTENCIA E .)
    POR             reduce using rule 61 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 61 (E -> E POTENCIA E .)
    MODAL           reduce using rule 61 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 61 (E -> E POTENCIA E .)
    PARDER          reduce using rule 61 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 61 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 61 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 61 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 61 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 61 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 61 (E -> E POTENCIA E .)
    R_END           reduce using rule 61 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 61 (E -> E POTENCIA E .)
    AND             reduce using rule 61 (E -> E POTENCIA E .)
    OR              reduce using rule 61 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 61 (E -> E POTENCIA E .)
    R_IF            reduce using rule 61 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 61 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 61 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 61 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 61 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 61 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 61 (E -> E POTENCIA E .)
    ID              reduce using rule 61 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 61 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 61 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 61 (E -> E POTENCIA E .)
    R_STRING        reduce using rule 61 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 61 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 61 (E -> E POTENCIA E .)
    R_POP           reduce using rule 61 (E -> E POTENCIA E .)
    R_LENGTH        reduce using rule 61 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 61 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 61 (E -> E POTENCIA E .)
    R_RETURN        reduce using rule 61 (E -> E POTENCIA E .)
    PARIZQ          reduce using rule 61 (E -> E POTENCIA E .)
    R_LOG10         reduce using rule 61 (E -> E POTENCIA E .)
    R_SIN           reduce using rule 61 (E -> E POTENCIA E .)
    R_COS           reduce using rule 61 (E -> E POTENCIA E .)
    R_TAN           reduce using rule 61 (E -> E POTENCIA E .)
    R_SQRT          reduce using rule 61 (E -> E POTENCIA E .)
    R_UPPERCASE     reduce using rule 61 (E -> E POTENCIA E .)
    R_LOWERCASE     reduce using rule 61 (E -> E POTENCIA E .)
    R_LOG           reduce using rule 61 (E -> E POTENCIA E .)
    DECIMAL         reduce using rule 61 (E -> E POTENCIA E .)
    ENTERO          reduce using rule 61 (E -> E POTENCIA E .)
    R_TRUE          reduce using rule 61 (E -> E POTENCIA E .)
    R_FALSE         reduce using rule 61 (E -> E POTENCIA E .)
    R_NOTHING       reduce using rule 61 (E -> E POTENCIA E .)
    CADENA          reduce using rule 61 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 61 (E -> E POTENCIA E .)
    COMA            reduce using rule 61 (E -> E POTENCIA E .)
    CORDER          reduce using rule 61 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 61 (E -> E POTENCIA E .)
    DOSPUNTITOS     reduce using rule 61 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 82 ]
  ! MENOS           [ shift and go to state 83 ]
  ! POR             [ shift and go to state 84 ]
  ! DIVIDIDO        [ shift and go to state 85 ]
  ! MODAL           [ shift and go to state 86 ]
  ! POTENCIA        [ shift and go to state 87 ]


state 168

    (37) ASIGNACION -> R_LOCAL E IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL E IGUAL . LISTA DOSPUNTOS ID PTCOMA
    (43) ASIGNACION -> R_LOCAL E IGUAL . LISTA PTCOMA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 77
    LISTA                          shift and go to state 252
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 169

    (46) ASIGNACION -> R_LOCAL E PTCOMA .

    R_IF            reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FOR           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_WHILE         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_GLOBAL        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOCAL         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PRINT         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PRINTLN       reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    ID              reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PARSE         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TRUNC         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FLOAT         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_STRING        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TYPEOF        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_PUSH          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_POP           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LENGTH        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_BREAK         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_CONTINUE      reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_RETURN        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    MENOS           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    PARIZQ          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOG10         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_SIN           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_COS           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TAN           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_SQRT          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_UPPERCASE     reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOWERCASE     reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_LOG           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    DECIMAL         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    ENTERO          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_TRUE          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FALSE         reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_NOTHING       reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    CADENA          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_FUNCTION      reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_MUTABLE       reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_STRUCT        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    $end            reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_END           reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_ELSE          reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)
    R_ELSEIF        reduce using rule 46 (ASIGNACION -> R_LOCAL E PTCOMA .)


state 170

    (18) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (22) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 253
    COMA            shift and go to state 254


state 171

    (21) I -> R_PRINT PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 255


state 172

    (23) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 23 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 23 (IMPRESIONES -> IMPRESION .)


state 173

    (24) IMPRESION -> ARREGLOS .
    (29) ARREGLOS -> ARREGLOS . COMA ARREGLO

  ! shift/reduce conflict for COMA resolved as shift
    PARDER          reduce using rule 24 (IMPRESION -> ARREGLOS .)
    COMA            shift and go to state 196

  ! COMA            [ reduce using rule 24 (IMPRESION -> ARREGLOS .) ]


state 174

    (25) IMPRESION -> LO .
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    PARDER          reduce using rule 25 (IMPRESION -> LO .)
    COMA            reduce using rule 25 (IMPRESION -> LO .)
    AND             shift and go to state 133
    OR              shift and go to state 134


state 175

    (26) IMPRESION -> DOLAR . PARIZQ E PARDER
    (27) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (28) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 256


state 176

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (22) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 257
    COMA            shift and go to state 254


state 177

    (20) I -> R_PRINTLN PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 258


state 178

    (99) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 259


state 179

    (48) TIPO -> R_NOTHING .

    COMA            reduce using rule 48 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 48 (TIPO -> R_NOTHING .)


state 180

    (49) TIPO -> R_INT64 .

    COMA            reduce using rule 49 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 49 (TIPO -> R_INT64 .)


state 181

    (50) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 50 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 50 (TIPO -> R_FLOAT64 .)


state 182

    (51) TIPO -> R_STRING .

    COMA            reduce using rule 51 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 51 (TIPO -> R_STRING .)


state 183

    (52) TIPO -> R_CHAR .

    COMA            reduce using rule 52 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 52 (TIPO -> R_CHAR .)


state 184

    (53) TIPO -> R_BOOL .

    COMA            reduce using rule 53 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 53 (TIPO -> R_BOOL .)


state 185

    (100) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 260


state 186

    (104) NATIVAS -> R_TRUNC PARIZQ LISTA . PARDER

    PARDER          shift and go to state 261


state 187

    (48) TIPO -> R_NOTHING .
    (76) E -> R_NOTHING .

    COMA            reduce using rule 48 (TIPO -> R_NOTHING .)
    MAS             reduce using rule 76 (E -> R_NOTHING .)
    MENOS           reduce using rule 76 (E -> R_NOTHING .)
    POR             reduce using rule 76 (E -> R_NOTHING .)
    DIVIDIDO        reduce using rule 76 (E -> R_NOTHING .)
    MODAL           reduce using rule 76 (E -> R_NOTHING .)
    POTENCIA        reduce using rule 76 (E -> R_NOTHING .)
    MENQUE          reduce using rule 76 (E -> R_NOTHING .)
    MAYQUE          reduce using rule 76 (E -> R_NOTHING .)
    IGUALQUE        reduce using rule 76 (E -> R_NOTHING .)
    NIGUALQUE       reduce using rule 76 (E -> R_NOTHING .)
    MENORIGUAL      reduce using rule 76 (E -> R_NOTHING .)
    MAYORIGUAL      reduce using rule 76 (E -> R_NOTHING .)
    AND             reduce using rule 76 (E -> R_NOTHING .)
    OR              reduce using rule 76 (E -> R_NOTHING .)
    PARDER          reduce using rule 76 (E -> R_NOTHING .)


state 188

    (51) TIPO -> R_STRING .
    (102) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    COMA            reduce using rule 51 (TIPO -> R_STRING .)
    PARIZQ          shift and go to state 94


state 189

    (101) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 262


state 190

    (102) NATIVAS -> R_STRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 263


state 191

    (103) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 264


state 192

    (105) NATIVAS -> R_PUSH DIFERENTE PARIZQ . E COMA LISTA PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 265
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 193

    (106) NATIVAS -> R_POP DIFERENTE PARIZQ . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 266
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 194

    (107) NATIVAS -> R_LENGTH PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 267
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 195

    (108) RETURN -> R_RETURN LISTA PTCOMA .

    R_IF            reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FOR           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_WHILE         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOCAL         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINT         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    ID              reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PARSE         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TRUNC         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FLOAT         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRING        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PUSH          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_POP           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LENGTH        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_BREAK         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_RETURN        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    MENOS           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    PARIZQ          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOG10         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_SIN           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_COS           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TAN           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_SQRT          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOG           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    DECIMAL         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    ENTERO          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TRUE          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FALSE         reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_NOTHING       reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    CADENA          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRUCT        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    $end            reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_END           reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSE          reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 108 (RETURN -> R_RETURN LISTA PTCOMA .)


state 196

    (29) ARREGLOS -> ARREGLOS COMA . ARREGLO
    (31) ARREGLO -> . CORIZQ LISTAS CORDER

    CORIZQ          shift and go to state 106

    ARREGLO                        shift and go to state 268

state 197

    (31) ARREGLO -> CORIZQ LISTAS . CORDER
    (32) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 269
    COMA            shift and go to state 213


state 198

    (64) E -> R_LOG10 PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 270
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 199

    (65) E -> R_SIN PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 271
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 200

    (66) E -> R_COS PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 272
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 201

    (67) E -> R_TAN PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 273
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 202

    (68) E -> R_SQRT PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 274
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 203

    (69) E -> R_UPPERCASE PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 275
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 204

    (70) E -> R_LOWERCASE PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 276
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 205

    (71) E -> R_LOG PARIZQ E . COMA E PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    COMA            shift and go to state 277
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 206

    (162) ACCESOS -> ACCESOS PUNTO ACCESO .

    PUNTO           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    IGUAL           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MAS             reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MENOS           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    POR             reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    DIVIDIDO        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MODAL           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    POTENCIA        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    PARDER          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MENQUE          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MAYQUE          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    IGUALQUE        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    NIGUALQUE       reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MENORIGUAL      reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    MAYORIGUAL      reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_END           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_ELSE          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    AND             reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    OR              reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_ELSEIF        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_IF            reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_FOR           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_WHILE         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_GLOBAL        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_LOCAL         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_PRINT         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_PRINTLN       reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    ID              reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_PARSE         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_TRUNC         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_FLOAT         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_STRING        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_TYPEOF        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_PUSH          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_POP           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_LENGTH        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_BREAK         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_CONTINUE      reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_RETURN        reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    PARIZQ          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_LOG10         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_SIN           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_COS           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_TAN           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_SQRT          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_UPPERCASE     reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_LOWERCASE     reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_LOG           reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    DECIMAL         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    ENTERO          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_TRUE          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_FALSE         reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    R_NOTHING       reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    CADENA          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    PTCOMA          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    COMA            reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    CORDER          reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    DOSPUNTOS       reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)
    DOSPUNTITOS     reduce using rule 162 (ACCESOS -> ACCESOS PUNTO ACCESO .)


state 207

    (164) ACCESO -> ID .

    PUNTO           reduce using rule 164 (ACCESO -> ID .)
    IGUAL           reduce using rule 164 (ACCESO -> ID .)
    MAS             reduce using rule 164 (ACCESO -> ID .)
    MENOS           reduce using rule 164 (ACCESO -> ID .)
    POR             reduce using rule 164 (ACCESO -> ID .)
    DIVIDIDO        reduce using rule 164 (ACCESO -> ID .)
    MODAL           reduce using rule 164 (ACCESO -> ID .)
    POTENCIA        reduce using rule 164 (ACCESO -> ID .)
    PARDER          reduce using rule 164 (ACCESO -> ID .)
    MENQUE          reduce using rule 164 (ACCESO -> ID .)
    MAYQUE          reduce using rule 164 (ACCESO -> ID .)
    IGUALQUE        reduce using rule 164 (ACCESO -> ID .)
    NIGUALQUE       reduce using rule 164 (ACCESO -> ID .)
    MENORIGUAL      reduce using rule 164 (ACCESO -> ID .)
    MAYORIGUAL      reduce using rule 164 (ACCESO -> ID .)
    R_END           reduce using rule 164 (ACCESO -> ID .)
    R_ELSE          reduce using rule 164 (ACCESO -> ID .)
    AND             reduce using rule 164 (ACCESO -> ID .)
    OR              reduce using rule 164 (ACCESO -> ID .)
    R_ELSEIF        reduce using rule 164 (ACCESO -> ID .)
    R_IF            reduce using rule 164 (ACCESO -> ID .)
    R_FOR           reduce using rule 164 (ACCESO -> ID .)
    R_WHILE         reduce using rule 164 (ACCESO -> ID .)
    R_GLOBAL        reduce using rule 164 (ACCESO -> ID .)
    R_LOCAL         reduce using rule 164 (ACCESO -> ID .)
    R_PRINT         reduce using rule 164 (ACCESO -> ID .)
    R_PRINTLN       reduce using rule 164 (ACCESO -> ID .)
    ID              reduce using rule 164 (ACCESO -> ID .)
    R_PARSE         reduce using rule 164 (ACCESO -> ID .)
    R_TRUNC         reduce using rule 164 (ACCESO -> ID .)
    R_FLOAT         reduce using rule 164 (ACCESO -> ID .)
    R_STRING        reduce using rule 164 (ACCESO -> ID .)
    R_TYPEOF        reduce using rule 164 (ACCESO -> ID .)
    R_PUSH          reduce using rule 164 (ACCESO -> ID .)
    R_POP           reduce using rule 164 (ACCESO -> ID .)
    R_LENGTH        reduce using rule 164 (ACCESO -> ID .)
    R_BREAK         reduce using rule 164 (ACCESO -> ID .)
    R_CONTINUE      reduce using rule 164 (ACCESO -> ID .)
    R_RETURN        reduce using rule 164 (ACCESO -> ID .)
    PARIZQ          reduce using rule 164 (ACCESO -> ID .)
    R_LOG10         reduce using rule 164 (ACCESO -> ID .)
    R_SIN           reduce using rule 164 (ACCESO -> ID .)
    R_COS           reduce using rule 164 (ACCESO -> ID .)
    R_TAN           reduce using rule 164 (ACCESO -> ID .)
    R_SQRT          reduce using rule 164 (ACCESO -> ID .)
    R_UPPERCASE     reduce using rule 164 (ACCESO -> ID .)
    R_LOWERCASE     reduce using rule 164 (ACCESO -> ID .)
    R_LOG           reduce using rule 164 (ACCESO -> ID .)
    DECIMAL         reduce using rule 164 (ACCESO -> ID .)
    ENTERO          reduce using rule 164 (ACCESO -> ID .)
    R_TRUE          reduce using rule 164 (ACCESO -> ID .)
    R_FALSE         reduce using rule 164 (ACCESO -> ID .)
    R_NOTHING       reduce using rule 164 (ACCESO -> ID .)
    CADENA          reduce using rule 164 (ACCESO -> ID .)
    PTCOMA          reduce using rule 164 (ACCESO -> ID .)
    COMA            reduce using rule 164 (ACCESO -> ID .)
    CORDER          reduce using rule 164 (ACCESO -> ID .)
    DOSPUNTOS       reduce using rule 164 (ACCESO -> ID .)
    DOSPUNTITOS     reduce using rule 164 (ACCESO -> ID .)


state 208

    (116) PARAMETRO -> ID .

    PARDER          reduce using rule 116 (PARAMETRO -> ID .)
    COMA            reduce using rule 116 (PARAMETRO -> ID .)


state 209

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER R_END PTCOMA
    (114) PARAMETROS -> PARAMETROS . COMA PARAMETRO

    PARDER          shift and go to state 278
    COMA            shift and go to state 279


state 210

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 281
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 280
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 211

    (115) PARAMETROS -> PARAMETRO .

    PARDER          reduce using rule 115 (PARAMETROS -> PARAMETRO .)
    COMA            reduce using rule 115 (PARAMETROS -> PARAMETRO .)


state 212

    (54) LLAMADAS -> ID PARIZQ LISTAS PARDER .

    PTCOMA          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    IGUAL           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAS             reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENOS           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POR             reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DIVIDIDO        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MODAL           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POTENCIA        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    PARDER          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENQUE          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYQUE          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    IGUALQUE        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    NIGUALQUE       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENORIGUAL      reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYORIGUAL      reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_END           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSE          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    AND             reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    OR              reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSEIF        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_IF            reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FOR           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_WHILE         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_GLOBAL        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOCAL         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINT         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINTLN       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    ID              reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PARSE         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TRUNC         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FLOAT         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_STRING        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TYPEOF        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PUSH          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_POP           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LENGTH        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_BREAK         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_CONTINUE      reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_RETURN        reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    PARIZQ          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOG10         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_SIN           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_COS           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TAN           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_SQRT          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_UPPERCASE     reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOWERCASE     reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOG           reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DECIMAL         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    ENTERO          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TRUE          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FALSE         reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_NOTHING       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    CADENA          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    COMA            reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    CORDER          reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTOS       reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTITOS     reduce using rule 54 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)


state 213

    (32) LISTAS -> LISTAS COMA . LISTA
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 282
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 214

    (84) ARRAY -> CORIZQ E CORDER .

    CORIZQ          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    IGUAL           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MAS             reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MENOS           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    POR             reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    DIVIDIDO        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MODAL           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    POTENCIA        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    PARDER          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MENQUE          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MAYQUE          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    IGUALQUE        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    NIGUALQUE       reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MENORIGUAL      reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    MAYORIGUAL      reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_END           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_ELSE          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    AND             reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    OR              reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_ELSEIF        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_IF            reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_FOR           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_WHILE         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_GLOBAL        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_LOCAL         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_PRINT         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_PRINTLN       reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    ID              reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_PARSE         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_TRUNC         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_FLOAT         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_STRING        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_TYPEOF        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_PUSH          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_POP           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_LENGTH        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_BREAK         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_CONTINUE      reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_RETURN        reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    PARIZQ          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_LOG10         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_SIN           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_COS           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_TAN           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_SQRT          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_UPPERCASE     reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_LOWERCASE     reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_LOG           reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    DECIMAL         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    ENTERO          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_TRUE          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_FALSE         reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    R_NOTHING       reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    CADENA          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    PTCOMA          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    COMA            reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    CORDER          reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    DOSPUNTOS       reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)
    DOSPUNTITOS     reduce using rule 84 (ARRAY -> CORIZQ E CORDER .)


state 215

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (157) ELEMENTOS -> ELEMENTOS . ELEMENTO
    (159) ELEMENTO -> . ID PTCOMA
    (160) ELEMENTO -> . ID DOSPUNTOS TIPO PTCOMA
    (161) ELEMENTO -> . ID DOSPUNTOS ID PTCOMA

    R_END           shift and go to state 283
    ID              shift and go to state 125

    ELEMENTO                       shift and go to state 220

state 216

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 284


state 217

    (159) ELEMENTO -> ID PTCOMA .

    R_END           reduce using rule 159 (ELEMENTO -> ID PTCOMA .)
    ID              reduce using rule 159 (ELEMENTO -> ID PTCOMA .)


state 218

    (160) ELEMENTO -> ID DOSPUNTOS . TIPO PTCOMA
    (161) ELEMENTO -> ID DOSPUNTOS . ID PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    ID              shift and go to state 285
    R_NOTHING       shift and go to state 179
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 182
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184

    TIPO                           shift and go to state 286

state 219

    (154) STRUCTS -> R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 287


state 220

    (157) ELEMENTOS -> ELEMENTOS ELEMENTO .

    R_END           reduce using rule 157 (ELEMENTOS -> ELEMENTOS ELEMENTO .)
    ID              reduce using rule 157 (ELEMENTOS -> ELEMENTOS ELEMENTO .)


state 221

    (156) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_FUNCTION      reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_IF            reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LENGTH        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    MENOS           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    PARIZQ          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOG10         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_SIN           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_COS           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TAN           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_SQRT          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOG           reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    DECIMAL         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ENTERO          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUE          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FALSE         reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_NOTHING       reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    CADENA          reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 156 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 222

    (117) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 288


state 223

    (118) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (123) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 290
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 289
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 224

    (119) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LENGTH        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    MENOS           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    PARIZQ          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOG10         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_SIN           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_COS           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TAN           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_SQRT          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_UPPERCASE     reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOWERCASE     reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOG           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    DECIMAL         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ENTERO          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUE          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FALSE         reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_NOTHING       reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    CADENA          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 119 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 225

    (120) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRING        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    MENOS           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    PARIZQ          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOG10         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_SIN           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_COS           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_TAN           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_SQRT          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOG           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    DECIMAL         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    ENTERO          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUE          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_FALSE         reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_NOTHING       reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    CADENA          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 120 (IFS -> R_IF LO R_END PTCOMA .)


state 226

    (121) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 291
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 227

    (124) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 292


state 228

    (94) LO -> LO AND LO .
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    R_END           reduce using rule 94 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 94 (LO -> LO AND LO .)
    AND             reduce using rule 94 (LO -> LO AND LO .)
    OR              reduce using rule 94 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 94 (LO -> LO AND LO .)
    R_IF            reduce using rule 94 (LO -> LO AND LO .)
    R_FOR           reduce using rule 94 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 94 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 94 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 94 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 94 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 94 (LO -> LO AND LO .)
    ID              reduce using rule 94 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 94 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 94 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 94 (LO -> LO AND LO .)
    R_STRING        reduce using rule 94 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 94 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 94 (LO -> LO AND LO .)
    R_POP           reduce using rule 94 (LO -> LO AND LO .)
    R_LENGTH        reduce using rule 94 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 94 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 94 (LO -> LO AND LO .)
    R_RETURN        reduce using rule 94 (LO -> LO AND LO .)
    MENOS           reduce using rule 94 (LO -> LO AND LO .)
    PARIZQ          reduce using rule 94 (LO -> LO AND LO .)
    R_LOG10         reduce using rule 94 (LO -> LO AND LO .)
    R_SIN           reduce using rule 94 (LO -> LO AND LO .)
    R_COS           reduce using rule 94 (LO -> LO AND LO .)
    R_TAN           reduce using rule 94 (LO -> LO AND LO .)
    R_SQRT          reduce using rule 94 (LO -> LO AND LO .)
    R_UPPERCASE     reduce using rule 94 (LO -> LO AND LO .)
    R_LOWERCASE     reduce using rule 94 (LO -> LO AND LO .)
    R_LOG           reduce using rule 94 (LO -> LO AND LO .)
    DECIMAL         reduce using rule 94 (LO -> LO AND LO .)
    ENTERO          reduce using rule 94 (LO -> LO AND LO .)
    R_TRUE          reduce using rule 94 (LO -> LO AND LO .)
    R_FALSE         reduce using rule 94 (LO -> LO AND LO .)
    R_NOTHING       reduce using rule 94 (LO -> LO AND LO .)
    CADENA          reduce using rule 94 (LO -> LO AND LO .)
    PTCOMA          reduce using rule 94 (LO -> LO AND LO .)
    PARDER          reduce using rule 94 (LO -> LO AND LO .)
    COMA            reduce using rule 94 (LO -> LO AND LO .)
    DOSPUNTOS       reduce using rule 94 (LO -> LO AND LO .)
    CORDER          reduce using rule 94 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 133 ]
  ! OR              [ shift and go to state 134 ]


state 229

    (95) LO -> LO OR LO .
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO

    R_END           reduce using rule 95 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 95 (LO -> LO OR LO .)
    OR              reduce using rule 95 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 95 (LO -> LO OR LO .)
    R_IF            reduce using rule 95 (LO -> LO OR LO .)
    R_FOR           reduce using rule 95 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 95 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 95 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 95 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 95 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 95 (LO -> LO OR LO .)
    ID              reduce using rule 95 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 95 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 95 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 95 (LO -> LO OR LO .)
    R_STRING        reduce using rule 95 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 95 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 95 (LO -> LO OR LO .)
    R_POP           reduce using rule 95 (LO -> LO OR LO .)
    R_LENGTH        reduce using rule 95 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 95 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 95 (LO -> LO OR LO .)
    R_RETURN        reduce using rule 95 (LO -> LO OR LO .)
    MENOS           reduce using rule 95 (LO -> LO OR LO .)
    PARIZQ          reduce using rule 95 (LO -> LO OR LO .)
    R_LOG10         reduce using rule 95 (LO -> LO OR LO .)
    R_SIN           reduce using rule 95 (LO -> LO OR LO .)
    R_COS           reduce using rule 95 (LO -> LO OR LO .)
    R_TAN           reduce using rule 95 (LO -> LO OR LO .)
    R_SQRT          reduce using rule 95 (LO -> LO OR LO .)
    R_UPPERCASE     reduce using rule 95 (LO -> LO OR LO .)
    R_LOWERCASE     reduce using rule 95 (LO -> LO OR LO .)
    R_LOG           reduce using rule 95 (LO -> LO OR LO .)
    DECIMAL         reduce using rule 95 (LO -> LO OR LO .)
    ENTERO          reduce using rule 95 (LO -> LO OR LO .)
    R_TRUE          reduce using rule 95 (LO -> LO OR LO .)
    R_FALSE         reduce using rule 95 (LO -> LO OR LO .)
    R_NOTHING       reduce using rule 95 (LO -> LO OR LO .)
    CADENA          reduce using rule 95 (LO -> LO OR LO .)
    PTCOMA          reduce using rule 95 (LO -> LO OR LO .)
    PARDER          reduce using rule 95 (LO -> LO OR LO .)
    COMA            reduce using rule 95 (LO -> LO OR LO .)
    DOSPUNTOS       reduce using rule 95 (LO -> LO OR LO .)
    CORDER          reduce using rule 95 (LO -> LO OR LO .)
    AND             shift and go to state 133

  ! AND             [ reduce using rule 95 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 134 ]


state 230

    (125) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (128) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (129) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> R_ELSEIF LO . ELSEIF
    (131) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (94) LO -> LO . AND LO
    (95) LO -> LO . OR LO
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (128) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> . R_ELSEIF LO ELSEIF
    (131) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 294
    R_ELSE          shift and go to state 295
    AND             shift and go to state 133
    OR              shift and go to state 134
    R_ELSEIF        shift and go to state 135
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 293
    ELSEIF                         shift and go to state 296
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 231

    (97) LO -> PARIZQ LO PARDER .

    R_END           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_ELSE          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    AND             reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    OR              reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_ELSEIF        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_IF            reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_FOR           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_WHILE         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_GLOBAL        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_LOCAL         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_PRINT         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_PRINTLN       reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    ID              reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_PARSE         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_TRUNC         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_FLOAT         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_STRING        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_TYPEOF        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_PUSH          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_POP           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_LENGTH        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_BREAK         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_CONTINUE      reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_RETURN        reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    MENOS           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    PARIZQ          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_LOG10         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_SIN           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_COS           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_TAN           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_SQRT          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_UPPERCASE     reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_LOWERCASE     reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_LOG           reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    DECIMAL         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    ENTERO          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_TRUE          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_FALSE         reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    R_NOTHING       reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    CADENA          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    PTCOMA          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    PARDER          reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    COMA            reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    DOSPUNTOS       reduce using rule 97 (LO -> PARIZQ LO PARDER .)
    CORDER          reduce using rule 97 (LO -> PARIZQ LO PARDER .)


state 232

    (92) RE -> PARIZQ RE PARDER .

    MENQUE          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    MAYQUE          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    IGUALQUE        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    NIGUALQUE       reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    MENORIGUAL      reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    MAYORIGUAL      reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_END           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_ELSE          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    AND             reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    OR              reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_ELSEIF        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_IF            reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_FOR           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_WHILE         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_GLOBAL        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_LOCAL         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_PRINT         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_PRINTLN       reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    ID              reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_PARSE         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_TRUNC         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_FLOAT         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_STRING        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_TYPEOF        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_PUSH          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_POP           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_LENGTH        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_BREAK         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_CONTINUE      reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_RETURN        reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    MENOS           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    PARIZQ          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_LOG10         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_SIN           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_COS           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_TAN           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_SQRT          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_UPPERCASE     reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_LOWERCASE     reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_LOG           reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    DECIMAL         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    ENTERO          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_TRUE          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_FALSE         reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    R_NOTHING       reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    CADENA          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    PTCOMA          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    PARDER          reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    COMA            reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    DOSPUNTOS       reduce using rule 92 (RE -> PARIZQ RE PARDER .)
    CORDER          reduce using rule 92 (RE -> PARIZQ RE PARDER .)


state 233

    (86) RE -> RE MENQUE RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 86 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 86 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 86 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 86 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 86 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 86 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 86 (RE -> RE MENQUE RE .)
    AND             reduce using rule 86 (RE -> RE MENQUE RE .)
    OR              reduce using rule 86 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 86 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 86 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 86 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 86 (RE -> RE MENQUE RE .)
    ID              reduce using rule 86 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_STRING        reduce using rule 86 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 86 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 86 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_LENGTH        reduce using rule 86 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 86 (RE -> RE MENQUE RE .)
    R_RETURN        reduce using rule 86 (RE -> RE MENQUE RE .)
    MENOS           reduce using rule 86 (RE -> RE MENQUE RE .)
    PARIZQ          reduce using rule 86 (RE -> RE MENQUE RE .)
    R_LOG10         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_SIN           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_COS           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_TAN           reduce using rule 86 (RE -> RE MENQUE RE .)
    R_SQRT          reduce using rule 86 (RE -> RE MENQUE RE .)
    R_UPPERCASE     reduce using rule 86 (RE -> RE MENQUE RE .)
    R_LOWERCASE     reduce using rule 86 (RE -> RE MENQUE RE .)
    R_LOG           reduce using rule 86 (RE -> RE MENQUE RE .)
    DECIMAL         reduce using rule 86 (RE -> RE MENQUE RE .)
    ENTERO          reduce using rule 86 (RE -> RE MENQUE RE .)
    R_TRUE          reduce using rule 86 (RE -> RE MENQUE RE .)
    R_FALSE         reduce using rule 86 (RE -> RE MENQUE RE .)
    R_NOTHING       reduce using rule 86 (RE -> RE MENQUE RE .)
    CADENA          reduce using rule 86 (RE -> RE MENQUE RE .)
    PTCOMA          reduce using rule 86 (RE -> RE MENQUE RE .)
    PARDER          reduce using rule 86 (RE -> RE MENQUE RE .)
    COMA            reduce using rule 86 (RE -> RE MENQUE RE .)
    DOSPUNTOS       reduce using rule 86 (RE -> RE MENQUE RE .)
    CORDER          reduce using rule 86 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 140 ]
  ! MAYQUE          [ shift and go to state 141 ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]
  ! MENORIGUAL      [ shift and go to state 144 ]
  ! MAYORIGUAL      [ shift and go to state 145 ]


state 234

    (92) RE -> PARIZQ . RE PARDER
    (63) E -> PARIZQ . E PARDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    PARIZQ          shift and go to state 234
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    RE                             shift and go to state 297
    E                              shift and go to state 139
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 235

    (87) RE -> RE MAYQUE RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 87 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 87 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 87 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 87 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 87 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 87 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 87 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 87 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_STRING        reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_LENGTH        reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_RETURN        reduce using rule 87 (RE -> RE MAYQUE RE .)
    MENOS           reduce using rule 87 (RE -> RE MAYQUE RE .)
    PARIZQ          reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_LOG10         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_SIN           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_COS           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_TAN           reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_SQRT          reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_UPPERCASE     reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_LOWERCASE     reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_LOG           reduce using rule 87 (RE -> RE MAYQUE RE .)
    DECIMAL         reduce using rule 87 (RE -> RE MAYQUE RE .)
    ENTERO          reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_TRUE          reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_FALSE         reduce using rule 87 (RE -> RE MAYQUE RE .)
    R_NOTHING       reduce using rule 87 (RE -> RE MAYQUE RE .)
    CADENA          reduce using rule 87 (RE -> RE MAYQUE RE .)
    PTCOMA          reduce using rule 87 (RE -> RE MAYQUE RE .)
    PARDER          reduce using rule 87 (RE -> RE MAYQUE RE .)
    COMA            reduce using rule 87 (RE -> RE MAYQUE RE .)
    DOSPUNTOS       reduce using rule 87 (RE -> RE MAYQUE RE .)
    CORDER          reduce using rule 87 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 140 ]
  ! MAYQUE          [ shift and go to state 141 ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]
  ! MENORIGUAL      [ shift and go to state 144 ]
  ! MAYORIGUAL      [ shift and go to state 145 ]


state 236

    (88) RE -> RE IGUALQUE RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 88 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 88 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_STRING        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_LENGTH        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_RETURN        reduce using rule 88 (RE -> RE IGUALQUE RE .)
    MENOS           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    PARIZQ          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_LOG10         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_SIN           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_COS           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_TAN           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_SQRT          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_UPPERCASE     reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_LOWERCASE     reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_LOG           reduce using rule 88 (RE -> RE IGUALQUE RE .)
    DECIMAL         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    ENTERO          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_TRUE          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_FALSE         reduce using rule 88 (RE -> RE IGUALQUE RE .)
    R_NOTHING       reduce using rule 88 (RE -> RE IGUALQUE RE .)
    CADENA          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    PTCOMA          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    PARDER          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    COMA            reduce using rule 88 (RE -> RE IGUALQUE RE .)
    DOSPUNTOS       reduce using rule 88 (RE -> RE IGUALQUE RE .)
    CORDER          reduce using rule 88 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 140
    MAYQUE          shift and go to state 141
    MENORIGUAL      shift and go to state 144
    MAYORIGUAL      shift and go to state 145

  ! MENQUE          [ reduce using rule 88 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 88 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 88 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 88 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]


state 237

    (89) RE -> RE NIGUALQUE RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_STRING        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_LENGTH        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_RETURN        reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    MENOS           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    PARIZQ          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_LOG10         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_SIN           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_COS           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_TAN           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_SQRT          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_UPPERCASE     reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_LOWERCASE     reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_LOG           reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    DECIMAL         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    ENTERO          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_TRUE          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_FALSE         reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    R_NOTHING       reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    CADENA          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    PTCOMA          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    PARDER          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    COMA            reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    DOSPUNTOS       reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    CORDER          reduce using rule 89 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 140
    MAYQUE          shift and go to state 141
    MENORIGUAL      shift and go to state 144
    MAYORIGUAL      shift and go to state 145

  ! MENQUE          [ reduce using rule 89 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 89 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 89 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 89 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]


state 238

    (90) RE -> RE MENORIGUAL RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_STRING        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_LENGTH        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_RETURN        reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    MENOS           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    PARIZQ          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_LOG10         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_SIN           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_COS           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_TAN           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_SQRT          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_UPPERCASE     reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_LOWERCASE     reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_LOG           reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    DECIMAL         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    ENTERO          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_TRUE          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_FALSE         reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    R_NOTHING       reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    CADENA          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    PTCOMA          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    PARDER          reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    COMA            reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    DOSPUNTOS       reduce using rule 90 (RE -> RE MENORIGUAL RE .)
    CORDER          reduce using rule 90 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 140 ]
  ! MAYQUE          [ shift and go to state 141 ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]
  ! MENORIGUAL      [ shift and go to state 144 ]
  ! MAYORIGUAL      [ shift and go to state 145 ]


state 239

    (91) RE -> RE MAYORIGUAL RE .
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_STRING        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_LENGTH        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_RETURN        reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    MENOS           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    PARIZQ          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_LOG10         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_SIN           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_COS           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_TAN           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_SQRT          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_UPPERCASE     reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_LOWERCASE     reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_LOG           reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    DECIMAL         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    ENTERO          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_TRUE          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_FALSE         reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    R_NOTHING       reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    CADENA          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    PTCOMA          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    PARDER          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    COMA            reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    DOSPUNTOS       reduce using rule 91 (RE -> RE MAYORIGUAL RE .)
    CORDER          reduce using rule 91 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 140 ]
  ! MAYQUE          [ shift and go to state 141 ]
  ! IGUALQUE        [ shift and go to state 142 ]
  ! NIGUALQUE       [ shift and go to state 143 ]
  ! MENORIGUAL      [ shift and go to state 144 ]
  ! MAYORIGUAL      [ shift and go to state 145 ]


state 240

    (152) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (80) E -> ID .
    (81) E -> ID . ARRAYS
    (54) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (55) LLAMADAS -> ID . PARIZQ PARDER
    (164) ACCESO -> ID .
    (82) ARRAYS -> . ARRAYS ARRAY
    (83) ARRAYS -> . ARRAY
    (84) ARRAY -> . CORIZQ E CORDER

  ! shift/reduce conflict for PARIZQ resolved as shift
  ! reduce/reduce conflict for DOSPUNTITOS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MAS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MENOS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DIVIDIDO resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for MODAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for POTENCIA resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_END resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_IF resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FOR resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_WHILE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_GLOBAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOCAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PRINT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PRINTLN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PARSE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TRUNC resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FLOAT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_STRING resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TYPEOF resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_PUSH resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_POP resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LENGTH resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_BREAK resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_CONTINUE resolved using rule 80 (E -> ID .)
  ! shift/reduce conflict for PARIZQ resolved as shift
  ! reduce/reduce conflict for R_LOG10 resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_SIN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_COS resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TAN resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_SQRT resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_UPPERCASE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOWERCASE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_LOG resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for ENTERO resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_TRUE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_FALSE resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for R_NOTHING resolved using rule 80 (E -> ID .)
  ! reduce/reduce conflict for CADENA resolved using rule 80 (E -> ID .)
    CORIZQ          shift and go to state 298
    DOSPUNTITOS     reduce using rule 80 (E -> ID .)
    MAS             reduce using rule 80 (E -> ID .)
    MENOS           reduce using rule 80 (E -> ID .)
    POR             reduce using rule 80 (E -> ID .)
    DIVIDIDO        reduce using rule 80 (E -> ID .)
    MODAL           reduce using rule 80 (E -> ID .)
    POTENCIA        reduce using rule 80 (E -> ID .)
    R_END           reduce using rule 80 (E -> ID .)
    R_IF            reduce using rule 80 (E -> ID .)
    R_FOR           reduce using rule 80 (E -> ID .)
    R_WHILE         reduce using rule 80 (E -> ID .)
    R_GLOBAL        reduce using rule 80 (E -> ID .)
    R_LOCAL         reduce using rule 80 (E -> ID .)
    R_PRINT         reduce using rule 80 (E -> ID .)
    R_PRINTLN       reduce using rule 80 (E -> ID .)
    ID              reduce using rule 80 (E -> ID .)
    R_PARSE         reduce using rule 80 (E -> ID .)
    R_TRUNC         reduce using rule 80 (E -> ID .)
    R_FLOAT         reduce using rule 80 (E -> ID .)
    R_STRING        reduce using rule 80 (E -> ID .)
    R_TYPEOF        reduce using rule 80 (E -> ID .)
    R_PUSH          reduce using rule 80 (E -> ID .)
    R_POP           reduce using rule 80 (E -> ID .)
    R_LENGTH        reduce using rule 80 (E -> ID .)
    R_BREAK         reduce using rule 80 (E -> ID .)
    R_CONTINUE      reduce using rule 80 (E -> ID .)
    R_LOG10         reduce using rule 80 (E -> ID .)
    R_SIN           reduce using rule 80 (E -> ID .)
    R_COS           reduce using rule 80 (E -> ID .)
    R_TAN           reduce using rule 80 (E -> ID .)
    R_SQRT          reduce using rule 80 (E -> ID .)
    R_UPPERCASE     reduce using rule 80 (E -> ID .)
    R_LOWERCASE     reduce using rule 80 (E -> ID .)
    R_LOG           reduce using rule 80 (E -> ID .)
    DECIMAL         reduce using rule 80 (E -> ID .)
    ENTERO          reduce using rule 80 (E -> ID .)
    R_TRUE          reduce using rule 80 (E -> ID .)
    R_FALSE         reduce using rule 80 (E -> ID .)
    R_NOTHING       reduce using rule 80 (E -> ID .)
    CADENA          reduce using rule 80 (E -> ID .)
    PARIZQ          shift and go to state 61
    PUNTO           reduce using rule 164 (ACCESO -> ID .)

  ! PARIZQ          [ reduce using rule 80 (E -> ID .) ]
  ! DOSPUNTITOS     [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MAS             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MENOS           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POR             [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DIVIDIDO        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! MODAL           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! POTENCIA        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_END           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_IF            [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FOR           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_WHILE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_GLOBAL        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOCAL         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PRINT         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PRINTLN       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! ID              [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PARSE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TRUNC         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FLOAT         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_STRING        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TYPEOF        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_PUSH          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_POP           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LENGTH        [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_BREAK         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_CONTINUE      [ reduce using rule 164 (ACCESO -> ID .) ]
  ! PARIZQ          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOG10         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_SIN           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_COS           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TAN           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_SQRT          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_UPPERCASE     [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOWERCASE     [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_LOG           [ reduce using rule 164 (ACCESO -> ID .) ]
  ! DECIMAL         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! ENTERO          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_TRUE          [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_FALSE         [ reduce using rule 164 (ACCESO -> ID .) ]
  ! R_NOTHING       [ reduce using rule 164 (ACCESO -> ID .) ]
  ! CADENA          [ reduce using rule 164 (ACCESO -> ID .) ]

    ARRAYS                         shift and go to state 62
    ARRAY                          shift and go to state 63

state 241

    (147) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (136) INSTRUCCION_LOOP -> . IFS
    (137) INSTRUCCION_LOOP -> . FORS
    (138) INSTRUCCION_LOOP -> . WHILES
    (139) INSTRUCCION_LOOP -> . ASIGNACION
    (140) INSTRUCCION_LOOP -> . I
    (141) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (142) INSTRUCCION_LOOP -> . NATIVAS PTCOMA
    (143) INSTRUCCION_LOOP -> . BREAK
    (144) INSTRUCCION_LOOP -> . CONTINUE
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 300
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES_LOOP             shift and go to state 299
    INSTRUCCION_LOOP               shift and go to state 149
    IFS                            shift and go to state 150
    FORS                           shift and go to state 151
    WHILES                         shift and go to state 152
    ASIGNACION                     shift and go to state 153
    I                              shift and go to state 154
    LLAMADAS                       shift and go to state 155
    NATIVAS                        shift and go to state 156
    BREAK                          shift and go to state 157
    CONTINUE                       shift and go to state 158
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 242

    (149) RANGO -> E . DOSPUNTITOS E
    (150) RANGO -> E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    DOSPUNTITOS     shift and go to state 301
    R_END           reduce using rule 150 (RANGO -> E .)
    R_IF            reduce using rule 150 (RANGO -> E .)
    R_FOR           reduce using rule 150 (RANGO -> E .)
    R_WHILE         reduce using rule 150 (RANGO -> E .)
    R_GLOBAL        reduce using rule 150 (RANGO -> E .)
    R_LOCAL         reduce using rule 150 (RANGO -> E .)
    R_PRINT         reduce using rule 150 (RANGO -> E .)
    R_PRINTLN       reduce using rule 150 (RANGO -> E .)
    ID              reduce using rule 150 (RANGO -> E .)
    R_PARSE         reduce using rule 150 (RANGO -> E .)
    R_TRUNC         reduce using rule 150 (RANGO -> E .)
    R_FLOAT         reduce using rule 150 (RANGO -> E .)
    R_STRING        reduce using rule 150 (RANGO -> E .)
    R_TYPEOF        reduce using rule 150 (RANGO -> E .)
    R_PUSH          reduce using rule 150 (RANGO -> E .)
    R_POP           reduce using rule 150 (RANGO -> E .)
    R_LENGTH        reduce using rule 150 (RANGO -> E .)
    R_BREAK         reduce using rule 150 (RANGO -> E .)
    R_CONTINUE      reduce using rule 150 (RANGO -> E .)
    PARIZQ          reduce using rule 150 (RANGO -> E .)
    R_LOG10         reduce using rule 150 (RANGO -> E .)
    R_SIN           reduce using rule 150 (RANGO -> E .)
    R_COS           reduce using rule 150 (RANGO -> E .)
    R_TAN           reduce using rule 150 (RANGO -> E .)
    R_SQRT          reduce using rule 150 (RANGO -> E .)
    R_UPPERCASE     reduce using rule 150 (RANGO -> E .)
    R_LOWERCASE     reduce using rule 150 (RANGO -> E .)
    R_LOG           reduce using rule 150 (RANGO -> E .)
    DECIMAL         reduce using rule 150 (RANGO -> E .)
    ENTERO          reduce using rule 150 (RANGO -> E .)
    R_TRUE          reduce using rule 150 (RANGO -> E .)
    R_FALSE         reduce using rule 150 (RANGO -> E .)
    R_NOTHING       reduce using rule 150 (RANGO -> E .)
    CADENA          reduce using rule 150 (RANGO -> E .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! MENOS           [ reduce using rule 150 (RANGO -> E .) ]


state 243

    (151) RANGO -> ARREGLOS .
    (29) ARREGLOS -> ARREGLOS . COMA ARREGLO

    R_END           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 151 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 151 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 151 (RANGO -> ARREGLOS .)
    ID              reduce using rule 151 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_STRING        reduce using rule 151 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 151 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 151 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_LENGTH        reduce using rule 151 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 151 (RANGO -> ARREGLOS .)
    MENOS           reduce using rule 151 (RANGO -> ARREGLOS .)
    PARIZQ          reduce using rule 151 (RANGO -> ARREGLOS .)
    R_LOG10         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_SIN           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_COS           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_TAN           reduce using rule 151 (RANGO -> ARREGLOS .)
    R_SQRT          reduce using rule 151 (RANGO -> ARREGLOS .)
    R_UPPERCASE     reduce using rule 151 (RANGO -> ARREGLOS .)
    R_LOWERCASE     reduce using rule 151 (RANGO -> ARREGLOS .)
    R_LOG           reduce using rule 151 (RANGO -> ARREGLOS .)
    DECIMAL         reduce using rule 151 (RANGO -> ARREGLOS .)
    ENTERO          reduce using rule 151 (RANGO -> ARREGLOS .)
    R_TRUE          reduce using rule 151 (RANGO -> ARREGLOS .)
    R_FALSE         reduce using rule 151 (RANGO -> ARREGLOS .)
    R_NOTHING       reduce using rule 151 (RANGO -> ARREGLOS .)
    CADENA          reduce using rule 151 (RANGO -> ARREGLOS .)
    COMA            shift and go to state 196


state 244

    (145) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 302


state 245

    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .

    R_END           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_IF            reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    ID              reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_POP           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LENGTH        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    MENOS           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    PARIZQ          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOG10         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_SIN           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_COS           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TAN           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_SQRT          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_UPPERCASE     reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOWERCASE     reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOG           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    DECIMAL         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    ENTERO          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TRUE          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FALSE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_NOTHING       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    CADENA          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)


state 246

    (146) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRING        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    MENOS           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    PARIZQ          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOG10         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_SIN           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_COS           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TAN           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_SQRT          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOG           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    DECIMAL         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ENTERO          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUE          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FALSE         reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_NOTHING       reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    CADENA          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 146 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 247

    (141) INSTRUCCION_LOOP -> LLAMADAS PTCOMA .

    R_END           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_IF            reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    ID              reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LENGTH        reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    MENOS           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    PARIZQ          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOG10         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_SIN           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_COS           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TAN           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_SQRT          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_UPPERCASE     reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOWERCASE     reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOG           reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    DECIMAL         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    ENTERO          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TRUE          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FALSE         reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_NOTHING       reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    CADENA          reduce using rule 141 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)


state 248

    (142) INSTRUCCION_LOOP -> NATIVAS PTCOMA .

    R_END           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_IF            reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    ID              reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_LENGTH        reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    MENOS           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    PARIZQ          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_LOG10         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_SIN           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_COS           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_TAN           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_SQRT          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_UPPERCASE     reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_LOWERCASE     reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_LOG           reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    DECIMAL         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    ENTERO          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_TRUE          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_FALSE         reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    R_NOTHING       reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)
    CADENA          reduce using rule 142 (INSTRUCCION_LOOP -> NATIVAS PTCOMA .)


state 249

    (36) ASIGNACION -> R_GLOBAL E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL E IGUAL LISTA . DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> R_GLOBAL E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 303
    PTCOMA          shift and go to state 304


state 250

    (40) ASIGNACION -> E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (41) ASIGNACION -> E IGUAL LISTA DOSPUNTOS . ID PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    ID              shift and go to state 306
    R_NOTHING       shift and go to state 179
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 182
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184

    TIPO                           shift and go to state 305

state 251

    (44) ASIGNACION -> E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_NOTHING       reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 44 (ASIGNACION -> E IGUAL LISTA PTCOMA .)


state 252

    (37) ASIGNACION -> R_LOCAL E IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL E IGUAL LISTA . DOSPUNTOS ID PTCOMA
    (43) ASIGNACION -> R_LOCAL E IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 307
    PTCOMA          shift and go to state 308


state 253

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 309


state 254

    (22) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (24) IMPRESION -> . ARREGLOS
    (25) IMPRESION -> . LO
    (26) IMPRESION -> . DOLAR PARIZQ E PARDER
    (27) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (28) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DOLAR           shift and go to state 175
    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    IMPRESION                      shift and go to state 310
    ARREGLOS                       shift and go to state 173
    LO                             shift and go to state 174
    E                              shift and go to state 77
    NATIVAS                        shift and go to state 68
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 255

    (21) I -> R_PRINT PARIZQ PARDER PTCOMA .

    R_IF            reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_FOR           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_WHILE         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_LOCAL         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_PRINT         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_PARSE         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_TRUNC         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_FLOAT         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_STRING        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_PUSH          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_POP           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_LENGTH        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_BREAK         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_RETURN        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    MENOS           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    PARIZQ          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_LOG10         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_SIN           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_COS           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_TAN           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_SQRT          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_LOG           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    DECIMAL         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    ENTERO          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_TRUE          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_FALSE         reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_NOTHING       reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    CADENA          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_STRUCT        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_END           reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_ELSE          reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 21 (I -> R_PRINT PARIZQ PARDER PTCOMA .)


state 256

    (26) IMPRESION -> DOLAR PARIZQ . E PARDER
    (27) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (28) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    CORIZQ          shift and go to state 106

    E                              shift and go to state 311
    ARREGLOS                       shift and go to state 312
    NATIVAS                        shift and go to state 313
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    ARREGLO                        shift and go to state 105
    ACCESO                         shift and go to state 57

state 257

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 314


state 258

    (20) I -> R_PRINTLN PARIZQ PARDER PTCOMA .

    R_IF            reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_FOR           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_WHILE         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_LOCAL         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_PRINT         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_PARSE         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_TRUNC         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_FLOAT         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_STRING        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_PUSH          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_POP           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_LENGTH        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_BREAK         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_RETURN        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    MENOS           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    PARIZQ          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_LOG10         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_SIN           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_COS           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_TAN           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_SQRT          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_LOG           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    DECIMAL         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    ENTERO          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_TRUE          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_FALSE         reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_NOTHING       reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    CADENA          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_STRUCT        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_END           reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_ELSE          reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 20 (I -> R_PRINTLN PARIZQ PARDER PTCOMA .)


state 259

    (99) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 315
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 260

    (100) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    LISTA                          shift and go to state 316
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    E                              shift and go to state 77
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 261

    (104) NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAS             reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POR             reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_END           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    AND             reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    OR              reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    ID              reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_NOTHING       reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    COMA            reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 104 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)


state 262

    (101) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAS             reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POR             reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    AND             reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    OR              reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_NOTHING       reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 101 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 263

    (102) NATIVAS -> R_STRING PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAS             reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POR             reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    AND             reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    OR              reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_NOTHING       reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 102 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)


state 264

    (103) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    IGUAL           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAS             reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POR             reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    AND             reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    OR              reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LENGTH        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOG10         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_SIN           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_COS           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TAN           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_SQRT          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_UPPERCASE     reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOWERCASE     reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOG           reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DECIMAL         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ENTERO          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUE          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FALSE         reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_NOTHING       reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CADENA          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 103 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 265

    (105) NATIVAS -> R_PUSH DIFERENTE PARIZQ E . COMA LISTA PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    COMA            shift and go to state 317
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 266

    (106) NATIVAS -> R_POP DIFERENTE PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 318
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 267

    (107) NATIVAS -> R_LENGTH PARIZQ E PARDER .

    PTCOMA          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    IGUAL           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAS             reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENOS           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    POR             reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MODAL           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    POTENCIA        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    PARDER          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENQUE          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAYQUE          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_END           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_ELSE          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    AND             reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    OR              reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_IF            reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FOR           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_WHILE         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PRINT         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    ID              reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PARSE         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_STRING        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_PUSH          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_POP           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_BREAK         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_RETURN        reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    PARIZQ          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOG10         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_SIN           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_COS           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TAN           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_SQRT          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_LOG           reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DECIMAL         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    ENTERO          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_TRUE          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_FALSE         reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    CADENA          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    COMA            reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    CORDER          reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 107 (NATIVAS -> R_LENGTH PARIZQ E PARDER .)


state 268

    (29) ARREGLOS -> ARREGLOS COMA ARREGLO .

    COMA            reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PTCOMA          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PARDER          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    DOSPUNTOS       reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    CORDER          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_END           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_IF            reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FOR           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_WHILE         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_GLOBAL        reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOCAL         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PRINT         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PRINTLN       reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    ID              reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PARSE         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TRUNC         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FLOAT         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_STRING        reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TYPEOF        reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_PUSH          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_POP           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LENGTH        reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_BREAK         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_CONTINUE      reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    MENOS           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    PARIZQ          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOG10         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_SIN           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_COS           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TAN           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_SQRT          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_UPPERCASE     reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOWERCASE     reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_LOG           reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    DECIMAL         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    ENTERO          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_TRUE          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_FALSE         reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    R_NOTHING       reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)
    CADENA          reduce using rule 29 (ARREGLOS -> ARREGLOS COMA ARREGLO .)


state 269

    (31) ARREGLO -> CORIZQ LISTAS CORDER .

    COMA            reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LENGTH        reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    MENOS           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOG10         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_SIN           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_COS           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TAN           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_SQRT          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_UPPERCASE     reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOWERCASE     reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_LOG           reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    DECIMAL         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    ENTERO          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_TRUE          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_FALSE         reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    R_NOTHING       reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)
    CADENA          reduce using rule 31 (ARREGLO -> CORIZQ LISTAS CORDER .)


state 270

    (64) E -> R_LOG10 PARIZQ E PARDER .

    IGUAL           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MAS             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRING        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_RETURN        reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PARIZQ          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOG10         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_SIN           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_COS           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TAN           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_SQRT          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOG           reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DECIMAL         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    ENTERO          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUE          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FALSE         reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    CADENA          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 64 (E -> R_LOG10 PARIZQ E PARDER .)


state 271

    (65) E -> R_SIN PARIZQ E PARDER .

    IGUAL           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MAS             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_STRING        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LOG10         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_SIN           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_COS           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TAN           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_SQRT          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_LOG           reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DECIMAL         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    ENTERO          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUE          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_FALSE         reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    CADENA          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 65 (E -> R_SIN PARIZQ E PARDER .)


state 272

    (66) E -> R_COS PARIZQ E PARDER .

    IGUAL           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MAS             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_STRING        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_RETURN        reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PARIZQ          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LOG10         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_SIN           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_COS           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TAN           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_SQRT          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_LOG           reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DECIMAL         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    ENTERO          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_TRUE          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_FALSE         reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    CADENA          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 66 (E -> R_COS PARIZQ E PARDER .)


state 273

    (67) E -> R_TAN PARIZQ E PARDER .

    IGUAL           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MAS             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_STRING        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LOG10         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_SIN           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_COS           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TAN           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_SQRT          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_LOG           reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DECIMAL         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    ENTERO          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUE          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_FALSE         reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    CADENA          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 67 (E -> R_TAN PARIZQ E PARDER .)


state 274

    (68) E -> R_SQRT PARIZQ E PARDER .

    IGUAL           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MAS             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRING        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_RETURN        reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PARIZQ          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOG10         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_SIN           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_COS           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TAN           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_SQRT          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOG           reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DECIMAL         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    ENTERO          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUE          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_FALSE         reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    CADENA          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 68 (E -> R_SQRT PARIZQ E PARDER .)


state 275

    (69) E -> R_UPPERCASE PARIZQ E PARDER .

    IGUAL           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAS             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOG10         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_SIN           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_COS           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TAN           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_SQRT          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOG           reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DECIMAL         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ENTERO          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUE          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FALSE         reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CADENA          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 69 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 276

    (70) E -> R_LOWERCASE PARIZQ E PARDER .

    IGUAL           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAS             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOG10         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_SIN           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_COS           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TAN           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_SQRT          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOG           reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DECIMAL         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ENTERO          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUE          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FALSE         reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CADENA          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 70 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 277

    (71) E -> R_LOG PARIZQ E COMA . E PARDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 319
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 278

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . INSTRUCCIONES R_END PTCOMA
    (111) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 321
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 320
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 279

    (114) PARAMETROS -> PARAMETROS COMA . PARAMETRO
    (116) PARAMETRO -> . ID

    ID              shift and go to state 208

    PARAMETRO                      shift and go to state 322

state 280

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 323
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 281

    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 324


state 282

    (32) LISTAS -> LISTAS COMA LISTA .

    PARDER          reduce using rule 32 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 32 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 32 (LISTAS -> LISTAS COMA LISTA .)


state 283

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 325


state 284

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_FUNCTION      reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_IF            reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LENGTH        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    MENOS           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    PARIZQ          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOG10         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_SIN           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_COS           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TAN           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_SQRT          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOG           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    DECIMAL         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ENTERO          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUE          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FALSE         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_NOTHING       reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    CADENA          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 285

    (161) ELEMENTO -> ID DOSPUNTOS ID . PTCOMA

    PTCOMA          shift and go to state 326


state 286

    (160) ELEMENTO -> ID DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 327


state 287

    (154) STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_FUNCTION      reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_IF            reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LENGTH        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    MENOS           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    PARIZQ          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG10         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SIN           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_COS           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TAN           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SQRT          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG           reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    DECIMAL         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ENTERO          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUE          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FALSE         reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_NOTHING       reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    CADENA          reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 154 (STRUCTS -> R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 288

    (117) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 289

    (118) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 328
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 290

    (123) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 329


state 291

    (121) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 330


state 292

    (124) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_NOTHING       reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 124 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 293

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (131) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (127) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (128) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (129) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (130) ELSEIF -> . R_ELSEIF LO ELSEIF
    (131) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (132) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 331
    R_ELSE          shift and go to state 332
    R_ELSEIF        shift and go to state 135
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    ELSEIF                         shift and go to state 333
    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 294

    (128) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 334


state 295

    (129) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (132) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 336
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 335
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 296

    (130) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRING        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LENGTH        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    MENOS           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    PARIZQ          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOG10         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_SIN           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_COS           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TAN           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_SQRT          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_UPPERCASE     reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOWERCASE     reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOG           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    DECIMAL         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ENTERO          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUE          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FALSE         reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_NOTHING       reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    CADENA          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 130 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 297

    (92) RE -> PARIZQ RE . PARDER
    (86) RE -> RE . MENQUE RE
    (87) RE -> RE . MAYQUE RE
    (88) RE -> RE . IGUALQUE RE
    (89) RE -> RE . NIGUALQUE RE
    (90) RE -> RE . MENORIGUAL RE
    (91) RE -> RE . MAYORIGUAL RE

    PARDER          shift and go to state 232
    MENQUE          shift and go to state 140
    MAYQUE          shift and go to state 141
    IGUALQUE        shift and go to state 142
    NIGUALQUE       shift and go to state 143
    MENORIGUAL      shift and go to state 144
    MAYORIGUAL      shift and go to state 145


state 298

    (152) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (84) ARRAY -> CORIZQ . E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 337
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 299

    (147) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (136) INSTRUCCION_LOOP -> . IFS
    (137) INSTRUCCION_LOOP -> . FORS
    (138) INSTRUCCION_LOOP -> . WHILES
    (139) INSTRUCCION_LOOP -> . ASIGNACION
    (140) INSTRUCCION_LOOP -> . I
    (141) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (142) INSTRUCCION_LOOP -> . NATIVAS PTCOMA
    (143) INSTRUCCION_LOOP -> . BREAK
    (144) INSTRUCCION_LOOP -> . CONTINUE
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 338
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION_LOOP               shift and go to state 245
    IFS                            shift and go to state 150
    FORS                           shift and go to state 151
    WHILES                         shift and go to state 152
    ASIGNACION                     shift and go to state 153
    I                              shift and go to state 154
    LLAMADAS                       shift and go to state 155
    NATIVAS                        shift and go to state 156
    BREAK                          shift and go to state 157
    CONTINUE                       shift and go to state 158
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 300

    (148) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 339


state 301

    (149) RANGO -> E DOSPUNTITOS . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 340
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 302

    (145) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LENGTH        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    MENOS           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    PARIZQ          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG10         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SIN           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_COS           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TAN           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SQRT          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    DECIMAL         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ENTERO          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUE          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FALSE         reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_NOTHING       reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    CADENA          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 145 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 303

    (36) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS . ID PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    ID              shift and go to state 342
    R_NOTHING       shift and go to state 179
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 182
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184

    TIPO                           shift and go to state 341

state 304

    (42) ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_NOTHING       reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 42 (ASIGNACION -> R_GLOBAL E IGUAL LISTA PTCOMA .)


state 305

    (40) ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 343


state 306

    (41) ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID . PTCOMA

    PTCOMA          shift and go to state 344


state 307

    (37) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS . ID PTCOMA
    (48) TIPO -> . R_NOTHING
    (49) TIPO -> . R_INT64
    (50) TIPO -> . R_FLOAT64
    (51) TIPO -> . R_STRING
    (52) TIPO -> . R_CHAR
    (53) TIPO -> . R_BOOL

    ID              shift and go to state 346
    R_NOTHING       shift and go to state 179
    R_INT64         shift and go to state 180
    R_FLOAT64       shift and go to state 181
    R_STRING        shift and go to state 182
    R_CHAR          shift and go to state 183
    R_BOOL          shift and go to state 184

    TIPO                           shift and go to state 345

state 308

    (43) ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    ID              reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LENGTH        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    MENOS           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    PARIZQ          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOG10         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_SIN           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_COS           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TAN           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_SQRT          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_UPPERCASE     reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOWERCASE     reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_LOG           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    DECIMAL         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    ENTERO          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_TRUE          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FALSE         reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_NOTHING       reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    CADENA          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    $end            reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 43 (ASIGNACION -> R_LOCAL E IGUAL LISTA PTCOMA .)


state 309

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LENGTH        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    MENOS           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    PARIZQ          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG10         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SIN           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_COS           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TAN           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SQRT          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    DECIMAL         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ENTERO          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUE          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FALSE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_NOTHING       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    CADENA          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 310

    (22) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 22 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 22 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 311

    (26) IMPRESION -> DOLAR PARIZQ E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 347
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 312

    (27) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER
    (29) ARREGLOS -> ARREGLOS . COMA ARREGLO

    PARDER          shift and go to state 348
    COMA            shift and go to state 196


state 313

    (28) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER
    (85) E -> NATIVAS .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 349
    MAS             reduce using rule 85 (E -> NATIVAS .)
    MENOS           reduce using rule 85 (E -> NATIVAS .)
    POR             reduce using rule 85 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 85 (E -> NATIVAS .)
    MODAL           reduce using rule 85 (E -> NATIVAS .)
    POTENCIA        reduce using rule 85 (E -> NATIVAS .)

  ! PARDER          [ reduce using rule 85 (E -> NATIVAS .) ]


state 314

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LENGTH        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    MENOS           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    PARIZQ          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG10         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SIN           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_COS           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TAN           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_SQRT          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_UPPERCASE     reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOWERCASE     reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOG           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    DECIMAL         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ENTERO          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUE          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FALSE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_NOTHING       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    CADENA          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 315

    (99) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 350


state 316

    (100) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 351


state 317

    (105) NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA . LISTA PARDER
    (34) LISTA -> . ARREGLOS
    (35) LISTA -> . LO
    (29) ARREGLOS -> . ARREGLOS COMA ARREGLO
    (30) ARREGLOS -> . ARREGLO
    (94) LO -> . LO AND LO
    (95) LO -> . LO OR LO
    (96) LO -> . DIFERENTE LO
    (97) LO -> . PARIZQ LO PARDER
    (98) LO -> . RE
    (31) ARREGLO -> . CORIZQ LISTAS CORDER
    (86) RE -> . RE MENQUE RE
    (87) RE -> . RE MAYQUE RE
    (88) RE -> . RE IGUALQUE RE
    (89) RE -> . RE NIGUALQUE RE
    (90) RE -> . RE MENORIGUAL RE
    (91) RE -> . RE MAYORIGUAL RE
    (92) RE -> . PARIZQ RE PARDER
    (93) RE -> . E
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    DIFERENTE       shift and go to state 74
    PARIZQ          shift and go to state 75
    CORIZQ          shift and go to state 106
    MENOS           shift and go to state 41
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 77
    LISTA                          shift and go to state 352
    ARREGLOS                       shift and go to state 103
    LO                             shift and go to state 104
    ARREGLO                        shift and go to state 105
    RE                             shift and go to state 76
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 318

    (106) NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .

    PTCOMA          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    IGUAL           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MAS             reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MENOS           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    POR             reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MODAL           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    PARDER          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MENQUE          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_END           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    AND             reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    OR              reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_IF            reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_FOR           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    ID              reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_STRING        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_POP           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_LENGTH        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_LOG10         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_SIN           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_COS           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_TAN           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_SQRT          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_UPPERCASE     reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_LOWERCASE     reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_LOG           reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    DECIMAL         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    ENTERO          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_TRUE          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_FALSE         reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    R_NOTHING       reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    CADENA          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    COMA            reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    CORDER          reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 106 (NATIVAS -> R_POP DIFERENTE PARIZQ E PARDER .)


state 319

    (71) E -> R_LOG PARIZQ E COMA E . PARDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    PARDER          shift and go to state 353
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 320

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 354
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 321

    (111) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 355


state 322

    (114) PARAMETROS -> PARAMETROS COMA PARAMETRO .

    PARDER          reduce using rule 114 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)
    COMA            reduce using rule 114 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)


state 323

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 356


state 324

    (113) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LENGTH        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    MENOS           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    PARIZQ          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOG10         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_SIN           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_COS           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TAN           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_SQRT          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOG           reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    DECIMAL         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ENTERO          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUE          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FALSE         reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_NOTHING       reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    CADENA          reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 113 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 325

    (153) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_FUNCTION      reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_IF            reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LENGTH        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    MENOS           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    PARIZQ          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG10         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SIN           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_COS           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TAN           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_SQRT          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOG           reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    DECIMAL         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ENTERO          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUE          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FALSE         reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_NOTHING       reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    CADENA          reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 153 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 326

    (161) ELEMENTO -> ID DOSPUNTOS ID PTCOMA .

    R_END           reduce using rule 161 (ELEMENTO -> ID DOSPUNTOS ID PTCOMA .)
    ID              reduce using rule 161 (ELEMENTO -> ID DOSPUNTOS ID PTCOMA .)


state 327

    (160) ELEMENTO -> ID DOSPUNTOS TIPO PTCOMA .

    R_END           reduce using rule 160 (ELEMENTO -> ID DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 160 (ELEMENTO -> ID DOSPUNTOS TIPO PTCOMA .)


state 328

    (118) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 357


state 329

    (123) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_NOTHING       reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 123 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 330

    (121) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 121 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 331

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 358


state 332

    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (131) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 360
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCIONES                  shift and go to state 359
    INSTRUCCION                    shift and go to state 9
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 333

    (127) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LENGTH        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    MENOS           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    PARIZQ          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOG10         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_SIN           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_COS           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TAN           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_SQRT          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_UPPERCASE     reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOWERCASE     reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOG           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    DECIMAL         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ENTERO          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUE          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FALSE         reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_NOTHING       reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    CADENA          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 127 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 334

    (128) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRING        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LENGTH        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    MENOS           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    PARIZQ          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOG10         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_SIN           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_COS           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TAN           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_SQRT          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOG           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    DECIMAL         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ENTERO          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUE          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FALSE         reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_NOTHING       reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    CADENA          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 128 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 335

    (129) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 361
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 336

    (132) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 362


state 337

    (152) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (84) ARRAY -> CORIZQ E . CORDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    DOSPUNTOS       shift and go to state 363
    CORDER          shift and go to state 214
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 338

    (147) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 364


state 339

    (148) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRING        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LENGTH        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    MENOS           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    PARIZQ          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOG10         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_SIN           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_COS           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TAN           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_SQRT          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOG           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    DECIMAL         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ENTERO          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUE          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FALSE         reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_NOTHING       reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    CADENA          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 148 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 340

    (149) RANGO -> E DOSPUNTITOS E .
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

  ! shift/reduce conflict for MENOS resolved as shift
    R_END           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_IF            reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_FOR           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_WHILE         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_GLOBAL        reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_LOCAL         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_PRINT         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_PRINTLN       reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    ID              reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_PARSE         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_TRUNC         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_FLOAT         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_STRING        reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_TYPEOF        reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_PUSH          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_POP           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_LENGTH        reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_BREAK         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_CONTINUE      reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    PARIZQ          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_LOG10         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_SIN           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_COS           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_TAN           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_SQRT          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_UPPERCASE     reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_LOWERCASE     reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_LOG           reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    DECIMAL         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    ENTERO          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_TRUE          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_FALSE         reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    R_NOTHING       reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    CADENA          reduce using rule 149 (RANGO -> E DOSPUNTITOS E .)
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87

  ! MENOS           [ reduce using rule 149 (RANGO -> E DOSPUNTITOS E .) ]


state 341

    (36) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 365


state 342

    (38) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID . PTCOMA

    PTCOMA          shift and go to state 366


state 343

    (40) ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_NOTHING       reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 40 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 344

    (41) ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .

    R_IF            reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FOR           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_WHILE         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_GLOBAL        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOCAL         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINT         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINTLN       reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ID              reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PARSE         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUNC         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FLOAT         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRING        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TYPEOF        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PUSH          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_POP           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LENGTH        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_BREAK         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_CONTINUE      reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_RETURN        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    MENOS           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    PARIZQ          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG10         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SIN           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_COS           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TAN           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SQRT          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_UPPERCASE     reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOWERCASE     reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    DECIMAL         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ENTERO          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUE          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FALSE         reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_NOTHING       reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    CADENA          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FUNCTION      reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_MUTABLE       reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRUCT        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    $end            reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_END           reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSE          reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSEIF        reduce using rule 41 (ASIGNACION -> E IGUAL LISTA DOSPUNTOS ID PTCOMA .)


state 345

    (37) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 367


state 346

    (39) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID . PTCOMA

    PTCOMA          shift and go to state 368


state 347

    (26) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 26 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 26 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 348

    (27) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 27 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 27 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 349

    (28) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 28 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 28 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 350

    (99) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    IGUAL           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LENGTH        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG10         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_SIN           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_COS           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TAN           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_SQRT          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_UPPERCASE     reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOWERCASE     reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG           reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DECIMAL         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ENTERO          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUE          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FALSE         reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_NOTHING       reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CADENA          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 99 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 351

    (100) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    IGUAL           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LENGTH        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG10         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_SIN           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_COS           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TAN           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_SQRT          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_UPPERCASE     reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOWERCASE     reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOG           reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DECIMAL         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ENTERO          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUE          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FALSE         reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_NOTHING       reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CADENA          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 100 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 352

    (105) NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA . PARDER

    PARDER          shift and go to state 369


state 353

    (71) E -> R_LOG PARIZQ E COMA E PARDER .

    IGUAL           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAS             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRING        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LENGTH        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_RETURN        reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARIZQ          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOG10         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_SIN           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_COS           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TAN           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_SQRT          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_UPPERCASE     reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOWERCASE     reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOG           reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DECIMAL         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ENTERO          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUE          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FALSE         reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_NOTHING       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CADENA          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 71 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 354

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 370


state 355

    (111) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    ID              reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LENGTH        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    MENOS           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    PARIZQ          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOG10         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_SIN           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_COS           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TAN           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_SQRT          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOG           reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    DECIMAL         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    ENTERO          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TRUE          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FALSE         reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_NOTHING       reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    CADENA          reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    $end            reduce using rule 111 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)


state 356

    (112) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 112 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 357

    (118) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 118 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 358

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 359

    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (8) INSTRUCCION -> . IFS
    (9) INSTRUCCION -> . FORS
    (10) INSTRUCCION -> . WHILES
    (11) INSTRUCCION -> . ASIGNACION
    (12) INSTRUCCION -> . I
    (13) INSTRUCCION -> . LLAMADAS PTCOMA
    (14) INSTRUCCION -> . NATIVAS PTCOMA
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (117) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (118) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (119) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (120) IFS -> . R_IF LO R_END PTCOMA
    (121) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (122) IFS -> . R_IF LO ELSEIF
    (123) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (124) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (147) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (145) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (146) WHILES -> . R_WHILE LO R_END PTCOMA
    (36) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (39) ASIGNACION -> . R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (40) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (41) ASIGNACION -> . E IGUAL LISTA DOSPUNTOS ID PTCOMA
    (42) ASIGNACION -> . R_GLOBAL E IGUAL LISTA PTCOMA
    (43) ASIGNACION -> . R_LOCAL E IGUAL LISTA PTCOMA
    (44) ASIGNACION -> . E IGUAL LISTA PTCOMA
    (45) ASIGNACION -> . R_GLOBAL E PTCOMA
    (46) ASIGNACION -> . R_LOCAL E PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (20) I -> . R_PRINTLN PARIZQ PARDER PTCOMA
    (21) I -> . R_PRINT PARIZQ PARDER PTCOMA
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (47) BREAK -> . R_BREAK PTCOMA
    (133) CONTINUE -> . R_CONTINUE PTCOMA
    (108) RETURN -> . R_RETURN LISTA PTCOMA
    (109) RETURN -> . R_RETURN PTCOMA
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (164) ACCESO -> . ID

    R_END           shift and go to state 371
    R_IF            shift and go to state 22
    R_FOR           shift and go to state 23
    R_WHILE         shift and go to state 24
    R_GLOBAL        shift and go to state 25
    R_LOCAL         shift and go to state 27
    R_PRINT         shift and go to state 28
    R_PRINTLN       shift and go to state 29
    ID              shift and go to state 7
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37
    R_BREAK         shift and go to state 38
    R_CONTINUE      shift and go to state 39
    R_RETURN        shift and go to state 40
    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55

    INSTRUCCION                    shift and go to state 59
    IFS                            shift and go to state 12
    FORS                           shift and go to state 13
    WHILES                         shift and go to state 14
    ASIGNACION                     shift and go to state 15
    I                              shift and go to state 16
    LLAMADAS                       shift and go to state 17
    NATIVAS                        shift and go to state 18
    BREAK                          shift and go to state 19
    CONTINUE                       shift and go to state 20
    RETURN                         shift and go to state 21
    E                              shift and go to state 26
    ACCESOS                        shift and go to state 56
    ACCESO                         shift and go to state 57

state 360

    (131) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 372


state 361

    (129) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 373


state 362

    (132) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_NOTHING       reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 132 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 363

    (152) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (56) E -> . E MAS E
    (57) E -> . E MENOS E
    (58) E -> . E POR E
    (59) E -> . E DIVIDIDO E
    (60) E -> . E MODAL E
    (61) E -> . E POTENCIA E
    (62) E -> . MENOS E
    (63) E -> . PARIZQ E PARDER
    (64) E -> . R_LOG10 PARIZQ E PARDER
    (65) E -> . R_SIN PARIZQ E PARDER
    (66) E -> . R_COS PARIZQ E PARDER
    (67) E -> . R_TAN PARIZQ E PARDER
    (68) E -> . R_SQRT PARIZQ E PARDER
    (69) E -> . R_UPPERCASE PARIZQ E PARDER
    (70) E -> . R_LOWERCASE PARIZQ E PARDER
    (71) E -> . R_LOG PARIZQ E COMA E PARDER
    (72) E -> . DECIMAL
    (73) E -> . ENTERO
    (74) E -> . R_TRUE
    (75) E -> . R_FALSE
    (76) E -> . R_NOTHING
    (77) E -> . CADENA
    (78) E -> . LLAMADAS
    (79) E -> . ACCESOS
    (80) E -> . ID
    (81) E -> . ID ARRAYS
    (85) E -> . NATIVAS
    (54) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (55) LLAMADAS -> . ID PARIZQ PARDER
    (162) ACCESOS -> . ACCESOS PUNTO ACCESO
    (163) ACCESOS -> . ACCESO
    (99) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (100) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (101) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (102) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (103) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (104) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (105) NATIVAS -> . R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER
    (106) NATIVAS -> . R_POP DIFERENTE PARIZQ E PARDER
    (107) NATIVAS -> . R_LENGTH PARIZQ E PARDER
    (164) ACCESO -> . ID

    MENOS           shift and go to state 41
    PARIZQ          shift and go to state 8
    R_LOG10         shift and go to state 42
    R_SIN           shift and go to state 43
    R_COS           shift and go to state 44
    R_TAN           shift and go to state 45
    R_SQRT          shift and go to state 46
    R_UPPERCASE     shift and go to state 47
    R_LOWERCASE     shift and go to state 48
    R_LOG           shift and go to state 49
    DECIMAL         shift and go to state 50
    ENTERO          shift and go to state 51
    R_TRUE          shift and go to state 52
    R_FALSE         shift and go to state 53
    R_NOTHING       shift and go to state 54
    CADENA          shift and go to state 55
    ID              shift and go to state 67
    R_PARSE         shift and go to state 30
    R_TRUNC         shift and go to state 31
    R_FLOAT         shift and go to state 32
    R_STRING        shift and go to state 33
    R_TYPEOF        shift and go to state 34
    R_PUSH          shift and go to state 35
    R_POP           shift and go to state 36
    R_LENGTH        shift and go to state 37

    E                              shift and go to state 374
    LLAMADAS                       shift and go to state 66
    ACCESOS                        shift and go to state 56
    NATIVAS                        shift and go to state 68
    ACCESO                         shift and go to state 57

state 364

    (147) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LENGTH        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    MENOS           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    PARIZQ          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG10         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SIN           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_COS           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TAN           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_SQRT          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOG           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    DECIMAL         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ENTERO          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUE          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FALSE         reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_NOTHING       reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    CADENA          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 147 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 365

    (36) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_NOTHING       reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 36 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 366

    (38) ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .

    R_IF            reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FOR           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_WHILE         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_GLOBAL        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOCAL         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINT         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINTLN       reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ID              reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PARSE         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUNC         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FLOAT         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRING        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TYPEOF        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PUSH          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_POP           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LENGTH        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_BREAK         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_CONTINUE      reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_RETURN        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    MENOS           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    PARIZQ          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG10         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SIN           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_COS           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TAN           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SQRT          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_UPPERCASE     reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOWERCASE     reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    DECIMAL         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ENTERO          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUE          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FALSE         reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_NOTHING       reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    CADENA          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FUNCTION      reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_MUTABLE       reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRUCT        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    $end            reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_END           reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSE          reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSEIF        reduce using rule 38 (ASIGNACION -> R_GLOBAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)


state 367

    (37) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LENGTH        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    MENOS           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    PARIZQ          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG10         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SIN           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_COS           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TAN           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_SQRT          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_UPPERCASE     reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOWERCASE     reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOG           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    DECIMAL         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ENTERO          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUE          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FALSE         reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_NOTHING       reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    CADENA          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 37 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 368

    (39) ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .

    R_IF            reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FOR           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_WHILE         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_GLOBAL        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOCAL         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINT         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PRINTLN       reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ID              reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PARSE         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUNC         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FLOAT         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRING        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TYPEOF        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_PUSH          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_POP           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LENGTH        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_BREAK         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_CONTINUE      reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_RETURN        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    MENOS           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    PARIZQ          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG10         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SIN           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_COS           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TAN           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_SQRT          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_UPPERCASE     reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOWERCASE     reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_LOG           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    DECIMAL         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    ENTERO          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_TRUE          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FALSE         reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_NOTHING       reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    CADENA          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_FUNCTION      reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_MUTABLE       reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_STRUCT        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    $end            reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_END           reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSE          reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)
    R_ELSEIF        reduce using rule 39 (ASIGNACION -> R_LOCAL E IGUAL LISTA DOSPUNTOS ID PTCOMA .)


state 369

    (105) NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .

    PTCOMA          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    IGUAL           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MAS             reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MENOS           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    POR             reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MODAL           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    POTENCIA        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    PARDER          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MENQUE          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MAYQUE          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_END           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_ELSE          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    AND             reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    OR              reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_IF            reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_FOR           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_WHILE         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_PRINT         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    ID              reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_PARSE         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_STRING        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_PUSH          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_POP           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_LENGTH        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_BREAK         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_RETURN        reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    PARIZQ          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_LOG10         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_SIN           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_COS           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_TAN           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_SQRT          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_UPPERCASE     reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_LOWERCASE     reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_LOG           reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    DECIMAL         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    ENTERO          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_TRUE          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_FALSE         reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    R_NOTHING       reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    CADENA          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    COMA            reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    CORDER          reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 105 (NATIVAS -> R_PUSH DIFERENTE PARIZQ E COMA LISTA PARDER .)


state 370

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)


state 371

    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 375


state 372

    (131) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LENGTH        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    MENOS           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    PARIZQ          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG10         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SIN           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_COS           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TAN           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_SQRT          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOG           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    DECIMAL         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ENTERO          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUE          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FALSE         reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_NOTHING       reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    CADENA          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 131 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 373

    (129) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 129 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 374

    (152) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (56) E -> E . MAS E
    (57) E -> E . MENOS E
    (58) E -> E . POR E
    (59) E -> E . DIVIDIDO E
    (60) E -> E . MODAL E
    (61) E -> E . POTENCIA E

    CORDER          shift and go to state 376
    MAS             shift and go to state 82
    MENOS           shift and go to state 83
    POR             shift and go to state 84
    DIVIDIDO        shift and go to state 85
    MODAL           shift and go to state 86
    POTENCIA        shift and go to state 87


state 375

    (126) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LENGTH        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    MENOS           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    PARIZQ          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG10         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SIN           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_COS           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TAN           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_SQRT          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_UPPERCASE     reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOWERCASE     reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOG           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    DECIMAL         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ENTERO          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUE          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FALSE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_NOTHING       reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    CADENA          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 376

    (152) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRING        reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LENGTH        reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    MENOS           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    PARIZQ          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOG10         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_SIN           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_COS           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TAN           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_SQRT          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_UPPERCASE     reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOWERCASE     reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOG           reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    DECIMAL         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ENTERO          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUE          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FALSE         reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_NOTHING       reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    CADENA          reduce using rule 152 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 4 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LENGTH in state 4 resolved as shift
WARNING: shift/reduce conflict for R_BREAK in state 4 resolved as shift
WARNING: shift/reduce conflict for R_CONTINUE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 4 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 4 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOG10 in state 4 resolved as shift
WARNING: shift/reduce conflict for R_SIN in state 4 resolved as shift
WARNING: shift/reduce conflict for R_COS in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TAN in state 4 resolved as shift
WARNING: shift/reduce conflict for R_SQRT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_UPPERCASE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOWERCASE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOG in state 4 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 4 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TRUE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FALSE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_NOTHING in state 4 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 4 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 67 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 77 resolved as shift
WARNING: shift/reduce conflict for COMA in state 103 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 138 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 139 resolved as shift
WARNING: shift/reduce conflict for COMA in state 173 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 240 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 240 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 242 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 313 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 340 resolved as shift
WARNING: reduce/reduce conflict in state 7 resolved using rule (E -> ID)
WARNING: rejected rule (ACCESO -> ID) in state 7
WARNING: reduce/reduce conflict in state 67 resolved using rule (E -> ID)
WARNING: rejected rule (ACCESO -> ID) in state 67
WARNING: reduce/reduce conflict in state 240 resolved using rule (E -> ID)
WARNING: rejected rule (ACCESO -> ID) in state 240
