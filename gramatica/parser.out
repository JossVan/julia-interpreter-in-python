Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO FUNCIONES
Rule 2     INICIO -> INICIO INSTRUCCIONES
Rule 3     INICIO -> FUNCIONES
Rule 4     INICIO -> INSTRUCCIONES
Rule 5     INSTRUCCIONES -> INSTRUCCIONES IFS
Rule 6     INSTRUCCIONES -> INSTRUCCIONES FORS
Rule 7     INSTRUCCIONES -> INSTRUCCIONES WHILES
Rule 8     INSTRUCCIONES -> INSTRUCCIONES ASIGNACION
Rule 9     INSTRUCCIONES -> INSTRUCCIONES I
Rule 10    INSTRUCCIONES -> INSTRUCCIONES LLAMADAS
Rule 11    INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA
Rule 12    INSTRUCCIONES -> INSTRUCCIONES STRUCTS
Rule 13    INSTRUCCIONES -> IFS
Rule 14    INSTRUCCIONES -> FORS
Rule 15    INSTRUCCIONES -> WHILES
Rule 16    INSTRUCCIONES -> ASIGNACION
Rule 17    INSTRUCCIONES -> I
Rule 18    INSTRUCCIONES -> LLAMADAS
Rule 19    INSTRUCCIONES -> NATIVAS PTCOMA
Rule 20    INSTRUCCIONES -> STRUCTS
Rule 21    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 22    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 23    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 24    IMPRESIONES -> IMPRESION
Rule 25    IMPRESION -> NATIVAS
Rule 26    IMPRESION -> ARREGLOS
Rule 27    IMPRESION -> LLAMADAS
Rule 28    IMPRESION -> E
Rule 29    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 30    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 31    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 32    ARREGLOS -> ID CORIZQ LISTAS CORDER
Rule 33    ARREGLOS -> CORIZQ LISTAS CORDER
Rule 34    ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 35    ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 36    LISTAS -> LISTAS COMA LISTA
Rule 37    LISTAS -> LISTA
Rule 38    LISTA -> NATIVAS
Rule 39    LISTA -> ARREGLOS
Rule 40    LISTA -> LLAMADAS
Rule 41    LISTA -> E
Rule 42    ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 43    ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 44    ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 45    ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA
Rule 46    ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA
Rule 47    ASIGNACION -> ID IGUAL LISTA PTCOMA
Rule 48    ASIGNACION -> R_GLOBAL ID PTCOMA
Rule 49    ASIGNACION -> R_LOCAL ID PTCOMA
Rule 50    TIPO -> R_NOTHING
Rule 51    TIPO -> R_INT64
Rule 52    TIPO -> R_FLOAT64
Rule 53    TIPO -> R_STRING
Rule 54    TIPO -> R_CHAR
Rule 55    TIPO -> R_BOOL
Rule 56    LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA
Rule 57    LLAMADAS -> ID PARIZQ PARDER PTCOMA
Rule 58    E -> E MAS E
Rule 59    E -> E MENOS E
Rule 60    E -> E POR E
Rule 61    E -> E DIVIDIDO E
Rule 62    E -> E MODAL E
Rule 63    E -> E POTENCIA E
Rule 64    E -> MENOS E
Rule 65    E -> PARIZQ E PARDER
Rule 66    E -> R_LOG10 PARIZQ E PARDER
Rule 67    E -> R_SIN PARIZQ E PARDER
Rule 68    E -> R_COS PARIZQ E PARDER
Rule 69    E -> R_TAN PARIZQ E PARDER
Rule 70    E -> R_SQRT PARIZQ E PARDER
Rule 71    E -> R_UPPERCASE PARIZQ E PARDER
Rule 72    E -> R_LOWERCASE PARIZQ E PARDER
Rule 73    E -> R_LOG PARIZQ E COMA E PARDER
Rule 74    E -> DECIMAL
Rule 75    E -> ENTERO
Rule 76    E -> R_TRUE
Rule 77    E -> R_FALSE
Rule 78    E -> CADENA
Rule 79    E -> ID
Rule 80    RE -> RE MENQUE RE
Rule 81    RE -> RE MAYQUE RE
Rule 82    RE -> RE IGUALQUE RE
Rule 83    RE -> RE NIGUALQUE RE
Rule 84    RE -> RE MENORIGUAL RE
Rule 85    RE -> RE MAYORIGUAL RE
Rule 86    RE -> PARIZQ RE PARDER
Rule 87    RE -> E
Rule 88    LO -> LO AND LO
Rule 89    LO -> LO OR LO
Rule 90    LO -> DIFERENTE LO
Rule 91    LO -> PARIZQ LO PARDER
Rule 92    LO -> RE
Rule 93    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 94    NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 95    NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 96    NATIVAS -> R_STRING PARIZQ LISTA PARDER
Rule 97    NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 98    NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
Rule 99    NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER
Rule 100   NATIVAS -> ID PUNTO R_LENGTH
Rule 101   RETURN -> R_RETURN LISTA
Rule 102   RETURN -> R_RETURN
Rule 103   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
Rule 104   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 105   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
Rule 106   FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
Rule 107   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 108   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
Rule 109   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 110   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
Rule 111   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 112   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 113   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 114   IFS -> R_IF LO R_END PTCOMA
Rule 115   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 116   IFS -> R_IF LO ELSEIF
Rule 117   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 118   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 119   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 120   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 121   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 122   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 123   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 124   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 125   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 126   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 127   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS
Rule 128   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS
Rule 129   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES
Rule 130   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION
Rule 131   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I
Rule 132   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS
Rule 133   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS
Rule 134   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS
Rule 135   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK
Rule 136   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE
Rule 137   INSTRUCCIONES_LOOP -> IFS
Rule 138   INSTRUCCIONES_LOOP -> FORS
Rule 139   INSTRUCCIONES_LOOP -> WHILES
Rule 140   INSTRUCCIONES_LOOP -> ASIGNACION
Rule 141   INSTRUCCIONES_LOOP -> I
Rule 142   INSTRUCCIONES_LOOP -> LLAMADAS
Rule 143   INSTRUCCIONES_LOOP -> NATIVAS
Rule 144   INSTRUCCIONES_LOOP -> STRUCTS
Rule 145   INSTRUCCIONES_LOOP -> R_BREAK
Rule 146   INSTRUCCIONES_LOOP -> R_CONTINUE
Rule 147   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 148   WHILES -> R_WHILE LO R_END PTCOMA
Rule 149   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 150   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 151   RANGO -> E DOSPUNTOS E
Rule 152   RANGO -> E
Rule 153   RANGO -> ARREGLOS
Rule 154   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 155   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 156   STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA
Rule 157   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 158   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 159   ELEMENTOS -> ELEMENTOS COMA ELEMENTO
Rule 160   ELEMENTOS -> ELEMENTO
Rule 161   ELEMENTO -> ID
Rule 162   ELEMENTO -> ID DOSPUNTOS TIPO

Terminals, with rules where they appear

AND                  : 88
CADENA               : 78
COMA                 : 23 36 73 93 94 98 159
CORDER               : 32 33 34 34 35 35 154
CORIZQ               : 32 33 34 34 35 35 154
DECIMAL              : 74
DIFERENTE            : 90 98 99
DIVIDIDO             : 61
DOLAR                : 29 30 31
DOSPUNTOS            : 42 43 44 151 154 162
ENTERO               : 75
ID                   : 32 34 42 43 44 45 46 47 48 49 56 57 79 98 99 100 103 104 105 106 107 108 109 110 149 150 154 155 156 157 158 161 162
IGUAL                : 42 43 44 45 46 47
IGUALQUE             : 82
MAS                  : 58
MAYORIGUAL           : 85
MAYQUE               : 81
MENORIGUAL           : 84
MENOS                : 59 64
MENQUE               : 80
MODAL                : 62
NIGUALQUE            : 83
OR                   : 89
PARDER               : 21 22 29 30 31 57 65 66 67 68 69 70 71 72 73 86 91 93 94 95 96 97 98 99 103 104 105 106 107 108 109 110
PARIZQ               : 21 22 29 30 31 56 56 57 65 66 67 68 69 70 71 72 73 86 91 93 94 95 96 97 98 99 103 104 105 106 107 108 109 110
POR                  : 60
POTENCIA             : 63
PTCOMA               : 11 19 21 22 42 43 44 45 46 47 48 49 56 57 103 104 105 106 107 108 109 110 111 112 114 115 117 118 119 120 122 123 125 126 147 148 149 150 155 156 157 158
PUNTO                : 100
R_BOOL               : 55
R_BREAK              : 135 145
R_CHAR               : 54
R_CONTINUE           : 136 146
R_COS                : 68
R_ELSE               : 112 115 117 118 120 123 125 126
R_ELSEIF             : 119 120 121 122 123 124 125 126
R_END                : 103 104 105 106 107 108 109 110 111 112 114 115 117 118 119 120 122 123 125 126 147 148 149 150 155 157 158
R_FALSE              : 77
R_FLOAT              : 95
R_FLOAT64            : 52
R_FOR                : 149 150
R_FUNCTION           : 103 104 105 106 107 108 109 110
R_GLOBAL             : 42 45 48
R_IF                 : 111 112 113 114 115 116 117 118
R_IN                 : 149 150
R_INT64              : 51
R_LENGTH             : 100
R_LOCAL              : 43 46 49
R_LOG                : 73
R_LOG10              : 66
R_LOWERCASE          : 72
R_MUTABLE            : 155 157
R_NOTHING            : 50
R_PARSE              : 93
R_POP                : 99
R_PRINT              : 21
R_PRINTLN            : 22
R_PUSH               : 98
R_RETURN             : 101 102
R_SIN                : 67
R_SQRT               : 70
R_STRING             : 53 96
R_STRUCT             : 155 156 157 158
R_TAN                : 69
R_TRUE               : 76
R_TRUNC              : 94
R_TYPEOF             : 97
R_UPPERCASE          : 71
R_WHILE              : 147 148
error                : 

Nonterminals, with rules where they appear

ARREGLOS             : 26 30 39 153
ASIGNACION           : 8 16 130 140
E                    : 28 29 41 58 58 59 59 60 60 61 61 62 62 63 63 64 65 66 67 68 69 70 71 72 73 73 87 98 151 151 152 154 154
ELEMENTO             : 159 160
ELEMENTOS            : 155 156 159
ELSEIF               : 113 116 121 124
FORS                 : 6 14 128 138
FUNCIONES            : 1 3
I                    : 9 17 131 141
IFS                  : 5 13 127 137
IMPRESION            : 23 24
IMPRESIONES          : 21 22 23
INICIO               : 1 2 0
INSTRUCCIONES        : 2 4 5 6 7 8 9 10 11 12 103 104 107 108 111 112 112 113 115 117 119 120 120 121 123 125
INSTRUCCIONES_LOOP   : 127 128 129 130 131 132 133 134 135 136 147 149
LISTA                : 36 37 42 43 44 45 46 47 93 94 95 96 97 101
LISTAS               : 32 33 34 34 35 35 36 56 103 104 105 106
LLAMADAS             : 10 18 27 40 132 142
LO                   : 88 88 89 89 90 91 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 147 148
NATIVAS              : 11 19 25 31 38 133 143
RANGO                : 149 150
RE                   : 80 80 81 81 82 82 83 83 84 84 85 85 86 92
RETURN               : 104 106 108 110
STRUCTS              : 12 20 134 144
TIPO                 : 42 43 44 93 94 162
WHILES               : 7 15 129 139

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO FUNCIONES
    (2) INICIO -> . INICIO INSTRUCCIONES
    (3) INICIO -> . FUNCIONES
    (4) INICIO -> . INSTRUCCIONES
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (107) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INICIO                         shift and go to state 1
    FUNCIONES                      shift and go to state 2
    INSTRUCCIONES                  shift and go to state 3
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . FUNCIONES
    (2) INICIO -> INICIO . INSTRUCCIONES
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA
    (106) FUNCIONES -> . R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (107) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (110) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_FUNCTION      shift and go to state 4
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    FUNCIONES                      shift and go to state 30
    INSTRUCCIONES                  shift and go to state 31
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 2

    (3) INICIO -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INICIO -> FUNCIONES .)
    R_IF            reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INICIO -> FUNCIONES .)
    ID              reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INICIO -> FUNCIONES .)
    R_STRING        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INICIO -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INICIO -> FUNCIONES .)
    R_POP           reduce using rule 3 (INICIO -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INICIO -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INICIO -> FUNCIONES .)
    $end            reduce using rule 3 (INICIO -> FUNCIONES .)


state 3

    (4) INICIO -> INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
    R_FUNCTION      reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INICIO -> INSTRUCCIONES .)
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

  ! R_IF            [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 4 (INICIO -> INSTRUCCIONES .) ]

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 4

    (103) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION . ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (107) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER RETURN R_END PTCOMA

    ID              shift and go to state 40


state 5

    (44) ASIGNACION -> ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> ID . IGUAL LISTA PTCOMA
    (56) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> ID . PARIZQ PARDER PTCOMA
    (100) NATIVAS -> ID . PUNTO R_LENGTH

    IGUAL           shift and go to state 41
    PARIZQ          shift and go to state 42
    PUNTO           shift and go to state 43


state 6

    (13) INSTRUCCIONES -> IFS .

    R_IF            reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FOR           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_WHILE         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_LOCAL         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    ID              reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PRINT         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PARSE         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_TRUNC         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FLOAT         reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_STRING        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_PUSH          reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_POP           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_STRUCT        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCIONES -> IFS .)
    $end            reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_END           reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_ELSE          reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCIONES -> IFS .)
    R_RETURN        reduce using rule 13 (INSTRUCCIONES -> IFS .)


state 7

    (14) INSTRUCCIONES -> FORS .

    R_IF            reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FOR           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_WHILE         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_LOCAL         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    ID              reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PRINT         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PARSE         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_TRUNC         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FLOAT         reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_STRING        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_PUSH          reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_POP           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_STRUCT        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCIONES -> FORS .)
    $end            reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_END           reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_ELSE          reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCIONES -> FORS .)
    R_RETURN        reduce using rule 14 (INSTRUCCIONES -> FORS .)


state 8

    (15) INSTRUCCIONES -> WHILES .

    R_IF            reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FOR           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_WHILE         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_LOCAL         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    ID              reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PRINT         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PARSE         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_TRUNC         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FLOAT         reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_STRING        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_PUSH          reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_POP           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_STRUCT        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    $end            reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_END           reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_ELSE          reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCIONES -> WHILES .)
    R_RETURN        reduce using rule 15 (INSTRUCCIONES -> WHILES .)


state 9

    (16) INSTRUCCIONES -> ASIGNACION .

    R_IF            reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FOR           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_WHILE         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_LOCAL         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    ID              reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINT         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PARSE         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_TRUNC         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FLOAT         reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_STRING        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_PUSH          reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_POP           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_STRUCT        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    $end            reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_END           reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSE          reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)
    R_RETURN        reduce using rule 16 (INSTRUCCIONES -> ASIGNACION .)


state 10

    (17) INSTRUCCIONES -> I .

    R_IF            reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FOR           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_WHILE         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_LOCAL         reduce using rule 17 (INSTRUCCIONES -> I .)
    ID              reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PRINT         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PARSE         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_TRUNC         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FLOAT         reduce using rule 17 (INSTRUCCIONES -> I .)
    R_STRING        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_PUSH          reduce using rule 17 (INSTRUCCIONES -> I .)
    R_POP           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCIONES -> I .)
    R_STRUCT        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCIONES -> I .)
    $end            reduce using rule 17 (INSTRUCCIONES -> I .)
    R_END           reduce using rule 17 (INSTRUCCIONES -> I .)
    R_ELSE          reduce using rule 17 (INSTRUCCIONES -> I .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCIONES -> I .)
    R_RETURN        reduce using rule 17 (INSTRUCCIONES -> I .)


state 11

    (18) INSTRUCCIONES -> LLAMADAS .

    R_IF            reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FOR           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_WHILE         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_GLOBAL        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_LOCAL         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    ID              reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINT         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PRINTLN       reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PARSE         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_TRUNC         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FLOAT         reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_STRING        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_TYPEOF        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_PUSH          reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_POP           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_MUTABLE       reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_STRUCT        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_FUNCTION      reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    $end            reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_END           reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSE          reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_ELSEIF        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)
    R_RETURN        reduce using rule 18 (INSTRUCCIONES -> LLAMADAS .)


state 12

    (19) INSTRUCCIONES -> NATIVAS . PTCOMA

    PTCOMA          shift and go to state 44


state 13

    (20) INSTRUCCIONES -> STRUCTS .

    R_IF            reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FOR           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_WHILE         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_GLOBAL        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_LOCAL         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    ID              reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PRINT         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PRINTLN       reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PARSE         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_TRUNC         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FLOAT         reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_STRING        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_TYPEOF        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_PUSH          reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_POP           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_MUTABLE       reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_STRUCT        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_FUNCTION      reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    $end            reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_END           reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_ELSE          reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_ELSEIF        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)
    R_RETURN        reduce using rule 20 (INSTRUCCIONES -> STRUCTS .)


state 14

    (111) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (114) IFS -> R_IF . LO R_END PTCOMA
    (115) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> R_IF . LO ELSEIF
    (117) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 45
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 15

    (149) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 65


state 16

    (147) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> R_WHILE . LO R_END PTCOMA
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 66
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 17

    (42) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> R_GLOBAL . ID PTCOMA

    ID              shift and go to state 67


state 18

    (43) ASIGNACION -> R_LOCAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (46) ASIGNACION -> R_LOCAL . ID IGUAL LISTA PTCOMA
    (49) ASIGNACION -> R_LOCAL . ID PTCOMA

    ID              shift and go to state 68


state 19

    (21) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 69


state 20

    (22) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 70


state 21

    (93) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 71


state 22

    (94) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 72


state 23

    (95) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 73


state 24

    (96) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 74


state 25

    (97) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 75


state 26

    (98) NATIVAS -> R_PUSH . DIFERENTE PARIZQ ID COMA E PARDER

    DIFERENTE       shift and go to state 76


state 27

    (99) NATIVAS -> R_POP . DIFERENTE PARIZQ ID PARDER

    DIFERENTE       shift and go to state 77


state 28

    (155) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (157) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 78


state 29

    (156) STRUCTS -> R_STRUCT . ID ELEMENTOS PTCOMA
    (158) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 79


state 30

    (1) INICIO -> INICIO FUNCIONES .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_IF            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    ID              reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_STRING        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_POP           reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO FUNCIONES .)
    $end            reduce using rule 1 (INICIO -> INICIO FUNCIONES .)


state 31

    (2) INICIO -> INICIO INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
    R_FUNCTION      reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    $end            reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .)
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

  ! R_IF            [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 2 (INICIO -> INICIO INSTRUCCIONES .) ]

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 32

    (5) INSTRUCCIONES -> INSTRUCCIONES IFS .

    R_IF            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FOR           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_WHILE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_GLOBAL        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_LOCAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    ID              reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PRINTLN       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PARSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TRUNC         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FLOAT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_STRING        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_TYPEOF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_PUSH          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_POP           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_MUTABLE       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_STRUCT        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_FUNCTION      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    $end            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_END           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_ELSEIF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)
    R_RETURN        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES IFS .)


state 33

    (6) INSTRUCCIONES -> INSTRUCCIONES FORS .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_STRING        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES FORS .)


state 34

    (7) INSTRUCCIONES -> INSTRUCCIONES WHILES .

    R_IF            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FOR           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_WHILE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_LOCAL         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    ID              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PARSE         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TRUNC         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FLOAT         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_STRING        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_PUSH          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_POP           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_STRUCT        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    $end            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_END           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSE          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)
    R_RETURN        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES WHILES .)


state 35

    (8) INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .

    R_IF            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FOR           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_WHILE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_LOCAL         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    ID              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PARSE         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TRUNC         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FLOAT         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_STRING        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_PUSH          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_POP           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_STRUCT        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    $end            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_END           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSE          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)
    R_RETURN        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCIONES ASIGNACION .)


state 36

    (9) INSTRUCCIONES -> INSTRUCCIONES I .

    R_IF            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FOR           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_WHILE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_LOCAL         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    ID              reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PARSE         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TRUNC         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FLOAT         reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_STRING        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_PUSH          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_POP           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_STRUCT        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    $end            reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_END           reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSE          reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)
    R_RETURN        reduce using rule 9 (INSTRUCCIONES -> INSTRUCCIONES I .)


state 37

    (10) INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .

    R_IF            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FOR           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_WHILE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_LOCAL         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    ID              reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PARSE         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TRUNC         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FLOAT         reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_STRING        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_PUSH          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_POP           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_STRUCT        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    $end            reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_END           reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSE          reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)
    R_RETURN        reduce using rule 10 (INSTRUCCIONES -> INSTRUCCIONES LLAMADAS .)


state 38

    (11) INSTRUCCIONES -> INSTRUCCIONES NATIVAS . PTCOMA

    PTCOMA          shift and go to state 80


state 39

    (12) INSTRUCCIONES -> INSTRUCCIONES STRUCTS .

    R_IF            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FOR           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_WHILE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_LOCAL         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    ID              reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PARSE         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TRUNC         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FLOAT         reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_STRING        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_PUSH          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_POP           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_STRUCT        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    $end            reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_END           reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSE          reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)
    R_RETURN        reduce using rule 12 (INSTRUCCIONES -> INSTRUCCIONES STRUCTS .)


state 40

    (103) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID . PARIZQ LISTAS PARDER RETURN R_END PTCOMA
    (107) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER RETURN R_END PTCOMA

    PARIZQ          shift and go to state 81


state 41

    (44) ASIGNACION -> ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> ID IGUAL . LISTA PTCOMA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 83
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 42

    (56) LLAMADAS -> ID PARIZQ . LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> ID PARIZQ . PARDER PTCOMA
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARDER          shift and go to state 91
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 90
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 43

    (100) NATIVAS -> ID PUNTO . R_LENGTH

    R_LENGTH        shift and go to state 93


state 44

    (19) INSTRUCCIONES -> NATIVAS PTCOMA .

    R_IF            reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    ID              reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    $end            reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_END           reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 19 (INSTRUCCIONES -> NATIVAS PTCOMA .)


state 45

    (111) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (114) IFS -> R_IF LO . R_END PTCOMA
    (115) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> R_IF LO . ELSEIF
    (117) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (122) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> . R_ELSEIF LO ELSEIF
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 95
    R_ELSE          shift and go to state 96
    AND             shift and go to state 98
    OR              shift and go to state 99
    R_ELSEIF        shift and go to state 100
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 94
    ELSEIF                         shift and go to state 97
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 46

    (90) LO -> DIFERENTE . LO
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 101
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 47

    (91) LO -> PARIZQ . LO PARDER
    (86) RE -> PARIZQ . RE PARDER
    (65) E -> PARIZQ . E PARDER
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 102
    RE                             shift and go to state 103
    E                              shift and go to state 104

state 48

    (92) LO -> RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 92 (LO -> RE .)
    R_ELSE          reduce using rule 92 (LO -> RE .)
    AND             reduce using rule 92 (LO -> RE .)
    OR              reduce using rule 92 (LO -> RE .)
    R_ELSEIF        reduce using rule 92 (LO -> RE .)
    R_IF            reduce using rule 92 (LO -> RE .)
    R_FOR           reduce using rule 92 (LO -> RE .)
    R_WHILE         reduce using rule 92 (LO -> RE .)
    R_GLOBAL        reduce using rule 92 (LO -> RE .)
    R_LOCAL         reduce using rule 92 (LO -> RE .)
    ID              reduce using rule 92 (LO -> RE .)
    R_PRINT         reduce using rule 92 (LO -> RE .)
    R_PRINTLN       reduce using rule 92 (LO -> RE .)
    R_PARSE         reduce using rule 92 (LO -> RE .)
    R_TRUNC         reduce using rule 92 (LO -> RE .)
    R_FLOAT         reduce using rule 92 (LO -> RE .)
    R_STRING        reduce using rule 92 (LO -> RE .)
    R_TYPEOF        reduce using rule 92 (LO -> RE .)
    R_PUSH          reduce using rule 92 (LO -> RE .)
    R_POP           reduce using rule 92 (LO -> RE .)
    R_MUTABLE       reduce using rule 92 (LO -> RE .)
    R_STRUCT        reduce using rule 92 (LO -> RE .)
    R_BREAK         reduce using rule 92 (LO -> RE .)
    R_CONTINUE      reduce using rule 92 (LO -> RE .)
    PARDER          reduce using rule 92 (LO -> RE .)
    MENQUE          shift and go to state 105
    MAYQUE          shift and go to state 106
    IGUALQUE        shift and go to state 107
    NIGUALQUE       shift and go to state 108
    MENORIGUAL      shift and go to state 109
    MAYORIGUAL      shift and go to state 110


state 49

    (87) RE -> E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MENQUE          reduce using rule 87 (RE -> E .)
    MAYQUE          reduce using rule 87 (RE -> E .)
    IGUALQUE        reduce using rule 87 (RE -> E .)
    NIGUALQUE       reduce using rule 87 (RE -> E .)
    MENORIGUAL      reduce using rule 87 (RE -> E .)
    MAYORIGUAL      reduce using rule 87 (RE -> E .)
    R_END           reduce using rule 87 (RE -> E .)
    R_ELSE          reduce using rule 87 (RE -> E .)
    AND             reduce using rule 87 (RE -> E .)
    OR              reduce using rule 87 (RE -> E .)
    R_ELSEIF        reduce using rule 87 (RE -> E .)
    R_IF            reduce using rule 87 (RE -> E .)
    R_FOR           reduce using rule 87 (RE -> E .)
    R_WHILE         reduce using rule 87 (RE -> E .)
    R_GLOBAL        reduce using rule 87 (RE -> E .)
    R_LOCAL         reduce using rule 87 (RE -> E .)
    ID              reduce using rule 87 (RE -> E .)
    R_PRINT         reduce using rule 87 (RE -> E .)
    R_PRINTLN       reduce using rule 87 (RE -> E .)
    R_PARSE         reduce using rule 87 (RE -> E .)
    R_TRUNC         reduce using rule 87 (RE -> E .)
    R_FLOAT         reduce using rule 87 (RE -> E .)
    R_STRING        reduce using rule 87 (RE -> E .)
    R_TYPEOF        reduce using rule 87 (RE -> E .)
    R_PUSH          reduce using rule 87 (RE -> E .)
    R_POP           reduce using rule 87 (RE -> E .)
    R_MUTABLE       reduce using rule 87 (RE -> E .)
    R_STRUCT        reduce using rule 87 (RE -> E .)
    R_BREAK         reduce using rule 87 (RE -> E .)
    R_CONTINUE      reduce using rule 87 (RE -> E .)
    PARDER          reduce using rule 87 (RE -> E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 50

    (64) E -> MENOS . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 117

state 51

    (66) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 118


state 52

    (67) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 119


state 53

    (68) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 120


state 54

    (69) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 121


state 55

    (70) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 122


state 56

    (71) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 123


state 57

    (72) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 124


state 58

    (73) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 125


state 59

    (74) E -> DECIMAL .

    MAS             reduce using rule 74 (E -> DECIMAL .)
    MENOS           reduce using rule 74 (E -> DECIMAL .)
    POR             reduce using rule 74 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 74 (E -> DECIMAL .)
    MODAL           reduce using rule 74 (E -> DECIMAL .)
    POTENCIA        reduce using rule 74 (E -> DECIMAL .)
    MENQUE          reduce using rule 74 (E -> DECIMAL .)
    MAYQUE          reduce using rule 74 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 74 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 74 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 74 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 74 (E -> DECIMAL .)
    R_END           reduce using rule 74 (E -> DECIMAL .)
    R_ELSE          reduce using rule 74 (E -> DECIMAL .)
    AND             reduce using rule 74 (E -> DECIMAL .)
    OR              reduce using rule 74 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 74 (E -> DECIMAL .)
    R_IF            reduce using rule 74 (E -> DECIMAL .)
    R_FOR           reduce using rule 74 (E -> DECIMAL .)
    R_WHILE         reduce using rule 74 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 74 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 74 (E -> DECIMAL .)
    ID              reduce using rule 74 (E -> DECIMAL .)
    R_PRINT         reduce using rule 74 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 74 (E -> DECIMAL .)
    R_PARSE         reduce using rule 74 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 74 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 74 (E -> DECIMAL .)
    R_STRING        reduce using rule 74 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 74 (E -> DECIMAL .)
    R_PUSH          reduce using rule 74 (E -> DECIMAL .)
    R_POP           reduce using rule 74 (E -> DECIMAL .)
    R_MUTABLE       reduce using rule 74 (E -> DECIMAL .)
    R_STRUCT        reduce using rule 74 (E -> DECIMAL .)
    R_BREAK         reduce using rule 74 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 74 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 74 (E -> DECIMAL .)
    PTCOMA          reduce using rule 74 (E -> DECIMAL .)
    PARIZQ          reduce using rule 74 (E -> DECIMAL .)
    COMA            reduce using rule 74 (E -> DECIMAL .)
    PARDER          reduce using rule 74 (E -> DECIMAL .)
    CORDER          reduce using rule 74 (E -> DECIMAL .)


state 60

    (75) E -> ENTERO .

    MAS             reduce using rule 75 (E -> ENTERO .)
    MENOS           reduce using rule 75 (E -> ENTERO .)
    POR             reduce using rule 75 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 75 (E -> ENTERO .)
    MODAL           reduce using rule 75 (E -> ENTERO .)
    POTENCIA        reduce using rule 75 (E -> ENTERO .)
    MENQUE          reduce using rule 75 (E -> ENTERO .)
    MAYQUE          reduce using rule 75 (E -> ENTERO .)
    IGUALQUE        reduce using rule 75 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 75 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 75 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 75 (E -> ENTERO .)
    R_END           reduce using rule 75 (E -> ENTERO .)
    R_ELSE          reduce using rule 75 (E -> ENTERO .)
    AND             reduce using rule 75 (E -> ENTERO .)
    OR              reduce using rule 75 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 75 (E -> ENTERO .)
    R_IF            reduce using rule 75 (E -> ENTERO .)
    R_FOR           reduce using rule 75 (E -> ENTERO .)
    R_WHILE         reduce using rule 75 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 75 (E -> ENTERO .)
    R_LOCAL         reduce using rule 75 (E -> ENTERO .)
    ID              reduce using rule 75 (E -> ENTERO .)
    R_PRINT         reduce using rule 75 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 75 (E -> ENTERO .)
    R_PARSE         reduce using rule 75 (E -> ENTERO .)
    R_TRUNC         reduce using rule 75 (E -> ENTERO .)
    R_FLOAT         reduce using rule 75 (E -> ENTERO .)
    R_STRING        reduce using rule 75 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 75 (E -> ENTERO .)
    R_PUSH          reduce using rule 75 (E -> ENTERO .)
    R_POP           reduce using rule 75 (E -> ENTERO .)
    R_MUTABLE       reduce using rule 75 (E -> ENTERO .)
    R_STRUCT        reduce using rule 75 (E -> ENTERO .)
    R_BREAK         reduce using rule 75 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 75 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 75 (E -> ENTERO .)
    PTCOMA          reduce using rule 75 (E -> ENTERO .)
    PARIZQ          reduce using rule 75 (E -> ENTERO .)
    COMA            reduce using rule 75 (E -> ENTERO .)
    PARDER          reduce using rule 75 (E -> ENTERO .)
    CORDER          reduce using rule 75 (E -> ENTERO .)


state 61

    (76) E -> R_TRUE .

    MAS             reduce using rule 76 (E -> R_TRUE .)
    MENOS           reduce using rule 76 (E -> R_TRUE .)
    POR             reduce using rule 76 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 76 (E -> R_TRUE .)
    MODAL           reduce using rule 76 (E -> R_TRUE .)
    POTENCIA        reduce using rule 76 (E -> R_TRUE .)
    MENQUE          reduce using rule 76 (E -> R_TRUE .)
    MAYQUE          reduce using rule 76 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 76 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 76 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 76 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 76 (E -> R_TRUE .)
    R_END           reduce using rule 76 (E -> R_TRUE .)
    R_ELSE          reduce using rule 76 (E -> R_TRUE .)
    AND             reduce using rule 76 (E -> R_TRUE .)
    OR              reduce using rule 76 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 76 (E -> R_TRUE .)
    R_IF            reduce using rule 76 (E -> R_TRUE .)
    R_FOR           reduce using rule 76 (E -> R_TRUE .)
    R_WHILE         reduce using rule 76 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 76 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 76 (E -> R_TRUE .)
    ID              reduce using rule 76 (E -> R_TRUE .)
    R_PRINT         reduce using rule 76 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 76 (E -> R_TRUE .)
    R_PARSE         reduce using rule 76 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 76 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 76 (E -> R_TRUE .)
    R_STRING        reduce using rule 76 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 76 (E -> R_TRUE .)
    R_PUSH          reduce using rule 76 (E -> R_TRUE .)
    R_POP           reduce using rule 76 (E -> R_TRUE .)
    R_MUTABLE       reduce using rule 76 (E -> R_TRUE .)
    R_STRUCT        reduce using rule 76 (E -> R_TRUE .)
    R_BREAK         reduce using rule 76 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 76 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 76 (E -> R_TRUE .)
    PTCOMA          reduce using rule 76 (E -> R_TRUE .)
    PARIZQ          reduce using rule 76 (E -> R_TRUE .)
    COMA            reduce using rule 76 (E -> R_TRUE .)
    PARDER          reduce using rule 76 (E -> R_TRUE .)
    CORDER          reduce using rule 76 (E -> R_TRUE .)


state 62

    (77) E -> R_FALSE .

    MAS             reduce using rule 77 (E -> R_FALSE .)
    MENOS           reduce using rule 77 (E -> R_FALSE .)
    POR             reduce using rule 77 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 77 (E -> R_FALSE .)
    MODAL           reduce using rule 77 (E -> R_FALSE .)
    POTENCIA        reduce using rule 77 (E -> R_FALSE .)
    MENQUE          reduce using rule 77 (E -> R_FALSE .)
    MAYQUE          reduce using rule 77 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 77 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 77 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 77 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 77 (E -> R_FALSE .)
    R_END           reduce using rule 77 (E -> R_FALSE .)
    R_ELSE          reduce using rule 77 (E -> R_FALSE .)
    AND             reduce using rule 77 (E -> R_FALSE .)
    OR              reduce using rule 77 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 77 (E -> R_FALSE .)
    R_IF            reduce using rule 77 (E -> R_FALSE .)
    R_FOR           reduce using rule 77 (E -> R_FALSE .)
    R_WHILE         reduce using rule 77 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 77 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 77 (E -> R_FALSE .)
    ID              reduce using rule 77 (E -> R_FALSE .)
    R_PRINT         reduce using rule 77 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 77 (E -> R_FALSE .)
    R_PARSE         reduce using rule 77 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 77 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 77 (E -> R_FALSE .)
    R_STRING        reduce using rule 77 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 77 (E -> R_FALSE .)
    R_PUSH          reduce using rule 77 (E -> R_FALSE .)
    R_POP           reduce using rule 77 (E -> R_FALSE .)
    R_MUTABLE       reduce using rule 77 (E -> R_FALSE .)
    R_STRUCT        reduce using rule 77 (E -> R_FALSE .)
    R_BREAK         reduce using rule 77 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 77 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 77 (E -> R_FALSE .)
    PTCOMA          reduce using rule 77 (E -> R_FALSE .)
    PARIZQ          reduce using rule 77 (E -> R_FALSE .)
    COMA            reduce using rule 77 (E -> R_FALSE .)
    PARDER          reduce using rule 77 (E -> R_FALSE .)
    CORDER          reduce using rule 77 (E -> R_FALSE .)


state 63

    (78) E -> CADENA .

    MAS             reduce using rule 78 (E -> CADENA .)
    MENOS           reduce using rule 78 (E -> CADENA .)
    POR             reduce using rule 78 (E -> CADENA .)
    DIVIDIDO        reduce using rule 78 (E -> CADENA .)
    MODAL           reduce using rule 78 (E -> CADENA .)
    POTENCIA        reduce using rule 78 (E -> CADENA .)
    MENQUE          reduce using rule 78 (E -> CADENA .)
    MAYQUE          reduce using rule 78 (E -> CADENA .)
    IGUALQUE        reduce using rule 78 (E -> CADENA .)
    NIGUALQUE       reduce using rule 78 (E -> CADENA .)
    MENORIGUAL      reduce using rule 78 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 78 (E -> CADENA .)
    R_END           reduce using rule 78 (E -> CADENA .)
    R_ELSE          reduce using rule 78 (E -> CADENA .)
    AND             reduce using rule 78 (E -> CADENA .)
    OR              reduce using rule 78 (E -> CADENA .)
    R_ELSEIF        reduce using rule 78 (E -> CADENA .)
    R_IF            reduce using rule 78 (E -> CADENA .)
    R_FOR           reduce using rule 78 (E -> CADENA .)
    R_WHILE         reduce using rule 78 (E -> CADENA .)
    R_GLOBAL        reduce using rule 78 (E -> CADENA .)
    R_LOCAL         reduce using rule 78 (E -> CADENA .)
    ID              reduce using rule 78 (E -> CADENA .)
    R_PRINT         reduce using rule 78 (E -> CADENA .)
    R_PRINTLN       reduce using rule 78 (E -> CADENA .)
    R_PARSE         reduce using rule 78 (E -> CADENA .)
    R_TRUNC         reduce using rule 78 (E -> CADENA .)
    R_FLOAT         reduce using rule 78 (E -> CADENA .)
    R_STRING        reduce using rule 78 (E -> CADENA .)
    R_TYPEOF        reduce using rule 78 (E -> CADENA .)
    R_PUSH          reduce using rule 78 (E -> CADENA .)
    R_POP           reduce using rule 78 (E -> CADENA .)
    R_MUTABLE       reduce using rule 78 (E -> CADENA .)
    R_STRUCT        reduce using rule 78 (E -> CADENA .)
    R_BREAK         reduce using rule 78 (E -> CADENA .)
    R_CONTINUE      reduce using rule 78 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 78 (E -> CADENA .)
    PTCOMA          reduce using rule 78 (E -> CADENA .)
    PARIZQ          reduce using rule 78 (E -> CADENA .)
    COMA            reduce using rule 78 (E -> CADENA .)
    PARDER          reduce using rule 78 (E -> CADENA .)
    CORDER          reduce using rule 78 (E -> CADENA .)


state 64

    (79) E -> ID .

    MAS             reduce using rule 79 (E -> ID .)
    MENOS           reduce using rule 79 (E -> ID .)
    POR             reduce using rule 79 (E -> ID .)
    DIVIDIDO        reduce using rule 79 (E -> ID .)
    MODAL           reduce using rule 79 (E -> ID .)
    POTENCIA        reduce using rule 79 (E -> ID .)
    MENQUE          reduce using rule 79 (E -> ID .)
    MAYQUE          reduce using rule 79 (E -> ID .)
    IGUALQUE        reduce using rule 79 (E -> ID .)
    NIGUALQUE       reduce using rule 79 (E -> ID .)
    MENORIGUAL      reduce using rule 79 (E -> ID .)
    MAYORIGUAL      reduce using rule 79 (E -> ID .)
    R_END           reduce using rule 79 (E -> ID .)
    R_ELSE          reduce using rule 79 (E -> ID .)
    AND             reduce using rule 79 (E -> ID .)
    OR              reduce using rule 79 (E -> ID .)
    R_ELSEIF        reduce using rule 79 (E -> ID .)
    R_IF            reduce using rule 79 (E -> ID .)
    R_FOR           reduce using rule 79 (E -> ID .)
    R_WHILE         reduce using rule 79 (E -> ID .)
    R_GLOBAL        reduce using rule 79 (E -> ID .)
    R_LOCAL         reduce using rule 79 (E -> ID .)
    ID              reduce using rule 79 (E -> ID .)
    R_PRINT         reduce using rule 79 (E -> ID .)
    R_PRINTLN       reduce using rule 79 (E -> ID .)
    R_PARSE         reduce using rule 79 (E -> ID .)
    R_TRUNC         reduce using rule 79 (E -> ID .)
    R_FLOAT         reduce using rule 79 (E -> ID .)
    R_STRING        reduce using rule 79 (E -> ID .)
    R_TYPEOF        reduce using rule 79 (E -> ID .)
    R_PUSH          reduce using rule 79 (E -> ID .)
    R_POP           reduce using rule 79 (E -> ID .)
    R_MUTABLE       reduce using rule 79 (E -> ID .)
    R_STRUCT        reduce using rule 79 (E -> ID .)
    R_BREAK         reduce using rule 79 (E -> ID .)
    R_CONTINUE      reduce using rule 79 (E -> ID .)
    PARDER          reduce using rule 79 (E -> ID .)
    DOSPUNTOS       reduce using rule 79 (E -> ID .)
    PTCOMA          reduce using rule 79 (E -> ID .)
    PARIZQ          reduce using rule 79 (E -> ID .)
    COMA            reduce using rule 79 (E -> ID .)
    CORDER          reduce using rule 79 (E -> ID .)


state 65

    (149) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 126


state 66

    (147) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> R_WHILE LO . R_END PTCOMA
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (129) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (130) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (131) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (132) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (133) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_BREAK
    (136) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_CONTINUE
    (137) INSTRUCCIONES_LOOP -> . IFS
    (138) INSTRUCCIONES_LOOP -> . FORS
    (139) INSTRUCCIONES_LOOP -> . WHILES
    (140) INSTRUCCIONES_LOOP -> . ASIGNACION
    (141) INSTRUCCIONES_LOOP -> . I
    (142) INSTRUCCIONES_LOOP -> . LLAMADAS
    (143) INSTRUCCIONES_LOOP -> . NATIVAS
    (144) INSTRUCCIONES_LOOP -> . STRUCTS
    (145) INSTRUCCIONES_LOOP -> . R_BREAK
    (146) INSTRUCCIONES_LOOP -> . R_CONTINUE
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 128
    AND             shift and go to state 98
    OR              shift and go to state 99
    R_BREAK         shift and go to state 137
    R_CONTINUE      shift and go to state 138
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES_LOOP             shift and go to state 127
    IFS                            shift and go to state 129
    FORS                           shift and go to state 130
    WHILES                         shift and go to state 131
    ASIGNACION                     shift and go to state 132
    I                              shift and go to state 133
    LLAMADAS                       shift and go to state 134
    NATIVAS                        shift and go to state 135
    STRUCTS                        shift and go to state 136

state 67

    (42) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA PTCOMA
    (48) ASIGNACION -> R_GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 139
    PTCOMA          shift and go to state 140


state 68

    (43) ASIGNACION -> R_LOCAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (46) ASIGNACION -> R_LOCAL ID . IGUAL LISTA PTCOMA
    (49) ASIGNACION -> R_LOCAL ID . PTCOMA

    IGUAL           shift and go to state 141
    PTCOMA          shift and go to state 142


state 69

    (21) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (23) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (24) IMPRESIONES -> . IMPRESION
    (25) IMPRESION -> . NATIVAS
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . LLAMADAS
    (28) IMPRESION -> . E
    (29) IMPRESION -> . DOLAR PARIZQ E PARDER
    (30) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (31) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DOLAR           shift and go to state 149
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    IMPRESIONES                    shift and go to state 143
    IMPRESION                      shift and go to state 144
    NATIVAS                        shift and go to state 145
    ARREGLOS                       shift and go to state 146
    LLAMADAS                       shift and go to state 147
    E                              shift and go to state 148

state 70

    (22) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (23) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (24) IMPRESIONES -> . IMPRESION
    (25) IMPRESION -> . NATIVAS
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . LLAMADAS
    (28) IMPRESION -> . E
    (29) IMPRESION -> . DOLAR PARIZQ E PARDER
    (30) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (31) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DOLAR           shift and go to state 149
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    IMPRESIONES                    shift and go to state 150
    IMPRESION                      shift and go to state 144
    NATIVAS                        shift and go to state 145
    ARREGLOS                       shift and go to state 146
    LLAMADAS                       shift and go to state 147
    E                              shift and go to state 148

state 71

    (93) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 151

state 72

    (94) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 158

state 73

    (95) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 159
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 74

    (96) NATIVAS -> R_STRING PARIZQ . LISTA PARDER
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 160
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 75

    (97) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 161
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 76

    (98) NATIVAS -> R_PUSH DIFERENTE . PARIZQ ID COMA E PARDER

    PARIZQ          shift and go to state 162


state 77

    (99) NATIVAS -> R_POP DIFERENTE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 163


state 78

    (155) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (157) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 164


state 79

    (156) STRUCTS -> R_STRUCT ID . ELEMENTOS PTCOMA
    (158) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (159) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (160) ELEMENTOS -> . ELEMENTO
    (161) ELEMENTO -> . ID
    (162) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 167
    ID              shift and go to state 165

    ELEMENTOS                      shift and go to state 166
    ELEMENTO                       shift and go to state 168

state 80

    (11) INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .

    R_IF            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FOR           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    ID              reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_STRING        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_POP           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    $end            reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_END           reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 11 (INSTRUCCIONES -> INSTRUCCIONES NATIVAS PTCOMA .)


state 81

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ . LISTAS PARDER RETURN R_END PTCOMA
    (107) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER RETURN R_END PTCOMA
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARDER          shift and go to state 170
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 169
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 82

    (100) NATIVAS -> ID . PUNTO R_LENGTH
    (32) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> ID . PARIZQ PARDER PTCOMA
    (79) E -> ID .

  ! shift/reduce conflict for PARIZQ resolved as shift
    PUNTO           shift and go to state 43
    CORIZQ          shift and go to state 171
    PARIZQ          shift and go to state 42
    MAS             reduce using rule 79 (E -> ID .)
    MENOS           reduce using rule 79 (E -> ID .)
    POR             reduce using rule 79 (E -> ID .)
    DIVIDIDO        reduce using rule 79 (E -> ID .)
    MODAL           reduce using rule 79 (E -> ID .)
    POTENCIA        reduce using rule 79 (E -> ID .)
    DOSPUNTOS       reduce using rule 79 (E -> ID .)
    PTCOMA          reduce using rule 79 (E -> ID .)
    COMA            reduce using rule 79 (E -> ID .)
    PARDER          reduce using rule 79 (E -> ID .)
    CORDER          reduce using rule 79 (E -> ID .)
    R_END           reduce using rule 79 (E -> ID .)

  ! PARIZQ          [ reduce using rule 79 (E -> ID .) ]


state 83

    (44) ASIGNACION -> ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (47) ASIGNACION -> ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 172
    PTCOMA          shift and go to state 173


state 84

    (38) LISTA -> NATIVAS .

    DOSPUNTOS       reduce using rule 38 (LISTA -> NATIVAS .)
    PTCOMA          reduce using rule 38 (LISTA -> NATIVAS .)
    PARIZQ          reduce using rule 38 (LISTA -> NATIVAS .)
    COMA            reduce using rule 38 (LISTA -> NATIVAS .)
    PARDER          reduce using rule 38 (LISTA -> NATIVAS .)
    CORDER          reduce using rule 38 (LISTA -> NATIVAS .)
    R_END           reduce using rule 38 (LISTA -> NATIVAS .)


state 85

    (39) LISTA -> ARREGLOS .

    DOSPUNTOS       reduce using rule 39 (LISTA -> ARREGLOS .)
    PTCOMA          reduce using rule 39 (LISTA -> ARREGLOS .)
    PARIZQ          reduce using rule 39 (LISTA -> ARREGLOS .)
    COMA            reduce using rule 39 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 39 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 39 (LISTA -> ARREGLOS .)
    R_END           reduce using rule 39 (LISTA -> ARREGLOS .)


state 86

    (40) LISTA -> LLAMADAS .

    DOSPUNTOS       reduce using rule 40 (LISTA -> LLAMADAS .)
    PTCOMA          reduce using rule 40 (LISTA -> LLAMADAS .)
    PARIZQ          reduce using rule 40 (LISTA -> LLAMADAS .)
    COMA            reduce using rule 40 (LISTA -> LLAMADAS .)
    PARDER          reduce using rule 40 (LISTA -> LLAMADAS .)
    CORDER          reduce using rule 40 (LISTA -> LLAMADAS .)
    R_END           reduce using rule 40 (LISTA -> LLAMADAS .)


state 87

    (41) LISTA -> E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    DOSPUNTOS       reduce using rule 41 (LISTA -> E .)
    PTCOMA          reduce using rule 41 (LISTA -> E .)
    PARIZQ          reduce using rule 41 (LISTA -> E .)
    COMA            reduce using rule 41 (LISTA -> E .)
    PARDER          reduce using rule 41 (LISTA -> E .)
    CORDER          reduce using rule 41 (LISTA -> E .)
    R_END           reduce using rule 41 (LISTA -> E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 88

    (65) E -> PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 174

state 89

    (33) ARREGLOS -> CORIZQ . LISTAS CORDER
    (35) ARREGLOS -> CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 175
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 90

    (56) LLAMADAS -> ID PARIZQ LISTAS . PARIZQ PTCOMA
    (36) LISTAS -> LISTAS . COMA LISTA

    PARIZQ          shift and go to state 176
    COMA            shift and go to state 177


state 91

    (57) LLAMADAS -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 178


state 92

    (37) LISTAS -> LISTA .

    PARIZQ          reduce using rule 37 (LISTAS -> LISTA .)
    COMA            reduce using rule 37 (LISTAS -> LISTA .)
    PARDER          reduce using rule 37 (LISTAS -> LISTA .)
    CORDER          reduce using rule 37 (LISTAS -> LISTA .)


state 93

    (100) NATIVAS -> ID PUNTO R_LENGTH .

    PTCOMA          reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    DOSPUNTOS       reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARIZQ          reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    COMA            reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_END           reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_BREAK         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_CONTINUE      reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_IF            reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FOR           reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_WHILE         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_GLOBAL        reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_LOCAL         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    ID              reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINT         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINTLN       reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PARSE         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TRUNC         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FLOAT         reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRING        reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TYPEOF        reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PUSH          reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_POP           reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_MUTABLE       reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRUCT        reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARDER          reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)
    CORDER          reduce using rule 100 (NATIVAS -> ID PUNTO R_LENGTH .)


state 94

    (111) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (112) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (117) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (122) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> . R_ELSEIF LO ELSEIF
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 179
    R_ELSE          shift and go to state 180
    R_ELSEIF        shift and go to state 100
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    ELSEIF                         shift and go to state 181
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 95

    (114) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 182


state 96

    (115) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (118) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 184
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 183
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 97

    (116) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_STRING        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 116 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 116 (IFS -> R_IF LO ELSEIF .)


state 98

    (88) LO -> LO AND . LO
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 185
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 99

    (89) LO -> LO OR . LO
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 186
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 100

    (119) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (122) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (123) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> R_ELSEIF . LO ELSEIF
    (125) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (88) LO -> . LO AND LO
    (89) LO -> . LO OR LO
    (90) LO -> . DIFERENTE LO
    (91) LO -> . PARIZQ LO PARDER
    (92) LO -> . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DIFERENTE       shift and go to state 46
    PARIZQ          shift and go to state 47
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    LO                             shift and go to state 187
    RE                             shift and go to state 48
    E                              shift and go to state 49

state 101

    (90) LO -> DIFERENTE LO .
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO

    R_END           reduce using rule 90 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 90 (LO -> DIFERENTE LO .)
    AND             reduce using rule 90 (LO -> DIFERENTE LO .)
    OR              reduce using rule 90 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 90 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 90 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 90 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 90 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 90 (LO -> DIFERENTE LO .)
    ID              reduce using rule 90 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 90 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_STRING        reduce using rule 90 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 90 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 90 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 90 (LO -> DIFERENTE LO .)
    R_MUTABLE       reduce using rule 90 (LO -> DIFERENTE LO .)
    R_STRUCT        reduce using rule 90 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 90 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 90 (LO -> DIFERENTE LO .)
    PARDER          reduce using rule 90 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]


state 102

    (91) LO -> PARIZQ LO . PARDER
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO

    PARDER          shift and go to state 188
    AND             shift and go to state 98
    OR              shift and go to state 99


state 103

    (86) RE -> PARIZQ RE . PARDER
    (92) LO -> RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 189
    AND             reduce using rule 92 (LO -> RE .)
    OR              reduce using rule 92 (LO -> RE .)
    MENQUE          shift and go to state 105
    MAYQUE          shift and go to state 106
    IGUALQUE        shift and go to state 107
    NIGUALQUE       shift and go to state 108
    MENORIGUAL      shift and go to state 109
    MAYORIGUAL      shift and go to state 110

  ! PARDER          [ reduce using rule 92 (LO -> RE .) ]


state 104

    (65) E -> PARIZQ E . PARDER
    (87) RE -> E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 190
    MENQUE          reduce using rule 87 (RE -> E .)
    MAYQUE          reduce using rule 87 (RE -> E .)
    IGUALQUE        reduce using rule 87 (RE -> E .)
    NIGUALQUE       reduce using rule 87 (RE -> E .)
    MENORIGUAL      reduce using rule 87 (RE -> E .)
    MAYORIGUAL      reduce using rule 87 (RE -> E .)
    AND             reduce using rule 87 (RE -> E .)
    OR              reduce using rule 87 (RE -> E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116

  ! PARDER          [ reduce using rule 87 (RE -> E .) ]


state 105

    (80) RE -> RE MENQUE . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 191
    E                              shift and go to state 49

state 106

    (81) RE -> RE MAYQUE . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 193
    E                              shift and go to state 49

state 107

    (82) RE -> RE IGUALQUE . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 194
    E                              shift and go to state 49

state 108

    (83) RE -> RE NIGUALQUE . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 195
    E                              shift and go to state 49

state 109

    (84) RE -> RE MENORIGUAL . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 196
    E                              shift and go to state 49

state 110

    (85) RE -> RE MAYORIGUAL . RE
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 197
    E                              shift and go to state 49

state 111

    (58) E -> E MAS . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 198

state 112

    (59) E -> E MENOS . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 199

state 113

    (60) E -> E POR . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 200

state 114

    (61) E -> E DIVIDIDO . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 201

state 115

    (62) E -> E MODAL . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 202

state 116

    (63) E -> E POTENCIA . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 203

state 117

    (64) E -> MENOS E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 64 (E -> MENOS E .)
    MENOS           reduce using rule 64 (E -> MENOS E .)
    POR             reduce using rule 64 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 64 (E -> MENOS E .)
    MODAL           reduce using rule 64 (E -> MENOS E .)
    POTENCIA        reduce using rule 64 (E -> MENOS E .)
    MENQUE          reduce using rule 64 (E -> MENOS E .)
    MAYQUE          reduce using rule 64 (E -> MENOS E .)
    IGUALQUE        reduce using rule 64 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 64 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 64 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 64 (E -> MENOS E .)
    R_END           reduce using rule 64 (E -> MENOS E .)
    R_ELSE          reduce using rule 64 (E -> MENOS E .)
    AND             reduce using rule 64 (E -> MENOS E .)
    OR              reduce using rule 64 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 64 (E -> MENOS E .)
    R_IF            reduce using rule 64 (E -> MENOS E .)
    R_FOR           reduce using rule 64 (E -> MENOS E .)
    R_WHILE         reduce using rule 64 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 64 (E -> MENOS E .)
    R_LOCAL         reduce using rule 64 (E -> MENOS E .)
    ID              reduce using rule 64 (E -> MENOS E .)
    R_PRINT         reduce using rule 64 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 64 (E -> MENOS E .)
    R_PARSE         reduce using rule 64 (E -> MENOS E .)
    R_TRUNC         reduce using rule 64 (E -> MENOS E .)
    R_FLOAT         reduce using rule 64 (E -> MENOS E .)
    R_STRING        reduce using rule 64 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 64 (E -> MENOS E .)
    R_PUSH          reduce using rule 64 (E -> MENOS E .)
    R_POP           reduce using rule 64 (E -> MENOS E .)
    R_MUTABLE       reduce using rule 64 (E -> MENOS E .)
    R_STRUCT        reduce using rule 64 (E -> MENOS E .)
    R_BREAK         reduce using rule 64 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 64 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 64 (E -> MENOS E .)
    PTCOMA          reduce using rule 64 (E -> MENOS E .)
    PARIZQ          reduce using rule 64 (E -> MENOS E .)
    COMA            reduce using rule 64 (E -> MENOS E .)
    PARDER          reduce using rule 64 (E -> MENOS E .)
    CORDER          reduce using rule 64 (E -> MENOS E .)

  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIVIDIDO        [ shift and go to state 114 ]
  ! MODAL           [ shift and go to state 115 ]
  ! POTENCIA        [ shift and go to state 116 ]


state 118

    (66) E -> R_LOG10 PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 204

state 119

    (67) E -> R_SIN PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 205

state 120

    (68) E -> R_COS PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 206

state 121

    (69) E -> R_TAN PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 207

state 122

    (70) E -> R_SQRT PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 208

state 123

    (71) E -> R_UPPERCASE PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 209

state 124

    (72) E -> R_LOWERCASE PARIZQ . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 210

state 125

    (73) E -> R_LOG PARIZQ . E COMA E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 211

state 126

    (149) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (151) RANGO -> . E DOSPUNTOS E
    (152) RANGO -> . E
    (153) RANGO -> . ARREGLOS
    (154) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    ID              shift and go to state 212
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    CORIZQ          shift and go to state 89

    RANGO                          shift and go to state 213
    E                              shift and go to state 214
    ARREGLOS                       shift and go to state 215

state 127

    (147) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_BREAK
    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_CONTINUE
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 216
    R_BREAK         shift and go to state 225
    R_CONTINUE      shift and go to state 226
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 217
    FORS                           shift and go to state 218
    WHILES                         shift and go to state 219
    ASIGNACION                     shift and go to state 220
    I                              shift and go to state 221
    LLAMADAS                       shift and go to state 222
    NATIVAS                        shift and go to state 223
    STRUCTS                        shift and go to state 224

state 128

    (148) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 227


state 129

    (137) INSTRUCCIONES_LOOP -> IFS .

    R_END           reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_BREAK         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_IF            reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_FOR           reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_WHILE         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_LOCAL         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    ID              reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINT         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_PARSE         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_TRUNC         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_FLOAT         reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_STRING        reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_PUSH          reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_POP           reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_MUTABLE       reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)
    R_STRUCT        reduce using rule 137 (INSTRUCCIONES_LOOP -> IFS .)


state 130

    (138) INSTRUCCIONES_LOOP -> FORS .

    R_END           reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_BREAK         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_IF            reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_FOR           reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_WHILE         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_LOCAL         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    ID              reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINT         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_PARSE         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_TRUNC         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_FLOAT         reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_STRING        reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_PUSH          reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_POP           reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_MUTABLE       reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)
    R_STRUCT        reduce using rule 138 (INSTRUCCIONES_LOOP -> FORS .)


state 131

    (139) INSTRUCCIONES_LOOP -> WHILES .

    R_END           reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_BREAK         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_IF            reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FOR           reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_WHILE         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    ID              reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINT         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PARSE         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_STRING        reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_PUSH          reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_POP           reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_MUTABLE       reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)
    R_STRUCT        reduce using rule 139 (INSTRUCCIONES_LOOP -> WHILES .)


state 132

    (140) INSTRUCCIONES_LOOP -> ASIGNACION .

    R_END           reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    ID              reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_STRING        reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_MUTABLE       reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)
    R_STRUCT        reduce using rule 140 (INSTRUCCIONES_LOOP -> ASIGNACION .)


state 133

    (141) INSTRUCCIONES_LOOP -> I .

    R_END           reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_BREAK         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_CONTINUE      reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_IF            reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_FOR           reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_WHILE         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_GLOBAL        reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_LOCAL         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    ID              reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_PRINT         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_PRINTLN       reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_PARSE         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_TRUNC         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_FLOAT         reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_STRING        reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_TYPEOF        reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_PUSH          reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_POP           reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_MUTABLE       reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)
    R_STRUCT        reduce using rule 141 (INSTRUCCIONES_LOOP -> I .)


state 134

    (142) INSTRUCCIONES_LOOP -> LLAMADAS .

    R_END           reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_BREAK         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_CONTINUE      reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_IF            reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FOR           reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_WHILE         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_GLOBAL        reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_LOCAL         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    ID              reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINT         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PRINTLN       reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PARSE         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TRUNC         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_FLOAT         reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_STRING        reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_TYPEOF        reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_PUSH          reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_POP           reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_MUTABLE       reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)
    R_STRUCT        reduce using rule 142 (INSTRUCCIONES_LOOP -> LLAMADAS .)


state 135

    (143) INSTRUCCIONES_LOOP -> NATIVAS .

    R_END           reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_BREAK         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_CONTINUE      reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_IF            reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FOR           reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_WHILE         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_GLOBAL        reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_LOCAL         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    ID              reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINT         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PRINTLN       reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PARSE         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TRUNC         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_FLOAT         reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_STRING        reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_TYPEOF        reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_PUSH          reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_POP           reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_MUTABLE       reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)
    R_STRUCT        reduce using rule 143 (INSTRUCCIONES_LOOP -> NATIVAS .)


state 136

    (144) INSTRUCCIONES_LOOP -> STRUCTS .

    R_END           reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_BREAK         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_CONTINUE      reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_IF            reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FOR           reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_WHILE         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_GLOBAL        reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_LOCAL         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    ID              reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINT         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PRINTLN       reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PARSE         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TRUNC         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_FLOAT         reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_STRING        reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_TYPEOF        reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_PUSH          reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_POP           reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_MUTABLE       reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)
    R_STRUCT        reduce using rule 144 (INSTRUCCIONES_LOOP -> STRUCTS .)


state 137

    (145) INSTRUCCIONES_LOOP -> R_BREAK .

    R_END           reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_BREAK         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_CONTINUE      reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_IF            reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_FOR           reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_WHILE         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_GLOBAL        reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_LOCAL         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    ID              reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PRINT         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PRINTLN       reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PARSE         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_TRUNC         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_FLOAT         reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_STRING        reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_TYPEOF        reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_PUSH          reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_POP           reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_MUTABLE       reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)
    R_STRUCT        reduce using rule 145 (INSTRUCCIONES_LOOP -> R_BREAK .)


state 138

    (146) INSTRUCCIONES_LOOP -> R_CONTINUE .

    R_END           reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_BREAK         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_CONTINUE      reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_IF            reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_FOR           reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_WHILE         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_GLOBAL        reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_LOCAL         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    ID              reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PRINT         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PRINTLN       reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PARSE         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_TRUNC         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_FLOAT         reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_STRING        reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_TYPEOF        reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_PUSH          reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_POP           reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_MUTABLE       reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)
    R_STRUCT        reduce using rule 146 (INSTRUCCIONES_LOOP -> R_CONTINUE .)


state 139

    (42) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA PTCOMA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 228
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 140

    (48) ASIGNACION -> R_GLOBAL ID PTCOMA .

    R_IF            reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FOR           reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_WHILE         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_LOCAL         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    ID              reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINT         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PARSE         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TRUNC         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FLOAT         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRING        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PUSH          reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_POP           reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRUCT        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    $end            reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_END           reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSE          reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_BREAK         reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_RETURN        reduce using rule 48 (ASIGNACION -> R_GLOBAL ID PTCOMA .)


state 141

    (43) ASIGNACION -> R_LOCAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (46) ASIGNACION -> R_LOCAL ID IGUAL . LISTA PTCOMA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 229
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 142

    (49) ASIGNACION -> R_LOCAL ID PTCOMA .

    R_IF            reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FOR           reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_WHILE         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_LOCAL         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    ID              reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINT         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PARSE         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TRUNC         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FLOAT         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRING        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PUSH          reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_POP           reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRUCT        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    $end            reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_END           reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSE          reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_BREAK         reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_RETURN        reduce using rule 49 (ASIGNACION -> R_LOCAL ID PTCOMA .)


state 143

    (21) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (23) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 230
    COMA            shift and go to state 231


state 144

    (24) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 24 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 24 (IMPRESIONES -> IMPRESION .)


state 145

    (25) IMPRESION -> NATIVAS .

    PARDER          reduce using rule 25 (IMPRESION -> NATIVAS .)
    COMA            reduce using rule 25 (IMPRESION -> NATIVAS .)


state 146

    (26) IMPRESION -> ARREGLOS .

    PARDER          reduce using rule 26 (IMPRESION -> ARREGLOS .)
    COMA            reduce using rule 26 (IMPRESION -> ARREGLOS .)


state 147

    (27) IMPRESION -> LLAMADAS .

    PARDER          reduce using rule 27 (IMPRESION -> LLAMADAS .)
    COMA            reduce using rule 27 (IMPRESION -> LLAMADAS .)


state 148

    (28) IMPRESION -> E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          reduce using rule 28 (IMPRESION -> E .)
    COMA            reduce using rule 28 (IMPRESION -> E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 149

    (29) IMPRESION -> DOLAR . PARIZQ E PARDER
    (30) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (31) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 232


state 150

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (23) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 233
    COMA            shift and go to state 231


state 151

    (93) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 234


state 152

    (50) TIPO -> R_NOTHING .

    COMA            reduce using rule 50 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 50 (TIPO -> R_NOTHING .)
    R_END           reduce using rule 50 (TIPO -> R_NOTHING .)


state 153

    (51) TIPO -> R_INT64 .

    COMA            reduce using rule 51 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 51 (TIPO -> R_INT64 .)
    R_END           reduce using rule 51 (TIPO -> R_INT64 .)


state 154

    (52) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 52 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 52 (TIPO -> R_FLOAT64 .)
    R_END           reduce using rule 52 (TIPO -> R_FLOAT64 .)


state 155

    (53) TIPO -> R_STRING .

    COMA            reduce using rule 53 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 53 (TIPO -> R_STRING .)
    R_END           reduce using rule 53 (TIPO -> R_STRING .)


state 156

    (54) TIPO -> R_CHAR .

    COMA            reduce using rule 54 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 54 (TIPO -> R_CHAR .)
    R_END           reduce using rule 54 (TIPO -> R_CHAR .)


state 157

    (55) TIPO -> R_BOOL .

    COMA            reduce using rule 55 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 55 (TIPO -> R_BOOL .)
    R_END           reduce using rule 55 (TIPO -> R_BOOL .)


state 158

    (94) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 235


state 159

    (95) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 236


state 160

    (96) NATIVAS -> R_STRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 237


state 161

    (97) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 238


state 162

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ . ID COMA E PARDER

    ID              shift and go to state 239


state 163

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ . ID PARDER

    ID              shift and go to state 240


state 164

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (157) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (159) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (160) ELEMENTOS -> . ELEMENTO
    (161) ELEMENTO -> . ID
    (162) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 242
    ID              shift and go to state 165

    ELEMENTOS                      shift and go to state 241
    ELEMENTO                       shift and go to state 168

state 165

    (161) ELEMENTO -> ID .
    (162) ELEMENTO -> ID . DOSPUNTOS TIPO

    PTCOMA          reduce using rule 161 (ELEMENTO -> ID .)
    COMA            reduce using rule 161 (ELEMENTO -> ID .)
    R_END           reduce using rule 161 (ELEMENTO -> ID .)
    DOSPUNTOS       shift and go to state 243


state 166

    (156) STRUCTS -> R_STRUCT ID ELEMENTOS . PTCOMA
    (159) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    PTCOMA          shift and go to state 244
    COMA            shift and go to state 245


state 167

    (158) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 246


state 168

    (160) ELEMENTOS -> ELEMENTO .

    PTCOMA          reduce using rule 160 (ELEMENTOS -> ELEMENTO .)
    COMA            reduce using rule 160 (ELEMENTOS -> ELEMENTO .)
    R_END           reduce using rule 160 (ELEMENTOS -> ELEMENTO .)


state 169

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS . PARDER RETURN R_END PTCOMA
    (36) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 247
    COMA            shift and go to state 177


state 170

    (107) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (108) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (109) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (101) RETURN -> . R_RETURN LISTA
    (102) RETURN -> . R_RETURN
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 249
    R_RETURN        shift and go to state 251
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 248
    RETURN                         shift and go to state 250
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 171

    (32) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (34) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 252
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 172

    (44) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 253

state 173

    (47) ASIGNACION -> ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 47 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)


state 174

    (65) E -> PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 190
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 175

    (33) ARREGLOS -> CORIZQ LISTAS . CORDER
    (35) ARREGLOS -> CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (36) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 254
    COMA            shift and go to state 177


state 176

    (56) LLAMADAS -> ID PARIZQ LISTAS PARIZQ . PTCOMA

    PTCOMA          shift and go to state 255


state 177

    (36) LISTAS -> LISTAS COMA . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 256
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 178

    (57) LLAMADAS -> ID PARIZQ PARDER PTCOMA .

    R_IF            reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FOR           reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_WHILE         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_LOCAL         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINT         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PARSE         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TRUNC         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FLOAT         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_STRING        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_PUSH          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_POP           reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_STRUCT        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    DOSPUNTOS       reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PTCOMA          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARIZQ          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    COMA            reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_END           reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSE          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_BREAK         reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    PARDER          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    CORDER          reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)
    R_RETURN        reduce using rule 57 (LLAMADAS -> ID PARIZQ PARDER PTCOMA .)


state 179

    (111) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 257


state 180

    (112) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 259
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 258
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 181

    (113) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 182

    (114) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRING        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 114 (IFS -> R_IF LO R_END PTCOMA .)


state 183

    (115) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 260
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 184

    (118) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 261


state 185

    (88) LO -> LO AND LO .
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO

    R_END           reduce using rule 88 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 88 (LO -> LO AND LO .)
    AND             reduce using rule 88 (LO -> LO AND LO .)
    OR              reduce using rule 88 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 88 (LO -> LO AND LO .)
    R_IF            reduce using rule 88 (LO -> LO AND LO .)
    R_FOR           reduce using rule 88 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 88 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 88 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 88 (LO -> LO AND LO .)
    ID              reduce using rule 88 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 88 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 88 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 88 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 88 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 88 (LO -> LO AND LO .)
    R_STRING        reduce using rule 88 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 88 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 88 (LO -> LO AND LO .)
    R_POP           reduce using rule 88 (LO -> LO AND LO .)
    R_MUTABLE       reduce using rule 88 (LO -> LO AND LO .)
    R_STRUCT        reduce using rule 88 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 88 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 88 (LO -> LO AND LO .)
    PARDER          reduce using rule 88 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]


state 186

    (89) LO -> LO OR LO .
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO

    R_END           reduce using rule 89 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 89 (LO -> LO OR LO .)
    OR              reduce using rule 89 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 89 (LO -> LO OR LO .)
    R_IF            reduce using rule 89 (LO -> LO OR LO .)
    R_FOR           reduce using rule 89 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 89 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 89 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 89 (LO -> LO OR LO .)
    ID              reduce using rule 89 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 89 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 89 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 89 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 89 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 89 (LO -> LO OR LO .)
    R_STRING        reduce using rule 89 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 89 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 89 (LO -> LO OR LO .)
    R_POP           reduce using rule 89 (LO -> LO OR LO .)
    R_MUTABLE       reduce using rule 89 (LO -> LO OR LO .)
    R_STRUCT        reduce using rule 89 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 89 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 89 (LO -> LO OR LO .)
    PARDER          reduce using rule 89 (LO -> LO OR LO .)
    AND             shift and go to state 98

  ! AND             [ reduce using rule 89 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 99 ]


state 187

    (119) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (122) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (123) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> R_ELSEIF LO . ELSEIF
    (125) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (88) LO -> LO . AND LO
    (89) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (122) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> . R_ELSEIF LO ELSEIF
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 263
    R_ELSE          shift and go to state 264
    AND             shift and go to state 98
    OR              shift and go to state 99
    R_ELSEIF        shift and go to state 100
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 262
    ELSEIF                         shift and go to state 265
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 188

    (91) LO -> PARIZQ LO PARDER .

    R_END           reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_ELSE          reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    AND             reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    OR              reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_ELSEIF        reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_IF            reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_FOR           reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_WHILE         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_GLOBAL        reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_LOCAL         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    ID              reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_PRINT         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_PRINTLN       reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_PARSE         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_TRUNC         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_FLOAT         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_STRING        reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_TYPEOF        reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_PUSH          reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_POP           reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_MUTABLE       reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_STRUCT        reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_BREAK         reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    R_CONTINUE      reduce using rule 91 (LO -> PARIZQ LO PARDER .)
    PARDER          reduce using rule 91 (LO -> PARIZQ LO PARDER .)


state 189

    (86) RE -> PARIZQ RE PARDER .

    MENQUE          reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    MAYQUE          reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    IGUALQUE        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    NIGUALQUE       reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    MENORIGUAL      reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    MAYORIGUAL      reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_END           reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_ELSE          reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    AND             reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    OR              reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_ELSEIF        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_IF            reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_FOR           reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_WHILE         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_GLOBAL        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_LOCAL         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    ID              reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_PRINT         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_PRINTLN       reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_PARSE         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_TRUNC         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_FLOAT         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_STRING        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_TYPEOF        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_PUSH          reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_POP           reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_MUTABLE       reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_STRUCT        reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_BREAK         reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    R_CONTINUE      reduce using rule 86 (RE -> PARIZQ RE PARDER .)
    PARDER          reduce using rule 86 (RE -> PARIZQ RE PARDER .)


state 190

    (65) E -> PARIZQ E PARDER .

    MAS             reduce using rule 65 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 65 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 65 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 65 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 65 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 65 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 65 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 65 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 65 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 65 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 65 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 65 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 65 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 65 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_STRING        reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 65 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 65 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 65 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 65 (E -> PARIZQ E PARDER .)
    PARIZQ          reduce using rule 65 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 65 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 65 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 65 (E -> PARIZQ E PARDER .)


state 191

    (80) RE -> RE MENQUE RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 80 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 80 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 80 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 80 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 80 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 80 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 80 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 80 (RE -> RE MENQUE RE .)
    AND             reduce using rule 80 (RE -> RE MENQUE RE .)
    OR              reduce using rule 80 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 80 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 80 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 80 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 80 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 80 (RE -> RE MENQUE RE .)
    ID              reduce using rule 80 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 80 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_STRING        reduce using rule 80 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 80 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 80 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 80 (RE -> RE MENQUE RE .)
    R_MUTABLE       reduce using rule 80 (RE -> RE MENQUE RE .)
    R_STRUCT        reduce using rule 80 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 80 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 80 (RE -> RE MENQUE RE .)
    PARDER          reduce using rule 80 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 105 ]
  ! MAYQUE          [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]
  ! MENORIGUAL      [ shift and go to state 109 ]
  ! MAYORIGUAL      [ shift and go to state 110 ]


state 192

    (86) RE -> PARIZQ . RE PARDER
    (65) E -> PARIZQ . E PARDER
    (80) RE -> . RE MENQUE RE
    (81) RE -> . RE MAYQUE RE
    (82) RE -> . RE IGUALQUE RE
    (83) RE -> . RE NIGUALQUE RE
    (84) RE -> . RE MENORIGUAL RE
    (85) RE -> . RE MAYORIGUAL RE
    (86) RE -> . PARIZQ RE PARDER
    (87) RE -> . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    PARIZQ          shift and go to state 192
    MENOS           shift and go to state 50
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    RE                             shift and go to state 266
    E                              shift and go to state 104

state 193

    (81) RE -> RE MAYQUE RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 81 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 81 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 81 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 81 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 81 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 81 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 81 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 81 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_STRING        reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_MUTABLE       reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_STRUCT        reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 81 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 81 (RE -> RE MAYQUE RE .)
    PARDER          reduce using rule 81 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 105 ]
  ! MAYQUE          [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]
  ! MENORIGUAL      [ shift and go to state 109 ]
  ! MAYORIGUAL      [ shift and go to state 110 ]


state 194

    (82) RE -> RE IGUALQUE RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 82 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 82 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_STRING        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_MUTABLE       reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_STRUCT        reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 82 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 82 (RE -> RE IGUALQUE RE .)
    PARDER          reduce using rule 82 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 105
    MAYQUE          shift and go to state 106
    MENORIGUAL      shift and go to state 109
    MAYORIGUAL      shift and go to state 110

  ! MENQUE          [ reduce using rule 82 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 82 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 82 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 82 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]


state 195

    (83) RE -> RE NIGUALQUE RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_STRING        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_MUTABLE       reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_STRUCT        reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    PARDER          reduce using rule 83 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 105
    MAYQUE          shift and go to state 106
    MENORIGUAL      shift and go to state 109
    MAYORIGUAL      shift and go to state 110

  ! MENQUE          [ reduce using rule 83 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 83 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 83 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 83 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]


state 196

    (84) RE -> RE MENORIGUAL RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_STRING        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_MUTABLE       reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_STRUCT        reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 84 (RE -> RE MENORIGUAL RE .)
    PARDER          reduce using rule 84 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 105 ]
  ! MAYQUE          [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]
  ! MENORIGUAL      [ shift and go to state 109 ]
  ! MAYORIGUAL      [ shift and go to state 110 ]


state 197

    (85) RE -> RE MAYORIGUAL RE .
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_STRING        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_MUTABLE       reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_STRUCT        reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 85 (RE -> RE MAYORIGUAL RE .)
    PARDER          reduce using rule 85 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 105 ]
  ! MAYQUE          [ shift and go to state 106 ]
  ! IGUALQUE        [ shift and go to state 107 ]
  ! NIGUALQUE       [ shift and go to state 108 ]
  ! MENORIGUAL      [ shift and go to state 109 ]
  ! MAYORIGUAL      [ shift and go to state 110 ]


state 198

    (58) E -> E MAS E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 58 (E -> E MAS E .)
    MENOS           reduce using rule 58 (E -> E MAS E .)
    MENQUE          reduce using rule 58 (E -> E MAS E .)
    MAYQUE          reduce using rule 58 (E -> E MAS E .)
    IGUALQUE        reduce using rule 58 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 58 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 58 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 58 (E -> E MAS E .)
    R_END           reduce using rule 58 (E -> E MAS E .)
    R_ELSE          reduce using rule 58 (E -> E MAS E .)
    AND             reduce using rule 58 (E -> E MAS E .)
    OR              reduce using rule 58 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 58 (E -> E MAS E .)
    R_IF            reduce using rule 58 (E -> E MAS E .)
    R_FOR           reduce using rule 58 (E -> E MAS E .)
    R_WHILE         reduce using rule 58 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 58 (E -> E MAS E .)
    R_LOCAL         reduce using rule 58 (E -> E MAS E .)
    ID              reduce using rule 58 (E -> E MAS E .)
    R_PRINT         reduce using rule 58 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 58 (E -> E MAS E .)
    R_PARSE         reduce using rule 58 (E -> E MAS E .)
    R_TRUNC         reduce using rule 58 (E -> E MAS E .)
    R_FLOAT         reduce using rule 58 (E -> E MAS E .)
    R_STRING        reduce using rule 58 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 58 (E -> E MAS E .)
    R_PUSH          reduce using rule 58 (E -> E MAS E .)
    R_POP           reduce using rule 58 (E -> E MAS E .)
    R_MUTABLE       reduce using rule 58 (E -> E MAS E .)
    R_STRUCT        reduce using rule 58 (E -> E MAS E .)
    R_BREAK         reduce using rule 58 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 58 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 58 (E -> E MAS E .)
    PTCOMA          reduce using rule 58 (E -> E MAS E .)
    PARIZQ          reduce using rule 58 (E -> E MAS E .)
    COMA            reduce using rule 58 (E -> E MAS E .)
    PARDER          reduce using rule 58 (E -> E MAS E .)
    CORDER          reduce using rule 58 (E -> E MAS E .)
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116

  ! POR             [ reduce using rule 58 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 58 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 58 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 58 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]


state 199

    (59) E -> E MENOS E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 59 (E -> E MENOS E .)
    MENOS           reduce using rule 59 (E -> E MENOS E .)
    MENQUE          reduce using rule 59 (E -> E MENOS E .)
    MAYQUE          reduce using rule 59 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 59 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 59 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 59 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 59 (E -> E MENOS E .)
    R_END           reduce using rule 59 (E -> E MENOS E .)
    R_ELSE          reduce using rule 59 (E -> E MENOS E .)
    AND             reduce using rule 59 (E -> E MENOS E .)
    OR              reduce using rule 59 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 59 (E -> E MENOS E .)
    R_IF            reduce using rule 59 (E -> E MENOS E .)
    R_FOR           reduce using rule 59 (E -> E MENOS E .)
    R_WHILE         reduce using rule 59 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 59 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 59 (E -> E MENOS E .)
    ID              reduce using rule 59 (E -> E MENOS E .)
    R_PRINT         reduce using rule 59 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 59 (E -> E MENOS E .)
    R_PARSE         reduce using rule 59 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 59 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 59 (E -> E MENOS E .)
    R_STRING        reduce using rule 59 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 59 (E -> E MENOS E .)
    R_PUSH          reduce using rule 59 (E -> E MENOS E .)
    R_POP           reduce using rule 59 (E -> E MENOS E .)
    R_MUTABLE       reduce using rule 59 (E -> E MENOS E .)
    R_STRUCT        reduce using rule 59 (E -> E MENOS E .)
    R_BREAK         reduce using rule 59 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 59 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 59 (E -> E MENOS E .)
    PTCOMA          reduce using rule 59 (E -> E MENOS E .)
    PARIZQ          reduce using rule 59 (E -> E MENOS E .)
    COMA            reduce using rule 59 (E -> E MENOS E .)
    PARDER          reduce using rule 59 (E -> E MENOS E .)
    CORDER          reduce using rule 59 (E -> E MENOS E .)
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116

  ! POR             [ reduce using rule 59 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 59 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 59 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 59 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]


state 200

    (60) E -> E POR E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 60 (E -> E POR E .)
    MENOS           reduce using rule 60 (E -> E POR E .)
    POR             reduce using rule 60 (E -> E POR E .)
    DIVIDIDO        reduce using rule 60 (E -> E POR E .)
    MODAL           reduce using rule 60 (E -> E POR E .)
    MENQUE          reduce using rule 60 (E -> E POR E .)
    MAYQUE          reduce using rule 60 (E -> E POR E .)
    IGUALQUE        reduce using rule 60 (E -> E POR E .)
    NIGUALQUE       reduce using rule 60 (E -> E POR E .)
    MENORIGUAL      reduce using rule 60 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 60 (E -> E POR E .)
    R_END           reduce using rule 60 (E -> E POR E .)
    R_ELSE          reduce using rule 60 (E -> E POR E .)
    AND             reduce using rule 60 (E -> E POR E .)
    OR              reduce using rule 60 (E -> E POR E .)
    R_ELSEIF        reduce using rule 60 (E -> E POR E .)
    R_IF            reduce using rule 60 (E -> E POR E .)
    R_FOR           reduce using rule 60 (E -> E POR E .)
    R_WHILE         reduce using rule 60 (E -> E POR E .)
    R_GLOBAL        reduce using rule 60 (E -> E POR E .)
    R_LOCAL         reduce using rule 60 (E -> E POR E .)
    ID              reduce using rule 60 (E -> E POR E .)
    R_PRINT         reduce using rule 60 (E -> E POR E .)
    R_PRINTLN       reduce using rule 60 (E -> E POR E .)
    R_PARSE         reduce using rule 60 (E -> E POR E .)
    R_TRUNC         reduce using rule 60 (E -> E POR E .)
    R_FLOAT         reduce using rule 60 (E -> E POR E .)
    R_STRING        reduce using rule 60 (E -> E POR E .)
    R_TYPEOF        reduce using rule 60 (E -> E POR E .)
    R_PUSH          reduce using rule 60 (E -> E POR E .)
    R_POP           reduce using rule 60 (E -> E POR E .)
    R_MUTABLE       reduce using rule 60 (E -> E POR E .)
    R_STRUCT        reduce using rule 60 (E -> E POR E .)
    R_BREAK         reduce using rule 60 (E -> E POR E .)
    R_CONTINUE      reduce using rule 60 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 60 (E -> E POR E .)
    PTCOMA          reduce using rule 60 (E -> E POR E .)
    PARIZQ          reduce using rule 60 (E -> E POR E .)
    COMA            reduce using rule 60 (E -> E POR E .)
    PARDER          reduce using rule 60 (E -> E POR E .)
    CORDER          reduce using rule 60 (E -> E POR E .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 60 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIVIDIDO        [ shift and go to state 114 ]
  ! MODAL           [ shift and go to state 115 ]


state 201

    (61) E -> E DIVIDIDO E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 61 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 61 (E -> E DIVIDIDO E .)
    POR             reduce using rule 61 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 61 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 61 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 61 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 61 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 61 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 61 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 61 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 61 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 61 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 61 (E -> E DIVIDIDO E .)
    AND             reduce using rule 61 (E -> E DIVIDIDO E .)
    OR              reduce using rule 61 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 61 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 61 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 61 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 61 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 61 (E -> E DIVIDIDO E .)
    ID              reduce using rule 61 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 61 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_STRING        reduce using rule 61 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 61 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 61 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 61 (E -> E DIVIDIDO E .)
    R_MUTABLE       reduce using rule 61 (E -> E DIVIDIDO E .)
    R_STRUCT        reduce using rule 61 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 61 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 61 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 61 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 61 (E -> E DIVIDIDO E .)
    PARIZQ          reduce using rule 61 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 61 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 61 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 61 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 61 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIVIDIDO        [ shift and go to state 114 ]
  ! MODAL           [ shift and go to state 115 ]


state 202

    (62) E -> E MODAL E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 62 (E -> E MODAL E .)
    MENOS           reduce using rule 62 (E -> E MODAL E .)
    POR             reduce using rule 62 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 62 (E -> E MODAL E .)
    MODAL           reduce using rule 62 (E -> E MODAL E .)
    MENQUE          reduce using rule 62 (E -> E MODAL E .)
    MAYQUE          reduce using rule 62 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 62 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 62 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 62 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 62 (E -> E MODAL E .)
    R_END           reduce using rule 62 (E -> E MODAL E .)
    R_ELSE          reduce using rule 62 (E -> E MODAL E .)
    AND             reduce using rule 62 (E -> E MODAL E .)
    OR              reduce using rule 62 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 62 (E -> E MODAL E .)
    R_IF            reduce using rule 62 (E -> E MODAL E .)
    R_FOR           reduce using rule 62 (E -> E MODAL E .)
    R_WHILE         reduce using rule 62 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 62 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 62 (E -> E MODAL E .)
    ID              reduce using rule 62 (E -> E MODAL E .)
    R_PRINT         reduce using rule 62 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 62 (E -> E MODAL E .)
    R_PARSE         reduce using rule 62 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 62 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 62 (E -> E MODAL E .)
    R_STRING        reduce using rule 62 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 62 (E -> E MODAL E .)
    R_PUSH          reduce using rule 62 (E -> E MODAL E .)
    R_POP           reduce using rule 62 (E -> E MODAL E .)
    R_MUTABLE       reduce using rule 62 (E -> E MODAL E .)
    R_STRUCT        reduce using rule 62 (E -> E MODAL E .)
    R_BREAK         reduce using rule 62 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 62 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 62 (E -> E MODAL E .)
    PTCOMA          reduce using rule 62 (E -> E MODAL E .)
    PARIZQ          reduce using rule 62 (E -> E MODAL E .)
    COMA            reduce using rule 62 (E -> E MODAL E .)
    PARDER          reduce using rule 62 (E -> E MODAL E .)
    CORDER          reduce using rule 62 (E -> E MODAL E .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 62 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIVIDIDO        [ shift and go to state 114 ]
  ! MODAL           [ shift and go to state 115 ]


state 203

    (63) E -> E POTENCIA E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    MAS             reduce using rule 63 (E -> E POTENCIA E .)
    MENOS           reduce using rule 63 (E -> E POTENCIA E .)
    POR             reduce using rule 63 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 63 (E -> E POTENCIA E .)
    MODAL           reduce using rule 63 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 63 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 63 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 63 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 63 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 63 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 63 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 63 (E -> E POTENCIA E .)
    R_END           reduce using rule 63 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 63 (E -> E POTENCIA E .)
    AND             reduce using rule 63 (E -> E POTENCIA E .)
    OR              reduce using rule 63 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 63 (E -> E POTENCIA E .)
    R_IF            reduce using rule 63 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 63 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 63 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 63 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 63 (E -> E POTENCIA E .)
    ID              reduce using rule 63 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 63 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 63 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 63 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 63 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 63 (E -> E POTENCIA E .)
    R_STRING        reduce using rule 63 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 63 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 63 (E -> E POTENCIA E .)
    R_POP           reduce using rule 63 (E -> E POTENCIA E .)
    R_MUTABLE       reduce using rule 63 (E -> E POTENCIA E .)
    R_STRUCT        reduce using rule 63 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 63 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 63 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 63 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 63 (E -> E POTENCIA E .)
    PARIZQ          reduce using rule 63 (E -> E POTENCIA E .)
    COMA            reduce using rule 63 (E -> E POTENCIA E .)
    PARDER          reduce using rule 63 (E -> E POTENCIA E .)
    CORDER          reduce using rule 63 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIVIDIDO        [ shift and go to state 114 ]
  ! MODAL           [ shift and go to state 115 ]
  ! POTENCIA        [ shift and go to state 116 ]


state 204

    (66) E -> R_LOG10 PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 267
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 205

    (67) E -> R_SIN PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 268
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 206

    (68) E -> R_COS PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 269
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 207

    (69) E -> R_TAN PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 270
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 208

    (70) E -> R_SQRT PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 271
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 209

    (71) E -> R_UPPERCASE PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 272
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 210

    (72) E -> R_LOWERCASE PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 273
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 211

    (73) E -> R_LOG PARIZQ E . COMA E PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    COMA            shift and go to state 274
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 212

    (154) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (79) E -> ID .
    (32) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    CORIZQ          shift and go to state 275
    DOSPUNTOS       reduce using rule 79 (E -> ID .)
    MAS             reduce using rule 79 (E -> ID .)
    MENOS           reduce using rule 79 (E -> ID .)
    POR             reduce using rule 79 (E -> ID .)
    DIVIDIDO        reduce using rule 79 (E -> ID .)
    MODAL           reduce using rule 79 (E -> ID .)
    POTENCIA        reduce using rule 79 (E -> ID .)
    R_END           reduce using rule 79 (E -> ID .)
    R_BREAK         reduce using rule 79 (E -> ID .)
    R_CONTINUE      reduce using rule 79 (E -> ID .)
    R_IF            reduce using rule 79 (E -> ID .)
    R_FOR           reduce using rule 79 (E -> ID .)
    R_WHILE         reduce using rule 79 (E -> ID .)
    R_GLOBAL        reduce using rule 79 (E -> ID .)
    R_LOCAL         reduce using rule 79 (E -> ID .)
    ID              reduce using rule 79 (E -> ID .)
    R_PRINT         reduce using rule 79 (E -> ID .)
    R_PRINTLN       reduce using rule 79 (E -> ID .)
    R_PARSE         reduce using rule 79 (E -> ID .)
    R_TRUNC         reduce using rule 79 (E -> ID .)
    R_FLOAT         reduce using rule 79 (E -> ID .)
    R_STRING        reduce using rule 79 (E -> ID .)
    R_TYPEOF        reduce using rule 79 (E -> ID .)
    R_PUSH          reduce using rule 79 (E -> ID .)
    R_POP           reduce using rule 79 (E -> ID .)
    R_MUTABLE       reduce using rule 79 (E -> ID .)
    R_STRUCT        reduce using rule 79 (E -> ID .)


state 213

    (149) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP IFS
    (128) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP FORS
    (129) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP WHILES
    (130) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP ASIGNACION
    (131) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP I
    (132) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP LLAMADAS
    (133) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP NATIVAS
    (134) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP STRUCTS
    (135) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_BREAK
    (136) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP R_CONTINUE
    (137) INSTRUCCIONES_LOOP -> . IFS
    (138) INSTRUCCIONES_LOOP -> . FORS
    (139) INSTRUCCIONES_LOOP -> . WHILES
    (140) INSTRUCCIONES_LOOP -> . ASIGNACION
    (141) INSTRUCCIONES_LOOP -> . I
    (142) INSTRUCCIONES_LOOP -> . LLAMADAS
    (143) INSTRUCCIONES_LOOP -> . NATIVAS
    (144) INSTRUCCIONES_LOOP -> . STRUCTS
    (145) INSTRUCCIONES_LOOP -> . R_BREAK
    (146) INSTRUCCIONES_LOOP -> . R_CONTINUE
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 277
    R_BREAK         shift and go to state 137
    R_CONTINUE      shift and go to state 138
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES_LOOP             shift and go to state 276
    IFS                            shift and go to state 129
    FORS                           shift and go to state 130
    WHILES                         shift and go to state 131
    ASIGNACION                     shift and go to state 132
    I                              shift and go to state 133
    LLAMADAS                       shift and go to state 134
    NATIVAS                        shift and go to state 135
    STRUCTS                        shift and go to state 136

state 214

    (151) RANGO -> E . DOSPUNTOS E
    (152) RANGO -> E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    DOSPUNTOS       shift and go to state 278
    R_END           reduce using rule 152 (RANGO -> E .)
    R_BREAK         reduce using rule 152 (RANGO -> E .)
    R_CONTINUE      reduce using rule 152 (RANGO -> E .)
    R_IF            reduce using rule 152 (RANGO -> E .)
    R_FOR           reduce using rule 152 (RANGO -> E .)
    R_WHILE         reduce using rule 152 (RANGO -> E .)
    R_GLOBAL        reduce using rule 152 (RANGO -> E .)
    R_LOCAL         reduce using rule 152 (RANGO -> E .)
    ID              reduce using rule 152 (RANGO -> E .)
    R_PRINT         reduce using rule 152 (RANGO -> E .)
    R_PRINTLN       reduce using rule 152 (RANGO -> E .)
    R_PARSE         reduce using rule 152 (RANGO -> E .)
    R_TRUNC         reduce using rule 152 (RANGO -> E .)
    R_FLOAT         reduce using rule 152 (RANGO -> E .)
    R_STRING        reduce using rule 152 (RANGO -> E .)
    R_TYPEOF        reduce using rule 152 (RANGO -> E .)
    R_PUSH          reduce using rule 152 (RANGO -> E .)
    R_POP           reduce using rule 152 (RANGO -> E .)
    R_MUTABLE       reduce using rule 152 (RANGO -> E .)
    R_STRUCT        reduce using rule 152 (RANGO -> E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 215

    (153) RANGO -> ARREGLOS .

    R_END           reduce using rule 153 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 153 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 153 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 153 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 153 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 153 (RANGO -> ARREGLOS .)
    ID              reduce using rule 153 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 153 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 153 (RANGO -> ARREGLOS .)
    R_STRING        reduce using rule 153 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 153 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 153 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 153 (RANGO -> ARREGLOS .)
    R_MUTABLE       reduce using rule 153 (RANGO -> ARREGLOS .)
    R_STRUCT        reduce using rule 153 (RANGO -> ARREGLOS .)


state 216

    (147) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 279


state 217

    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .

    R_END           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_BREAK         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_CONTINUE      reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_IF            reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FOR           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_WHILE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_GLOBAL        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_LOCAL         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    ID              reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PRINTLN       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PARSE         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TRUNC         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_FLOAT         reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_STRING        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_TYPEOF        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_PUSH          reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_POP           reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_MUTABLE       reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)
    R_STRUCT        reduce using rule 127 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP IFS .)


state 218

    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .

    R_END           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_BREAK         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_CONTINUE      reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_IF            reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FOR           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_WHILE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_GLOBAL        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_LOCAL         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    ID              reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PRINTLN       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PARSE         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TRUNC         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_FLOAT         reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_STRING        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_TYPEOF        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_PUSH          reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_POP           reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_MUTABLE       reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)
    R_STRUCT        reduce using rule 128 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP FORS .)


state 219

    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .

    R_END           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_BREAK         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_CONTINUE      reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_IF            reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FOR           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_WHILE         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_GLOBAL        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_LOCAL         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    ID              reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINT         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PRINTLN       reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PARSE         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TRUNC         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_FLOAT         reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_STRING        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_TYPEOF        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_PUSH          reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_POP           reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_MUTABLE       reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)
    R_STRUCT        reduce using rule 129 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP WHILES .)


state 220

    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .

    R_END           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_BREAK         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_CONTINUE      reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_IF            reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FOR           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_WHILE         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_GLOBAL        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_LOCAL         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    ID              reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINT         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PRINTLN       reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PARSE         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TRUNC         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_FLOAT         reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_STRING        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_TYPEOF        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_PUSH          reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_POP           reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_MUTABLE       reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)
    R_STRUCT        reduce using rule 130 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP ASIGNACION .)


state 221

    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .

    R_END           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_BREAK         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_CONTINUE      reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_IF            reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FOR           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_WHILE         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_GLOBAL        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_LOCAL         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    ID              reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINT         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PRINTLN       reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PARSE         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TRUNC         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_FLOAT         reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_STRING        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_TYPEOF        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_PUSH          reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_POP           reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_MUTABLE       reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)
    R_STRUCT        reduce using rule 131 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP I .)


state 222

    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .

    R_END           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_BREAK         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_CONTINUE      reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_IF            reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FOR           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_WHILE         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_GLOBAL        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_LOCAL         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    ID              reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINT         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PRINTLN       reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PARSE         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TRUNC         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_FLOAT         reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_STRING        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_TYPEOF        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_PUSH          reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_POP           reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_MUTABLE       reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)
    R_STRUCT        reduce using rule 132 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP LLAMADAS .)


state 223

    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .

    R_END           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_BREAK         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_CONTINUE      reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_IF            reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FOR           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_WHILE         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_GLOBAL        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_LOCAL         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    ID              reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINT         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PRINTLN       reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PARSE         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TRUNC         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_FLOAT         reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_STRING        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_TYPEOF        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_PUSH          reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_POP           reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_MUTABLE       reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)
    R_STRUCT        reduce using rule 133 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP NATIVAS .)


state 224

    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .

    R_END           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_BREAK         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_IF            reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FOR           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_WHILE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_LOCAL         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    ID              reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PARSE         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TRUNC         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_FLOAT         reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_STRING        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_PUSH          reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_POP           reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_MUTABLE       reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)
    R_STRUCT        reduce using rule 134 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP STRUCTS .)


state 225

    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .

    R_END           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_BREAK         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_IF            reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_FOR           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_WHILE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_LOCAL         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    ID              reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PRINT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PARSE         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_TRUNC         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_FLOAT         reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_STRING        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_PUSH          reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_POP           reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_MUTABLE       reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)
    R_STRUCT        reduce using rule 135 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_BREAK .)


state 226

    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .

    R_END           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_BREAK         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_CONTINUE      reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_IF            reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_FOR           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_WHILE         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_GLOBAL        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_LOCAL         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    ID              reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PRINT         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PRINTLN       reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PARSE         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_TRUNC         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_FLOAT         reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_STRING        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_TYPEOF        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_PUSH          reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_POP           reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_MUTABLE       reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)
    R_STRUCT        reduce using rule 136 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP R_CONTINUE .)


state 227

    (148) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRING        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 148 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 228

    (42) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 280
    PTCOMA          shift and go to state 281


state 229

    (43) ASIGNACION -> R_LOCAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (46) ASIGNACION -> R_LOCAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 282
    PTCOMA          shift and go to state 283


state 230

    (21) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 284


state 231

    (23) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (25) IMPRESION -> . NATIVAS
    (26) IMPRESION -> . ARREGLOS
    (27) IMPRESION -> . LLAMADAS
    (28) IMPRESION -> . E
    (29) IMPRESION -> . DOLAR PARIZQ E PARDER
    (30) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (31) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    DOLAR           shift and go to state 149
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    IMPRESION                      shift and go to state 285
    NATIVAS                        shift and go to state 145
    ARREGLOS                       shift and go to state 146
    LLAMADAS                       shift and go to state 147
    E                              shift and go to state 148

state 232

    (29) IMPRESION -> DOLAR PARIZQ . E PARDER
    (30) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (31) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 289
    CORIZQ          shift and go to state 89
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27

    E                              shift and go to state 286
    ARREGLOS                       shift and go to state 287
    NATIVAS                        shift and go to state 288

state 233

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 290


state 234

    (93) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 291
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 235

    (94) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 292
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 236

    (95) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 95 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 237

    (96) NATIVAS -> R_STRING PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 96 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)


state 238

    (97) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARIZQ          reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 97 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 239

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID . COMA E PARDER

    COMA            shift and go to state 293


state 240

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ ID . PARDER

    PARDER          shift and go to state 294


state 241

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (159) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    R_END           shift and go to state 295
    COMA            shift and go to state 245


state 242

    (157) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 296


state 243

    (162) ELEMENTO -> ID DOSPUNTOS . TIPO
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 297

state 244

    (156) STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .

    R_IF            reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FOR           reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_WHILE         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_GLOBAL        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOCAL         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ID              reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINT         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINTLN       reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PARSE         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUNC         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FLOAT         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRING        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TYPEOF        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PUSH          reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_POP           reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_MUTABLE       reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRUCT        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FUNCTION      reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    $end            reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_END           reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSE          reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSEIF        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_BREAK         reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_CONTINUE      reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_RETURN        reduce using rule 156 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)


state 245

    (159) ELEMENTOS -> ELEMENTOS COMA . ELEMENTO
    (161) ELEMENTO -> . ID
    (162) ELEMENTO -> . ID DOSPUNTOS TIPO

    ID              shift and go to state 165

    ELEMENTO                       shift and go to state 298

state 246

    (158) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 158 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 247

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . INSTRUCCIONES RETURN R_END PTCOMA
    (105) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . R_END PTCOMA
    (106) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (101) RETURN -> . R_RETURN LISTA
    (102) RETURN -> . R_RETURN
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 300
    R_RETURN        shift and go to state 251
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 299
    RETURN                         shift and go to state 301
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 248

    (107) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (108) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (101) RETURN -> . R_RETURN LISTA
    (102) RETURN -> . R_RETURN
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 302
    R_RETURN        shift and go to state 251
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    RETURN                         shift and go to state 303
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 249

    (109) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 304


state 250

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 305


state 251

    (101) RETURN -> R_RETURN . LISTA
    (102) RETURN -> R_RETURN .
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_END           reduce using rule 102 (RETURN -> R_RETURN .)
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTA                          shift and go to state 306
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 252

    (32) ARREGLOS -> ID CORIZQ LISTAS . CORDER
    (34) ARREGLOS -> ID CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (36) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 307
    COMA            shift and go to state 177


state 253

    (44) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 308


state 254

    (33) ARREGLOS -> CORIZQ LISTAS CORDER .
    (35) ARREGLOS -> CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 33 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 309


state 255

    (56) LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .

    R_IF            reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FOR           reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_WHILE         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_GLOBAL        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_LOCAL         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    ID              reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINT         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PRINTLN       reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PARSE         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TRUNC         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FLOAT         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_STRING        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_TYPEOF        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_PUSH          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_POP           reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_MUTABLE       reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_STRUCT        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_FUNCTION      reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    $end            reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    DOSPUNTOS       reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PTCOMA          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARIZQ          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    COMA            reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_END           reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSE          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_ELSEIF        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_BREAK         reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_CONTINUE      reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    PARDER          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    CORDER          reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)
    R_RETURN        reduce using rule 56 (LLAMADAS -> ID PARIZQ LISTAS PARIZQ PTCOMA .)


state 256

    (36) LISTAS -> LISTAS COMA LISTA .

    PARIZQ          reduce using rule 36 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 36 (LISTAS -> LISTAS COMA LISTA .)
    PARDER          reduce using rule 36 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 36 (LISTAS -> LISTAS COMA LISTA .)


state 257

    (111) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 111 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 258

    (112) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 310
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 259

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 311


state 260

    (115) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 312


state 261

    (118) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 118 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 262

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (119) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (122) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (123) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (124) ELSEIF -> . R_ELSEIF LO ELSEIF
    (125) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (126) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 313
    R_ELSE          shift and go to state 314
    R_ELSEIF        shift and go to state 100
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    ELSEIF                         shift and go to state 315
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 263

    (122) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 316


state 264

    (123) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (126) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 318
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 317
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 265

    (124) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRING        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 124 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 266

    (86) RE -> PARIZQ RE . PARDER
    (80) RE -> RE . MENQUE RE
    (81) RE -> RE . MAYQUE RE
    (82) RE -> RE . IGUALQUE RE
    (83) RE -> RE . NIGUALQUE RE
    (84) RE -> RE . MENORIGUAL RE
    (85) RE -> RE . MAYORIGUAL RE

    PARDER          shift and go to state 189
    MENQUE          shift and go to state 105
    MAYQUE          shift and go to state 106
    IGUALQUE        shift and go to state 107
    NIGUALQUE       shift and go to state 108
    MENORIGUAL      shift and go to state 109
    MAYORIGUAL      shift and go to state 110


state 267

    (66) E -> R_LOG10 PARIZQ E PARDER .

    MAS             reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRING        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    PARIZQ          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 66 (E -> R_LOG10 PARIZQ E PARDER .)


state 268

    (67) E -> R_SIN PARIZQ E PARDER .

    MAS             reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_STRING        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 67 (E -> R_SIN PARIZQ E PARDER .)


state 269

    (68) E -> R_COS PARIZQ E PARDER .

    MAS             reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_STRING        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    PARIZQ          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 68 (E -> R_COS PARIZQ E PARDER .)


state 270

    (69) E -> R_TAN PARIZQ E PARDER .

    MAS             reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_STRING        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    PARIZQ          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 69 (E -> R_TAN PARIZQ E PARDER .)


state 271

    (70) E -> R_SQRT PARIZQ E PARDER .

    MAS             reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRING        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    PARIZQ          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 70 (E -> R_SQRT PARIZQ E PARDER .)


state 272

    (71) E -> R_UPPERCASE PARIZQ E PARDER .

    MAS             reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 71 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 273

    (72) E -> R_LOWERCASE PARIZQ E PARDER .

    MAS             reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARIZQ          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 72 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 274

    (73) E -> R_LOG PARIZQ E COMA . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 319

state 275

    (154) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (32) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (34) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 320
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    CORIZQ          shift and go to state 89

    E                              shift and go to state 321
    LISTAS                         shift and go to state 252
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86

state 276

    (149) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (127) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . IFS
    (128) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . FORS
    (129) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . WHILES
    (130) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . ASIGNACION
    (131) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . I
    (132) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . LLAMADAS
    (133) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . NATIVAS
    (134) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . STRUCTS
    (135) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_BREAK
    (136) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . R_CONTINUE
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 322
    R_BREAK         shift and go to state 225
    R_CONTINUE      shift and go to state 226
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 217
    FORS                           shift and go to state 218
    WHILES                         shift and go to state 219
    ASIGNACION                     shift and go to state 220
    I                              shift and go to state 221
    LLAMADAS                       shift and go to state 222
    NATIVAS                        shift and go to state 223
    STRUCTS                        shift and go to state 224

state 277

    (150) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 323


state 278

    (151) RANGO -> E DOSPUNTOS . E
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 324

state 279

    (147) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 147 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 280

    (42) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 325

state 281

    (45) ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 45 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)


state 282

    (43) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (50) TIPO -> . R_NOTHING
    (51) TIPO -> . R_INT64
    (52) TIPO -> . R_FLOAT64
    (53) TIPO -> . R_STRING
    (54) TIPO -> . R_CHAR
    (55) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 152
    R_INT64         shift and go to state 153
    R_FLOAT64       shift and go to state 154
    R_STRING        shift and go to state 155
    R_CHAR          shift and go to state 156
    R_BOOL          shift and go to state 157

    TIPO                           shift and go to state 326

state 283

    (46) ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 46 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)


state 284

    (21) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 21 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 285

    (23) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 23 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 23 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 286

    (29) IMPRESION -> DOLAR PARIZQ E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 327
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 287

    (30) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER

    PARDER          shift and go to state 328


state 288

    (31) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER

    PARDER          shift and go to state 329


state 289

    (79) E -> ID .
    (32) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (100) NATIVAS -> ID . PUNTO R_LENGTH

    PARDER          reduce using rule 79 (E -> ID .)
    MAS             reduce using rule 79 (E -> ID .)
    MENOS           reduce using rule 79 (E -> ID .)
    POR             reduce using rule 79 (E -> ID .)
    DIVIDIDO        reduce using rule 79 (E -> ID .)
    MODAL           reduce using rule 79 (E -> ID .)
    POTENCIA        reduce using rule 79 (E -> ID .)
    CORIZQ          shift and go to state 171
    PUNTO           shift and go to state 43


state 290

    (22) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 22 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 291

    (93) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 330


state 292

    (94) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 331


state 293

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA . E PARDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 332

state 294

    (99) NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .

    PTCOMA          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARIZQ          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    COMA            reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_END           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_BREAK         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_CONTINUE      reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_IF            reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FOR           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_WHILE         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_GLOBAL        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOCAL         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ID              reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINT         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINTLN       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PARSE         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUNC         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FLOAT         reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRING        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TYPEOF        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PUSH          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_POP           reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_MUTABLE       reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRUCT        reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARDER          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CORDER          reduce using rule 99 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)


state 295

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 333


state 296

    (157) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 157 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 297

    (162) ELEMENTO -> ID DOSPUNTOS TIPO .

    PTCOMA          reduce using rule 162 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    COMA            reduce using rule 162 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    R_END           reduce using rule 162 (ELEMENTO -> ID DOSPUNTOS TIPO .)


state 298

    (159) ELEMENTOS -> ELEMENTOS COMA ELEMENTO .

    PTCOMA          reduce using rule 159 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    COMA            reduce using rule 159 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    R_END           reduce using rule 159 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)


state 299

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . R_END PTCOMA
    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES . RETURN R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (101) RETURN -> . R_RETURN LISTA
    (102) RETURN -> . R_RETURN
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 334
    R_RETURN        shift and go to state 251
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    RETURN                         shift and go to state 335
    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 300

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 336


state 301

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN . R_END PTCOMA

    R_END           shift and go to state 337


state 302

    (107) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 338


state 303

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 339


state 304

    (109) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 109 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 305

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 340


state 306

    (101) RETURN -> R_RETURN LISTA .

    R_END           reduce using rule 101 (RETURN -> R_RETURN LISTA .)


state 307

    (32) ARREGLOS -> ID CORIZQ LISTAS CORDER .
    (34) ARREGLOS -> ID CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    ID              reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 32 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 341


state 308

    (44) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 44 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 309

    (35) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 342
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 310

    (112) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 343


state 311

    (117) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 117 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 312

    (115) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 115 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 313

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 344


state 314

    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES IFS
    (6) INSTRUCCIONES -> . INSTRUCCIONES FORS
    (7) INSTRUCCIONES -> . INSTRUCCIONES WHILES
    (8) INSTRUCCIONES -> . INSTRUCCIONES ASIGNACION
    (9) INSTRUCCIONES -> . INSTRUCCIONES I
    (10) INSTRUCCIONES -> . INSTRUCCIONES LLAMADAS
    (11) INSTRUCCIONES -> . INSTRUCCIONES NATIVAS PTCOMA
    (12) INSTRUCCIONES -> . INSTRUCCIONES STRUCTS
    (13) INSTRUCCIONES -> . IFS
    (14) INSTRUCCIONES -> . FORS
    (15) INSTRUCCIONES -> . WHILES
    (16) INSTRUCCIONES -> . ASIGNACION
    (17) INSTRUCCIONES -> . I
    (18) INSTRUCCIONES -> . LLAMADAS
    (19) INSTRUCCIONES -> . NATIVAS PTCOMA
    (20) INSTRUCCIONES -> . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 346
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    INSTRUCCIONES                  shift and go to state 345
    IFS                            shift and go to state 6
    FORS                           shift and go to state 7
    WHILES                         shift and go to state 8
    ASIGNACION                     shift and go to state 9
    I                              shift and go to state 10
    LLAMADAS                       shift and go to state 11
    NATIVAS                        shift and go to state 12
    STRUCTS                        shift and go to state 13

state 315

    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 316

    (122) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRING        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 317

    (123) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 347
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 318

    (126) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 348


state 319

    (73) E -> R_LOG PARIZQ E COMA E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 349
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 320

    (79) E -> ID .
    (100) NATIVAS -> ID . PUNTO R_LENGTH
    (32) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> ID . PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> ID . PARIZQ PARDER PTCOMA

    DOSPUNTOS       reduce using rule 79 (E -> ID .)
    MAS             reduce using rule 79 (E -> ID .)
    MENOS           reduce using rule 79 (E -> ID .)
    POR             reduce using rule 79 (E -> ID .)
    DIVIDIDO        reduce using rule 79 (E -> ID .)
    MODAL           reduce using rule 79 (E -> ID .)
    POTENCIA        reduce using rule 79 (E -> ID .)
    CORDER          reduce using rule 79 (E -> ID .)
    COMA            reduce using rule 79 (E -> ID .)
    PUNTO           shift and go to state 43
    CORIZQ          shift and go to state 171
    PARIZQ          shift and go to state 42


state 321

    (154) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E
    (41) LISTA -> E .

    DOSPUNTOS       shift and go to state 350
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116
    CORDER          reduce using rule 41 (LISTA -> E .)
    COMA            reduce using rule 41 (LISTA -> E .)


state 322

    (149) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 351


state 323

    (150) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRING        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 150 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 324

    (151) RANGO -> E DOSPUNTOS E .
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    R_END           reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_BREAK         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_CONTINUE      reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_IF            reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_FOR           reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_WHILE         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_GLOBAL        reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_LOCAL         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    ID              reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_PRINT         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_PRINTLN       reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_PARSE         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_TRUNC         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_FLOAT         reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_STRING        reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_TYPEOF        reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_PUSH          reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_POP           reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_MUTABLE       reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    R_STRUCT        reduce using rule 151 (RANGO -> E DOSPUNTOS E .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 325

    (42) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 352


state 326

    (43) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 353


state 327

    (29) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 29 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 29 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 328

    (30) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 30 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 30 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 329

    (31) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 31 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 31 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 330

    (93) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 93 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 331

    (94) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARIZQ          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 332

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E . PARDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    PARDER          shift and go to state 354
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 333

    (155) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_IF            reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FUNCTION      reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_END           reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSE          reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSEIF        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 155 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 334

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 355


state 335

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN . R_END PTCOMA

    R_END           shift and go to state 356


state 336

    (105) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    ID              reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)
    $end            reduce using rule 105 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER R_END PTCOMA .)


state 337

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 357


state 338

    (107) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 107 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 339

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 358


state 340

    (110) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 110 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER RETURN R_END PTCOMA .)


state 341

    (34) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (36) LISTAS -> . LISTAS COMA LISTA
    (37) LISTAS -> . LISTA
    (38) LISTA -> . NATIVAS
    (39) LISTA -> . ARREGLOS
    (40) LISTA -> . LLAMADAS
    (41) LISTA -> . E
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (32) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (33) ARREGLOS -> . CORIZQ LISTAS CORDER
    (34) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (35) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    ID              shift and go to state 82
    CORIZQ          shift and go to state 89
    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63

    LISTAS                         shift and go to state 359
    LISTA                          shift and go to state 92
    NATIVAS                        shift and go to state 84
    ARREGLOS                       shift and go to state 85
    LLAMADAS                       shift and go to state 86
    E                              shift and go to state 87

state 342

    (35) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (36) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 360
    COMA            shift and go to state 177


state 343

    (112) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 112 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 344

    (119) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 119 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 345

    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . IFS
    (6) INSTRUCCIONES -> INSTRUCCIONES . FORS
    (7) INSTRUCCIONES -> INSTRUCCIONES . WHILES
    (8) INSTRUCCIONES -> INSTRUCCIONES . ASIGNACION
    (9) INSTRUCCIONES -> INSTRUCCIONES . I
    (10) INSTRUCCIONES -> INSTRUCCIONES . LLAMADAS
    (11) INSTRUCCIONES -> INSTRUCCIONES . NATIVAS PTCOMA
    (12) INSTRUCCIONES -> INSTRUCCIONES . STRUCTS
    (111) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (113) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (114) IFS -> . R_IF LO R_END PTCOMA
    (115) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (116) IFS -> . R_IF LO ELSEIF
    (117) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (118) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (149) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (150) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (147) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (148) WHILES -> . R_WHILE LO R_END PTCOMA
    (42) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (43) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (44) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (45) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (46) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (47) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (48) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (49) ASIGNACION -> . R_LOCAL ID PTCOMA
    (21) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (22) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (56) LLAMADAS -> . ID PARIZQ LISTAS PARIZQ PTCOMA
    (57) LLAMADAS -> . ID PARIZQ PARDER PTCOMA
    (93) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (95) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (96) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (97) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (98) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (99) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (100) NATIVAS -> . ID PUNTO R_LENGTH
    (155) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (156) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (157) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (158) STRUCTS -> . R_STRUCT ID R_END PTCOMA

    R_END           shift and go to state 361
    R_IF            shift and go to state 14
    R_FOR           shift and go to state 15
    R_WHILE         shift and go to state 16
    R_GLOBAL        shift and go to state 17
    R_LOCAL         shift and go to state 18
    ID              shift and go to state 5
    R_PRINT         shift and go to state 19
    R_PRINTLN       shift and go to state 20
    R_PARSE         shift and go to state 21
    R_TRUNC         shift and go to state 22
    R_FLOAT         shift and go to state 23
    R_STRING        shift and go to state 24
    R_TYPEOF        shift and go to state 25
    R_PUSH          shift and go to state 26
    R_POP           shift and go to state 27
    R_MUTABLE       shift and go to state 28
    R_STRUCT        shift and go to state 29

    IFS                            shift and go to state 32
    FORS                           shift and go to state 33
    WHILES                         shift and go to state 34
    ASIGNACION                     shift and go to state 35
    I                              shift and go to state 36
    LLAMADAS                       shift and go to state 37
    NATIVAS                        shift and go to state 38
    STRUCTS                        shift and go to state 39

state 346

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 362


state 347

    (123) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 363


state 348

    (126) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 126 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 349

    (73) E -> R_LOG PARIZQ E COMA E PARDER .

    MAS             reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRING        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_MUTABLE       reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRUCT        reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARIZQ          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 73 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 350

    (154) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (58) E -> . E MAS E
    (59) E -> . E MENOS E
    (60) E -> . E POR E
    (61) E -> . E DIVIDIDO E
    (62) E -> . E MODAL E
    (63) E -> . E POTENCIA E
    (64) E -> . MENOS E
    (65) E -> . PARIZQ E PARDER
    (66) E -> . R_LOG10 PARIZQ E PARDER
    (67) E -> . R_SIN PARIZQ E PARDER
    (68) E -> . R_COS PARIZQ E PARDER
    (69) E -> . R_TAN PARIZQ E PARDER
    (70) E -> . R_SQRT PARIZQ E PARDER
    (71) E -> . R_UPPERCASE PARIZQ E PARDER
    (72) E -> . R_LOWERCASE PARIZQ E PARDER
    (73) E -> . R_LOG PARIZQ E COMA E PARDER
    (74) E -> . DECIMAL
    (75) E -> . ENTERO
    (76) E -> . R_TRUE
    (77) E -> . R_FALSE
    (78) E -> . CADENA
    (79) E -> . ID

    MENOS           shift and go to state 50
    PARIZQ          shift and go to state 88
    R_LOG10         shift and go to state 51
    R_SIN           shift and go to state 52
    R_COS           shift and go to state 53
    R_TAN           shift and go to state 54
    R_SQRT          shift and go to state 55
    R_UPPERCASE     shift and go to state 56
    R_LOWERCASE     shift and go to state 57
    R_LOG           shift and go to state 58
    DECIMAL         shift and go to state 59
    ENTERO          shift and go to state 60
    R_TRUE          shift and go to state 61
    R_FALSE         shift and go to state 62
    CADENA          shift and go to state 63
    ID              shift and go to state 64

    E                              shift and go to state 364

state 351

    (149) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 149 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 352

    (42) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 42 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 353

    (43) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 43 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 354

    (98) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .

    PTCOMA          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTOS       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARIZQ          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    COMA            reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_END           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_BREAK         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_CONTINUE      reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_IF            reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FOR           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_WHILE         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_GLOBAL        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOCAL         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ID              reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINT         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINTLN       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PARSE         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUNC         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FLOAT         reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRING        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TYPEOF        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PUSH          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_POP           reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_MUTABLE       reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRUCT        reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARDER          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CORDER          reduce using rule 98 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)


state 355

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES R_END PTCOMA .)


state 356

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END . PTCOMA

    PTCOMA          shift and go to state 365


state 357

    (106) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_IF            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    ID              reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_POP           reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)
    $end            reduce using rule 106 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER RETURN R_END PTCOMA .)


state 358

    (108) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 108 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 359

    (34) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (36) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 366
    COMA            shift and go to state 177


state 360

    (35) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 35 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 361

    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 367


state 362

    (125) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 125 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 363

    (123) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 123 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 364

    (154) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (58) E -> E . MAS E
    (59) E -> E . MENOS E
    (60) E -> E . POR E
    (61) E -> E . DIVIDIDO E
    (62) E -> E . MODAL E
    (63) E -> E . POTENCIA E

    CORDER          shift and go to state 368
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIVIDIDO        shift and go to state 114
    MODAL           shift and go to state 115
    POTENCIA        shift and go to state 116


state 365

    (104) FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .

    R_FUNCTION      reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_IF            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FOR           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_WHILE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_GLOBAL        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_LOCAL         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    ID              reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PRINTLN       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PARSE         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TRUNC         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_FLOAT         reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRING        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_TYPEOF        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_PUSH          reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_POP           reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_MUTABLE       reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    R_STRUCT        reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)
    $end            reduce using rule 104 (FUNCIONES -> R_FUNCTION ID PARIZQ LISTAS PARDER INSTRUCCIONES RETURN R_END PTCOMA .)


state 366

    (34) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    DOSPUNTOS       reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PTCOMA          reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARIZQ          reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 34 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 367

    (120) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 120 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 368

    (154) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRING        reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_MUTABLE       reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRUCT        reduce using rule 154 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 3 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 3 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 3 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 3 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 3 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 3 resolved as shift
WARNING: shift/reduce conflict for R_IF in state 31 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 31 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 31 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 31 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 31 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 31 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 31 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 31 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 31 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 31 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 31 resolved as shift
WARNING: shift/reduce conflict for PARIZQ in state 82 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 103 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 104 resolved as shift
