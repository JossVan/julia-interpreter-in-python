Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INICIO INIT
Rule 2     INICIO -> INIT
Rule 3     INIT -> FUNCIONES
Rule 4     INIT -> INSTRUCCIONES
Rule 5     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 6     INSTRUCCIONES -> INSTRUCCION
Rule 7     INSTRUCCION -> IFS
Rule 8     INSTRUCCION -> FORS
Rule 9     INSTRUCCION -> WHILES
Rule 10    INSTRUCCION -> ASIGNACION
Rule 11    INSTRUCCION -> I
Rule 12    INSTRUCCION -> LLAMADAS PTCOMA
Rule 13    INSTRUCCION -> NATIVAS PTCOMA
Rule 14    INSTRUCCION -> STRUCTS
Rule 15    INSTRUCCION -> BREAK
Rule 16    INSTRUCCION -> CONTINUE
Rule 17    INSTRUCCION -> RETURN
Rule 18    I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
Rule 19    I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
Rule 20    IMPRESIONES -> IMPRESIONES COMA IMPRESION
Rule 21    IMPRESIONES -> IMPRESION
Rule 22    IMPRESION -> ARREGLOS
Rule 23    IMPRESION -> LO
Rule 24    IMPRESION -> DOLAR PARIZQ E PARDER
Rule 25    IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER
Rule 26    IMPRESION -> DOLAR PARIZQ NATIVAS PARDER
Rule 27    ARREGLOS -> ID CORIZQ LISTAS CORDER
Rule 28    ARREGLOS -> CORIZQ LISTAS CORDER
Rule 29    ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 30    ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
Rule 31    LISTAS -> LISTAS COMA LISTA
Rule 32    LISTAS -> LISTA
Rule 33    LISTA -> ARREGLOS
Rule 34    LISTA -> LO
Rule 35    ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 36    ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 37    ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
Rule 38    ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA
Rule 39    ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA
Rule 40    ASIGNACION -> ID IGUAL LISTA PTCOMA
Rule 41    ASIGNACION -> R_GLOBAL ID PTCOMA
Rule 42    ASIGNACION -> R_LOCAL ID PTCOMA
Rule 43    BREAK -> R_BREAK PTCOMA
Rule 44    TIPO -> R_NOTHING
Rule 45    TIPO -> R_INT64
Rule 46    TIPO -> R_FLOAT64
Rule 47    TIPO -> R_STRING
Rule 48    TIPO -> R_CHAR
Rule 49    TIPO -> R_BOOL
Rule 50    LLAMADAS -> ID PARIZQ LISTAS PARDER
Rule 51    LLAMADAS -> ID PARIZQ PARDER
Rule 52    E -> E MAS E
Rule 53    E -> E MENOS E
Rule 54    E -> E POR E
Rule 55    E -> E DIVIDIDO E
Rule 56    E -> E MODAL E
Rule 57    E -> E POTENCIA E
Rule 58    E -> MENOS E
Rule 59    E -> PARIZQ E PARDER
Rule 60    E -> R_LOG10 PARIZQ E PARDER
Rule 61    E -> R_SIN PARIZQ E PARDER
Rule 62    E -> R_COS PARIZQ E PARDER
Rule 63    E -> R_TAN PARIZQ E PARDER
Rule 64    E -> R_SQRT PARIZQ E PARDER
Rule 65    E -> R_UPPERCASE PARIZQ E PARDER
Rule 66    E -> R_LOWERCASE PARIZQ E PARDER
Rule 67    E -> R_LOG PARIZQ E COMA E PARDER
Rule 68    E -> DECIMAL
Rule 69    E -> ENTERO
Rule 70    E -> R_TRUE
Rule 71    E -> R_FALSE
Rule 72    E -> CADENA
Rule 73    E -> ID
Rule 74    E -> NATIVAS
Rule 75    E -> LLAMADAS
Rule 76    RE -> RE MENQUE RE
Rule 77    RE -> RE MAYQUE RE
Rule 78    RE -> RE IGUALQUE RE
Rule 79    RE -> RE NIGUALQUE RE
Rule 80    RE -> RE MENORIGUAL RE
Rule 81    RE -> RE MAYORIGUAL RE
Rule 82    RE -> PARIZQ RE PARDER
Rule 83    RE -> E
Rule 84    LO -> LO AND LO
Rule 85    LO -> LO OR LO
Rule 86    LO -> DIFERENTE LO
Rule 87    LO -> PARIZQ LO PARDER
Rule 88    LO -> RE
Rule 89    NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER
Rule 90    NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER
Rule 91    NATIVAS -> R_FLOAT PARIZQ LISTA PARDER
Rule 92    NATIVAS -> R_STRING PARIZQ LISTA PARDER
Rule 93    NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER
Rule 94    NATIVAS -> R_TRUNC PARIZQ LISTA PARDER
Rule 95    NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
Rule 96    NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER
Rule 97    NATIVAS -> ID PUNTO R_LENGTH
Rule 98    RETURN -> R_RETURN LISTA PTCOMA
Rule 99    RETURN -> R_RETURN PTCOMA
Rule 100   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
Rule 101   FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
Rule 102   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
Rule 103   FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
Rule 104   PARAMETROS -> PARAMETROS COMA PARAMETRO
Rule 105   PARAMETROS -> PARAMETRO
Rule 106   PARAMETRO -> ID
Rule 107   IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA
Rule 108   IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 109   IFS -> R_IF LO INSTRUCCIONES ELSEIF
Rule 110   IFS -> R_IF LO R_END PTCOMA
Rule 111   IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 112   IFS -> R_IF LO ELSEIF
Rule 113   IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 114   IFS -> R_IF LO R_ELSE R_END PTCOMA
Rule 115   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
Rule 116   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 117   ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF
Rule 118   ELSEIF -> R_ELSEIF LO R_END PTCOMA
Rule 119   ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
Rule 120   ELSEIF -> R_ELSEIF LO ELSEIF
Rule 121   ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
Rule 122   ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA
Rule 123   CONTINUE -> R_CONTINUE PTCOMA
Rule 124   INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP
Rule 125   INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP
Rule 126   INSTRUCCION_LOOP -> IFS
Rule 127   INSTRUCCION_LOOP -> FORS
Rule 128   INSTRUCCION_LOOP -> WHILES
Rule 129   INSTRUCCION_LOOP -> ASIGNACION
Rule 130   INSTRUCCION_LOOP -> I
Rule 131   INSTRUCCION_LOOP -> LLAMADAS PTCOMA
Rule 132   INSTRUCCION_LOOP -> NATIVAS
Rule 133   INSTRUCCION_LOOP -> STRUCTS
Rule 134   INSTRUCCION_LOOP -> BREAK
Rule 135   INSTRUCCION_LOOP -> CONTINUE
Rule 136   WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 137   WHILES -> R_WHILE LO R_END PTCOMA
Rule 138   FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
Rule 139   FORS -> R_FOR ID R_IN RANGO R_END PTCOMA
Rule 140   RANGO -> E DOSPUNTITOS E
Rule 141   RANGO -> E
Rule 142   RANGO -> ARREGLOS
Rule 143   RANGO -> ID CORIZQ E DOSPUNTOS E CORDER
Rule 144   STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
Rule 145   STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA
Rule 146   STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA
Rule 147   STRUCTS -> R_STRUCT ID R_END PTCOMA
Rule 148   ELEMENTOS -> ELEMENTOS COMA ELEMENTO
Rule 149   ELEMENTOS -> ELEMENTO
Rule 150   ELEMENTO -> ID
Rule 151   ELEMENTO -> ID DOSPUNTOS TIPO

Terminals, with rules where they appear

AND                  : 84
CADENA               : 72
COMA                 : 20 31 67 89 90 95 104 148
CORDER               : 27 28 29 29 30 30 143
CORIZQ               : 27 28 29 29 30 30 143
DECIMAL              : 68
DIFERENTE            : 86 95 96
DIVIDIDO             : 55
DOLAR                : 24 25 26
DOSPUNTITOS          : 140
DOSPUNTOS            : 35 36 37 143 151
ENTERO               : 69
ID                   : 27 29 35 36 37 38 39 40 41 42 50 51 73 95 96 97 100 101 102 103 106 138 139 143 144 145 146 147 150 151
IGUAL                : 35 36 37 38 39 40
IGUALQUE             : 78
MAS                  : 52
MAYORIGUAL           : 81
MAYQUE               : 77
MENORIGUAL           : 80
MENOS                : 53 58
MENQUE               : 76
MODAL                : 56
NIGUALQUE            : 79
OR                   : 85
PARDER               : 18 19 24 25 26 50 51 59 60 61 62 63 64 65 66 67 82 87 89 90 91 92 93 94 95 96 100 101 102 103
PARIZQ               : 18 19 24 25 26 50 51 59 60 61 62 63 64 65 66 67 82 87 89 90 91 92 93 94 95 96 100 101 102 103
POR                  : 54
POTENCIA             : 57
PTCOMA               : 12 13 18 19 35 36 37 38 39 40 41 42 43 98 99 100 101 102 103 107 108 110 111 113 114 115 116 118 119 121 122 123 131 136 137 138 139 144 145 146 147
PUNTO                : 97
R_BOOL               : 49
R_BREAK              : 43
R_CHAR               : 48
R_CONTINUE           : 123
R_COS                : 62
R_ELSE               : 108 111 113 114 116 119 121 122
R_ELSEIF             : 115 116 117 118 119 120 121 122
R_END                : 100 101 102 103 107 108 110 111 113 114 115 116 118 119 121 122 136 137 138 139 144 146 147
R_FALSE              : 71
R_FLOAT              : 91
R_FLOAT64            : 46
R_FOR                : 138 139
R_FUNCTION           : 100 101 102 103
R_GLOBAL             : 35 38 41
R_IF                 : 107 108 109 110 111 112 113 114
R_IN                 : 138 139
R_INT64              : 45
R_LENGTH             : 97
R_LOCAL              : 36 39 42
R_LOG                : 67
R_LOG10              : 60
R_LOWERCASE          : 66
R_MUTABLE            : 144 146
R_NOTHING            : 44
R_PARSE              : 89
R_POP                : 96
R_PRINT              : 18
R_PRINTLN            : 19
R_PUSH               : 95
R_RETURN             : 98 99
R_SIN                : 61
R_SQRT               : 64
R_STRING             : 47 92
R_STRUCT             : 144 145 146 147
R_TAN                : 63
R_TRUE               : 70
R_TRUNC              : 90 94
R_TYPEOF             : 93
R_UPPERCASE          : 65
R_WHILE              : 136 137
error                : 

Nonterminals, with rules where they appear

ARREGLOS             : 22 25 33 142
ASIGNACION           : 10 129
BREAK                : 15 134
CONTINUE             : 16 135
E                    : 24 52 52 53 53 54 54 55 55 56 56 57 57 58 59 60 61 62 63 64 65 66 67 67 83 95 140 140 141 143 143
ELEMENTO             : 148 149
ELEMENTOS            : 144 145 148
ELSEIF               : 109 112 117 120
FORS                 : 8 127
FUNCIONES            : 3
I                    : 11 130
IFS                  : 7 126
IMPRESION            : 20 21
IMPRESIONES          : 18 19 20
INICIO               : 1 0
INIT                 : 1 2
INSTRUCCION          : 5 6
INSTRUCCIONES        : 4 5 100 102 107 108 108 109 111 113 115 116 116 117 119 121
INSTRUCCIONES_LOOP   : 124 136 138
INSTRUCCION_LOOP     : 124 125
LISTA                : 31 32 35 36 37 38 39 40 89 90 91 92 93 94 98
LISTAS               : 27 28 29 29 30 30 31 50
LLAMADAS             : 12 75 131
LO                   : 23 34 84 84 85 85 86 87 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 136 137
NATIVAS              : 13 26 74 132
PARAMETRO            : 104 105
PARAMETROS           : 100 101 104
RANGO                : 138 139
RE                   : 76 76 77 77 78 78 79 79 80 80 81 81 82 88
RETURN               : 17
STRUCTS              : 14 133
TIPO                 : 35 36 37 89 90 151
WHILES               : 9 128

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INICIO INIT
    (2) INICIO -> . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (100) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (102) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_FUNCTION      shift and go to state 5
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INICIO                         shift and go to state 1
    INIT                           shift and go to state 2
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 1

    (0) S' -> INICIO .
    (1) INICIO -> INICIO . INIT
    (3) INIT -> . FUNCIONES
    (4) INIT -> . INSTRUCCIONES
    (100) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> . R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (102) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> . R_FUNCTION ID PARIZQ PARDER R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_FUNCTION      shift and go to state 5
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INIT                           shift and go to state 38
    FUNCIONES                      shift and go to state 3
    INSTRUCCIONES                  shift and go to state 4
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 2

    (2) INICIO -> INIT .

    R_FUNCTION      reduce using rule 2 (INICIO -> INIT .)
    R_IF            reduce using rule 2 (INICIO -> INIT .)
    R_FOR           reduce using rule 2 (INICIO -> INIT .)
    R_WHILE         reduce using rule 2 (INICIO -> INIT .)
    R_GLOBAL        reduce using rule 2 (INICIO -> INIT .)
    R_LOCAL         reduce using rule 2 (INICIO -> INIT .)
    ID              reduce using rule 2 (INICIO -> INIT .)
    R_PRINT         reduce using rule 2 (INICIO -> INIT .)
    R_PRINTLN       reduce using rule 2 (INICIO -> INIT .)
    R_PARSE         reduce using rule 2 (INICIO -> INIT .)
    R_TRUNC         reduce using rule 2 (INICIO -> INIT .)
    R_FLOAT         reduce using rule 2 (INICIO -> INIT .)
    R_STRING        reduce using rule 2 (INICIO -> INIT .)
    R_TYPEOF        reduce using rule 2 (INICIO -> INIT .)
    R_PUSH          reduce using rule 2 (INICIO -> INIT .)
    R_POP           reduce using rule 2 (INICIO -> INIT .)
    R_MUTABLE       reduce using rule 2 (INICIO -> INIT .)
    R_STRUCT        reduce using rule 2 (INICIO -> INIT .)
    R_BREAK         reduce using rule 2 (INICIO -> INIT .)
    R_CONTINUE      reduce using rule 2 (INICIO -> INIT .)
    R_RETURN        reduce using rule 2 (INICIO -> INIT .)
    $end            reduce using rule 2 (INICIO -> INIT .)


state 3

    (3) INIT -> FUNCIONES .

    R_FUNCTION      reduce using rule 3 (INIT -> FUNCIONES .)
    R_IF            reduce using rule 3 (INIT -> FUNCIONES .)
    R_FOR           reduce using rule 3 (INIT -> FUNCIONES .)
    R_WHILE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_GLOBAL        reduce using rule 3 (INIT -> FUNCIONES .)
    R_LOCAL         reduce using rule 3 (INIT -> FUNCIONES .)
    ID              reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_PRINTLN       reduce using rule 3 (INIT -> FUNCIONES .)
    R_PARSE         reduce using rule 3 (INIT -> FUNCIONES .)
    R_TRUNC         reduce using rule 3 (INIT -> FUNCIONES .)
    R_FLOAT         reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRING        reduce using rule 3 (INIT -> FUNCIONES .)
    R_TYPEOF        reduce using rule 3 (INIT -> FUNCIONES .)
    R_PUSH          reduce using rule 3 (INIT -> FUNCIONES .)
    R_POP           reduce using rule 3 (INIT -> FUNCIONES .)
    R_MUTABLE       reduce using rule 3 (INIT -> FUNCIONES .)
    R_STRUCT        reduce using rule 3 (INIT -> FUNCIONES .)
    R_BREAK         reduce using rule 3 (INIT -> FUNCIONES .)
    R_CONTINUE      reduce using rule 3 (INIT -> FUNCIONES .)
    R_RETURN        reduce using rule 3 (INIT -> FUNCIONES .)
    $end            reduce using rule 3 (INIT -> FUNCIONES .)


state 4

    (4) INIT -> INSTRUCCIONES .
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

  ! shift/reduce conflict for R_IF resolved as shift
  ! shift/reduce conflict for R_FOR resolved as shift
  ! shift/reduce conflict for R_WHILE resolved as shift
  ! shift/reduce conflict for R_GLOBAL resolved as shift
  ! shift/reduce conflict for R_LOCAL resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for R_PRINT resolved as shift
  ! shift/reduce conflict for R_PRINTLN resolved as shift
  ! shift/reduce conflict for R_PARSE resolved as shift
  ! shift/reduce conflict for R_TRUNC resolved as shift
  ! shift/reduce conflict for R_FLOAT resolved as shift
  ! shift/reduce conflict for R_STRING resolved as shift
  ! shift/reduce conflict for R_TYPEOF resolved as shift
  ! shift/reduce conflict for R_PUSH resolved as shift
  ! shift/reduce conflict for R_POP resolved as shift
  ! shift/reduce conflict for R_MUTABLE resolved as shift
  ! shift/reduce conflict for R_STRUCT resolved as shift
  ! shift/reduce conflict for R_BREAK resolved as shift
  ! shift/reduce conflict for R_CONTINUE resolved as shift
  ! shift/reduce conflict for R_RETURN resolved as shift
    R_FUNCTION      reduce using rule 4 (INIT -> INSTRUCCIONES .)
    $end            reduce using rule 4 (INIT -> INSTRUCCIONES .)
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

  ! R_IF            [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FOR           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_WHILE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_GLOBAL        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_LOCAL         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! ID              [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PRINTLN       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PARSE         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TRUNC         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_FLOAT         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_STRING        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_TYPEOF        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_PUSH          [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_POP           [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_MUTABLE       [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_STRUCT        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_BREAK         [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_CONTINUE      [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]
  ! R_RETURN        [ reduce using rule 4 (INIT -> INSTRUCCIONES .) ]

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 5

    (100) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION . ID PARIZQ PARAMETROS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION . ID PARIZQ PARDER R_END PTCOMA

    ID              shift and go to state 40


state 6

    (37) ASIGNACION -> ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (40) ASIGNACION -> ID . IGUAL LISTA PTCOMA
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER
    (97) NATIVAS -> ID . PUNTO R_LENGTH

    IGUAL           shift and go to state 41
    PARIZQ          shift and go to state 42
    PUNTO           shift and go to state 43


state 7

    (6) INSTRUCCIONES -> INSTRUCCION .

    R_IF            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FOR           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_WHILE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_GLOBAL        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_LOCAL         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    ID              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PRINTLN       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PARSE         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TRUNC         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FLOAT         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRING        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_TYPEOF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_PUSH          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_POP           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_MUTABLE       reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_STRUCT        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_BREAK         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_CONTINUE      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_RETURN        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_FUNCTION      reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_END           reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSE          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)
    R_ELSEIF        reduce using rule 6 (INSTRUCCIONES -> INSTRUCCION .)


state 8

    (7) INSTRUCCION -> IFS .

    R_IF            reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FOR           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_WHILE         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_GLOBAL        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_LOCAL         reduce using rule 7 (INSTRUCCION -> IFS .)
    ID              reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PRINT         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PRINTLN       reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PARSE         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TRUNC         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FLOAT         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_STRING        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_TYPEOF        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_PUSH          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_POP           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_MUTABLE       reduce using rule 7 (INSTRUCCION -> IFS .)
    R_STRUCT        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_BREAK         reduce using rule 7 (INSTRUCCION -> IFS .)
    R_CONTINUE      reduce using rule 7 (INSTRUCCION -> IFS .)
    R_RETURN        reduce using rule 7 (INSTRUCCION -> IFS .)
    R_FUNCTION      reduce using rule 7 (INSTRUCCION -> IFS .)
    $end            reduce using rule 7 (INSTRUCCION -> IFS .)
    R_END           reduce using rule 7 (INSTRUCCION -> IFS .)
    R_ELSE          reduce using rule 7 (INSTRUCCION -> IFS .)
    R_ELSEIF        reduce using rule 7 (INSTRUCCION -> IFS .)


state 9

    (8) INSTRUCCION -> FORS .

    R_IF            reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FOR           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_WHILE         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_GLOBAL        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_LOCAL         reduce using rule 8 (INSTRUCCION -> FORS .)
    ID              reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PRINT         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PRINTLN       reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PARSE         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TRUNC         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FLOAT         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_STRING        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_TYPEOF        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_PUSH          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_POP           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_MUTABLE       reduce using rule 8 (INSTRUCCION -> FORS .)
    R_STRUCT        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_BREAK         reduce using rule 8 (INSTRUCCION -> FORS .)
    R_CONTINUE      reduce using rule 8 (INSTRUCCION -> FORS .)
    R_RETURN        reduce using rule 8 (INSTRUCCION -> FORS .)
    R_FUNCTION      reduce using rule 8 (INSTRUCCION -> FORS .)
    $end            reduce using rule 8 (INSTRUCCION -> FORS .)
    R_END           reduce using rule 8 (INSTRUCCION -> FORS .)
    R_ELSE          reduce using rule 8 (INSTRUCCION -> FORS .)
    R_ELSEIF        reduce using rule 8 (INSTRUCCION -> FORS .)


state 10

    (9) INSTRUCCION -> WHILES .

    R_IF            reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FOR           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_WHILE         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_GLOBAL        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_LOCAL         reduce using rule 9 (INSTRUCCION -> WHILES .)
    ID              reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PRINT         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PRINTLN       reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PARSE         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TRUNC         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FLOAT         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_STRING        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_TYPEOF        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_PUSH          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_POP           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_MUTABLE       reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_STRUCT        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_BREAK         reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_CONTINUE      reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_RETURN        reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_FUNCTION      reduce using rule 9 (INSTRUCCION -> WHILES .)
    $end            reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_END           reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_ELSE          reduce using rule 9 (INSTRUCCION -> WHILES .)
    R_ELSEIF        reduce using rule 9 (INSTRUCCION -> WHILES .)


state 11

    (10) INSTRUCCION -> ASIGNACION .

    R_IF            reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FOR           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_WHILE         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_GLOBAL        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_LOCAL         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    ID              reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PRINT         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PRINTLN       reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PARSE         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TRUNC         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FLOAT         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_STRING        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_TYPEOF        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_PUSH          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_POP           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_MUTABLE       reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_STRUCT        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_BREAK         reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_CONTINUE      reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_RETURN        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_FUNCTION      reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_END           reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_ELSE          reduce using rule 10 (INSTRUCCION -> ASIGNACION .)
    R_ELSEIF        reduce using rule 10 (INSTRUCCION -> ASIGNACION .)


state 12

    (11) INSTRUCCION -> I .

    R_IF            reduce using rule 11 (INSTRUCCION -> I .)
    R_FOR           reduce using rule 11 (INSTRUCCION -> I .)
    R_WHILE         reduce using rule 11 (INSTRUCCION -> I .)
    R_GLOBAL        reduce using rule 11 (INSTRUCCION -> I .)
    R_LOCAL         reduce using rule 11 (INSTRUCCION -> I .)
    ID              reduce using rule 11 (INSTRUCCION -> I .)
    R_PRINT         reduce using rule 11 (INSTRUCCION -> I .)
    R_PRINTLN       reduce using rule 11 (INSTRUCCION -> I .)
    R_PARSE         reduce using rule 11 (INSTRUCCION -> I .)
    R_TRUNC         reduce using rule 11 (INSTRUCCION -> I .)
    R_FLOAT         reduce using rule 11 (INSTRUCCION -> I .)
    R_STRING        reduce using rule 11 (INSTRUCCION -> I .)
    R_TYPEOF        reduce using rule 11 (INSTRUCCION -> I .)
    R_PUSH          reduce using rule 11 (INSTRUCCION -> I .)
    R_POP           reduce using rule 11 (INSTRUCCION -> I .)
    R_MUTABLE       reduce using rule 11 (INSTRUCCION -> I .)
    R_STRUCT        reduce using rule 11 (INSTRUCCION -> I .)
    R_BREAK         reduce using rule 11 (INSTRUCCION -> I .)
    R_CONTINUE      reduce using rule 11 (INSTRUCCION -> I .)
    R_RETURN        reduce using rule 11 (INSTRUCCION -> I .)
    R_FUNCTION      reduce using rule 11 (INSTRUCCION -> I .)
    $end            reduce using rule 11 (INSTRUCCION -> I .)
    R_END           reduce using rule 11 (INSTRUCCION -> I .)
    R_ELSE          reduce using rule 11 (INSTRUCCION -> I .)
    R_ELSEIF        reduce using rule 11 (INSTRUCCION -> I .)


state 13

    (12) INSTRUCCION -> LLAMADAS . PTCOMA

    PTCOMA          shift and go to state 44


state 14

    (13) INSTRUCCION -> NATIVAS . PTCOMA

    PTCOMA          shift and go to state 45


state 15

    (14) INSTRUCCION -> STRUCTS .

    R_IF            reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FOR           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_WHILE         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_GLOBAL        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_LOCAL         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    ID              reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PRINT         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PRINTLN       reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PARSE         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TRUNC         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FLOAT         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_STRING        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_TYPEOF        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_PUSH          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_POP           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_MUTABLE       reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_STRUCT        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_BREAK         reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_CONTINUE      reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_RETURN        reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_FUNCTION      reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    $end            reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_END           reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_ELSE          reduce using rule 14 (INSTRUCCION -> STRUCTS .)
    R_ELSEIF        reduce using rule 14 (INSTRUCCION -> STRUCTS .)


state 16

    (15) INSTRUCCION -> BREAK .

    R_IF            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FOR           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_WHILE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_GLOBAL        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_LOCAL         reduce using rule 15 (INSTRUCCION -> BREAK .)
    ID              reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PRINTLN       reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PARSE         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TRUNC         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FLOAT         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRING        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_TYPEOF        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_PUSH          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_POP           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_MUTABLE       reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_STRUCT        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_BREAK         reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_CONTINUE      reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_RETURN        reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_FUNCTION      reduce using rule 15 (INSTRUCCION -> BREAK .)
    $end            reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_END           reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSE          reduce using rule 15 (INSTRUCCION -> BREAK .)
    R_ELSEIF        reduce using rule 15 (INSTRUCCION -> BREAK .)


state 17

    (16) INSTRUCCION -> CONTINUE .

    R_IF            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FOR           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_WHILE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_GLOBAL        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_LOCAL         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    ID              reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PRINTLN       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PARSE         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TRUNC         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FLOAT         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRING        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_TYPEOF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_PUSH          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_POP           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_MUTABLE       reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_STRUCT        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_BREAK         reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_CONTINUE      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_RETURN        reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_FUNCTION      reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    $end            reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_END           reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSE          reduce using rule 16 (INSTRUCCION -> CONTINUE .)
    R_ELSEIF        reduce using rule 16 (INSTRUCCION -> CONTINUE .)


state 18

    (17) INSTRUCCION -> RETURN .

    R_IF            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FOR           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_WHILE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_GLOBAL        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_LOCAL         reduce using rule 17 (INSTRUCCION -> RETURN .)
    ID              reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PRINTLN       reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PARSE         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TRUNC         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FLOAT         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRING        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_TYPEOF        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_PUSH          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_POP           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_MUTABLE       reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_STRUCT        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_BREAK         reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_CONTINUE      reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_RETURN        reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_FUNCTION      reduce using rule 17 (INSTRUCCION -> RETURN .)
    $end            reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_END           reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSE          reduce using rule 17 (INSTRUCCION -> RETURN .)
    R_ELSEIF        reduce using rule 17 (INSTRUCCION -> RETURN .)


state 19

    (107) IFS -> R_IF . LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> R_IF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF . LO INSTRUCCIONES ELSEIF
    (110) IFS -> R_IF . LO R_END PTCOMA
    (111) IFS -> R_IF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF . LO ELSEIF
    (113) IFS -> R_IF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> R_IF . LO R_ELSE R_END PTCOMA
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 46
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 20

    (138) FORS -> R_FOR . ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> R_FOR . ID R_IN RANGO R_END PTCOMA

    ID              shift and go to state 68


state 21

    (136) WHILES -> R_WHILE . LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> R_WHILE . LO R_END PTCOMA
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 69
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 22

    (35) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> R_GLOBAL . ID PTCOMA

    ID              shift and go to state 70


state 23

    (36) ASIGNACION -> R_LOCAL . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL . ID IGUAL LISTA PTCOMA
    (42) ASIGNACION -> R_LOCAL . ID PTCOMA

    ID              shift and go to state 71


state 24

    (18) I -> R_PRINT . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 72


state 25

    (19) I -> R_PRINTLN . PARIZQ IMPRESIONES PARDER PTCOMA

    PARIZQ          shift and go to state 73


state 26

    (89) NATIVAS -> R_PARSE . PARIZQ TIPO COMA LISTA PARDER

    PARIZQ          shift and go to state 74


state 27

    (90) NATIVAS -> R_TRUNC . PARIZQ TIPO COMA LISTA PARDER
    (94) NATIVAS -> R_TRUNC . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 75


state 28

    (91) NATIVAS -> R_FLOAT . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 76


state 29

    (92) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 77


state 30

    (93) NATIVAS -> R_TYPEOF . PARIZQ LISTA PARDER

    PARIZQ          shift and go to state 78


state 31

    (95) NATIVAS -> R_PUSH . DIFERENTE PARIZQ ID COMA E PARDER

    DIFERENTE       shift and go to state 79


state 32

    (96) NATIVAS -> R_POP . DIFERENTE PARIZQ ID PARDER

    DIFERENTE       shift and go to state 80


state 33

    (144) STRUCTS -> R_MUTABLE . R_STRUCT ID ELEMENTOS R_END PTCOMA
    (146) STRUCTS -> R_MUTABLE . R_STRUCT ID R_END PTCOMA

    R_STRUCT        shift and go to state 81


state 34

    (145) STRUCTS -> R_STRUCT . ID ELEMENTOS PTCOMA
    (147) STRUCTS -> R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 82


state 35

    (43) BREAK -> R_BREAK . PTCOMA

    PTCOMA          shift and go to state 83


state 36

    (123) CONTINUE -> R_CONTINUE . PTCOMA

    PTCOMA          shift and go to state 84


state 37

    (98) RETURN -> R_RETURN . LISTA PTCOMA
    (99) RETURN -> R_RETURN . PTCOMA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PTCOMA          shift and go to state 86
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 85
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 38

    (1) INICIO -> INICIO INIT .

    R_FUNCTION      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_IF            reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FOR           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_WHILE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_GLOBAL        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_LOCAL         reduce using rule 1 (INICIO -> INICIO INIT .)
    ID              reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PRINTLN       reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PARSE         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TRUNC         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_FLOAT         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRING        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_TYPEOF        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_PUSH          reduce using rule 1 (INICIO -> INICIO INIT .)
    R_POP           reduce using rule 1 (INICIO -> INICIO INIT .)
    R_MUTABLE       reduce using rule 1 (INICIO -> INICIO INIT .)
    R_STRUCT        reduce using rule 1 (INICIO -> INICIO INIT .)
    R_BREAK         reduce using rule 1 (INICIO -> INICIO INIT .)
    R_CONTINUE      reduce using rule 1 (INICIO -> INICIO INIT .)
    R_RETURN        reduce using rule 1 (INICIO -> INICIO INIT .)
    $end            reduce using rule 1 (INICIO -> INICIO INIT .)


state 39

    (5) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    R_IF            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FOR           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_WHILE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_GLOBAL        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_LOCAL         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    ID              reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PRINTLN       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PARSE         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TRUNC         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FLOAT         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRING        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_TYPEOF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_PUSH          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_POP           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_MUTABLE       reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_STRUCT        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_BREAK         reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_CONTINUE      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_RETURN        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_FUNCTION      reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_END           reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSE          reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    R_ELSEIF        reduce using rule 5 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 40

    (100) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID . PARIZQ PARAMETROS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION ID . PARIZQ PARDER R_END PTCOMA

    PARIZQ          shift and go to state 91


state 41

    (37) ASIGNACION -> ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (40) ASIGNACION -> ID IGUAL . LISTA PTCOMA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 92
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 42

    (50) LLAMADAS -> ID PARIZQ . LISTAS PARDER
    (51) LLAMADAS -> ID PARIZQ . PARDER
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARDER          shift and go to state 94
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTAS                         shift and go to state 93
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 43

    (97) NATIVAS -> ID PUNTO . R_LENGTH

    R_LENGTH        shift and go to state 96


state 44

    (12) INSTRUCCION -> LLAMADAS PTCOMA .

    R_IF            reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    ID              reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_MUTABLE       reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_STRUCT        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_RETURN        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_FUNCTION      reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    $end            reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_END           reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSE          reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)
    R_ELSEIF        reduce using rule 12 (INSTRUCCION -> LLAMADAS PTCOMA .)


state 45

    (13) INSTRUCCION -> NATIVAS PTCOMA .

    R_IF            reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FOR           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_WHILE         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_GLOBAL        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_LOCAL         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    ID              reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINT         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PRINTLN       reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PARSE         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TRUNC         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FLOAT         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRING        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_TYPEOF        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_PUSH          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_POP           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_MUTABLE       reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_STRUCT        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_BREAK         reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_CONTINUE      reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_RETURN        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_FUNCTION      reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    $end            reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_END           reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSE          reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)
    R_ELSEIF        reduce using rule 13 (INSTRUCCION -> NATIVAS PTCOMA .)


state 46

    (107) IFS -> R_IF LO . INSTRUCCIONES R_END PTCOMA
    (108) IFS -> R_IF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF LO . INSTRUCCIONES ELSEIF
    (110) IFS -> R_IF LO . R_END PTCOMA
    (111) IFS -> R_IF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> R_IF LO . ELSEIF
    (113) IFS -> R_IF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> R_IF LO . R_ELSE R_END PTCOMA
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 98
    R_ELSE          shift and go to state 99
    AND             shift and go to state 101
    OR              shift and go to state 102
    R_ELSEIF        shift and go to state 103
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 97
    ELSEIF                         shift and go to state 100
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 47

    (86) LO -> DIFERENTE . LO
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 104
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 48

    (87) LO -> PARIZQ . LO PARDER
    (82) RE -> PARIZQ . RE PARDER
    (59) E -> PARIZQ . E PARDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 105
    RE                             shift and go to state 106
    E                              shift and go to state 107
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 49

    (88) LO -> RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    R_END           reduce using rule 88 (LO -> RE .)
    R_ELSE          reduce using rule 88 (LO -> RE .)
    AND             reduce using rule 88 (LO -> RE .)
    OR              reduce using rule 88 (LO -> RE .)
    R_ELSEIF        reduce using rule 88 (LO -> RE .)
    R_IF            reduce using rule 88 (LO -> RE .)
    R_FOR           reduce using rule 88 (LO -> RE .)
    R_WHILE         reduce using rule 88 (LO -> RE .)
    R_GLOBAL        reduce using rule 88 (LO -> RE .)
    R_LOCAL         reduce using rule 88 (LO -> RE .)
    ID              reduce using rule 88 (LO -> RE .)
    R_PRINT         reduce using rule 88 (LO -> RE .)
    R_PRINTLN       reduce using rule 88 (LO -> RE .)
    R_PARSE         reduce using rule 88 (LO -> RE .)
    R_TRUNC         reduce using rule 88 (LO -> RE .)
    R_FLOAT         reduce using rule 88 (LO -> RE .)
    R_STRING        reduce using rule 88 (LO -> RE .)
    R_TYPEOF        reduce using rule 88 (LO -> RE .)
    R_PUSH          reduce using rule 88 (LO -> RE .)
    R_POP           reduce using rule 88 (LO -> RE .)
    R_MUTABLE       reduce using rule 88 (LO -> RE .)
    R_STRUCT        reduce using rule 88 (LO -> RE .)
    R_BREAK         reduce using rule 88 (LO -> RE .)
    R_CONTINUE      reduce using rule 88 (LO -> RE .)
    R_RETURN        reduce using rule 88 (LO -> RE .)
    PTCOMA          reduce using rule 88 (LO -> RE .)
    DOSPUNTOS       reduce using rule 88 (LO -> RE .)
    PARDER          reduce using rule 88 (LO -> RE .)
    COMA            reduce using rule 88 (LO -> RE .)
    CORDER          reduce using rule 88 (LO -> RE .)
    MENQUE          shift and go to state 108
    MAYQUE          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NIGUALQUE       shift and go to state 111
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113


state 50

    (83) RE -> E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MENQUE          reduce using rule 83 (RE -> E .)
    MAYQUE          reduce using rule 83 (RE -> E .)
    IGUALQUE        reduce using rule 83 (RE -> E .)
    NIGUALQUE       reduce using rule 83 (RE -> E .)
    MENORIGUAL      reduce using rule 83 (RE -> E .)
    MAYORIGUAL      reduce using rule 83 (RE -> E .)
    R_END           reduce using rule 83 (RE -> E .)
    R_ELSE          reduce using rule 83 (RE -> E .)
    AND             reduce using rule 83 (RE -> E .)
    OR              reduce using rule 83 (RE -> E .)
    R_ELSEIF        reduce using rule 83 (RE -> E .)
    R_IF            reduce using rule 83 (RE -> E .)
    R_FOR           reduce using rule 83 (RE -> E .)
    R_WHILE         reduce using rule 83 (RE -> E .)
    R_GLOBAL        reduce using rule 83 (RE -> E .)
    R_LOCAL         reduce using rule 83 (RE -> E .)
    ID              reduce using rule 83 (RE -> E .)
    R_PRINT         reduce using rule 83 (RE -> E .)
    R_PRINTLN       reduce using rule 83 (RE -> E .)
    R_PARSE         reduce using rule 83 (RE -> E .)
    R_TRUNC         reduce using rule 83 (RE -> E .)
    R_FLOAT         reduce using rule 83 (RE -> E .)
    R_STRING        reduce using rule 83 (RE -> E .)
    R_TYPEOF        reduce using rule 83 (RE -> E .)
    R_PUSH          reduce using rule 83 (RE -> E .)
    R_POP           reduce using rule 83 (RE -> E .)
    R_MUTABLE       reduce using rule 83 (RE -> E .)
    R_STRUCT        reduce using rule 83 (RE -> E .)
    R_BREAK         reduce using rule 83 (RE -> E .)
    R_CONTINUE      reduce using rule 83 (RE -> E .)
    R_RETURN        reduce using rule 83 (RE -> E .)
    PTCOMA          reduce using rule 83 (RE -> E .)
    DOSPUNTOS       reduce using rule 83 (RE -> E .)
    PARDER          reduce using rule 83 (RE -> E .)
    COMA            reduce using rule 83 (RE -> E .)
    CORDER          reduce using rule 83 (RE -> E .)
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 51

    (58) E -> MENOS . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 120
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 52

    (60) E -> R_LOG10 . PARIZQ E PARDER

    PARIZQ          shift and go to state 122


state 53

    (61) E -> R_SIN . PARIZQ E PARDER

    PARIZQ          shift and go to state 123


state 54

    (62) E -> R_COS . PARIZQ E PARDER

    PARIZQ          shift and go to state 124


state 55

    (63) E -> R_TAN . PARIZQ E PARDER

    PARIZQ          shift and go to state 125


state 56

    (64) E -> R_SQRT . PARIZQ E PARDER

    PARIZQ          shift and go to state 126


state 57

    (65) E -> R_UPPERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 127


state 58

    (66) E -> R_LOWERCASE . PARIZQ E PARDER

    PARIZQ          shift and go to state 128


state 59

    (67) E -> R_LOG . PARIZQ E COMA E PARDER

    PARIZQ          shift and go to state 129


state 60

    (68) E -> DECIMAL .

    MAS             reduce using rule 68 (E -> DECIMAL .)
    MENOS           reduce using rule 68 (E -> DECIMAL .)
    POR             reduce using rule 68 (E -> DECIMAL .)
    DIVIDIDO        reduce using rule 68 (E -> DECIMAL .)
    MODAL           reduce using rule 68 (E -> DECIMAL .)
    POTENCIA        reduce using rule 68 (E -> DECIMAL .)
    MENQUE          reduce using rule 68 (E -> DECIMAL .)
    MAYQUE          reduce using rule 68 (E -> DECIMAL .)
    IGUALQUE        reduce using rule 68 (E -> DECIMAL .)
    NIGUALQUE       reduce using rule 68 (E -> DECIMAL .)
    MENORIGUAL      reduce using rule 68 (E -> DECIMAL .)
    MAYORIGUAL      reduce using rule 68 (E -> DECIMAL .)
    R_END           reduce using rule 68 (E -> DECIMAL .)
    R_ELSE          reduce using rule 68 (E -> DECIMAL .)
    AND             reduce using rule 68 (E -> DECIMAL .)
    OR              reduce using rule 68 (E -> DECIMAL .)
    R_ELSEIF        reduce using rule 68 (E -> DECIMAL .)
    R_IF            reduce using rule 68 (E -> DECIMAL .)
    R_FOR           reduce using rule 68 (E -> DECIMAL .)
    R_WHILE         reduce using rule 68 (E -> DECIMAL .)
    R_GLOBAL        reduce using rule 68 (E -> DECIMAL .)
    R_LOCAL         reduce using rule 68 (E -> DECIMAL .)
    ID              reduce using rule 68 (E -> DECIMAL .)
    R_PRINT         reduce using rule 68 (E -> DECIMAL .)
    R_PRINTLN       reduce using rule 68 (E -> DECIMAL .)
    R_PARSE         reduce using rule 68 (E -> DECIMAL .)
    R_TRUNC         reduce using rule 68 (E -> DECIMAL .)
    R_FLOAT         reduce using rule 68 (E -> DECIMAL .)
    R_STRING        reduce using rule 68 (E -> DECIMAL .)
    R_TYPEOF        reduce using rule 68 (E -> DECIMAL .)
    R_PUSH          reduce using rule 68 (E -> DECIMAL .)
    R_POP           reduce using rule 68 (E -> DECIMAL .)
    R_MUTABLE       reduce using rule 68 (E -> DECIMAL .)
    R_STRUCT        reduce using rule 68 (E -> DECIMAL .)
    R_BREAK         reduce using rule 68 (E -> DECIMAL .)
    R_CONTINUE      reduce using rule 68 (E -> DECIMAL .)
    R_RETURN        reduce using rule 68 (E -> DECIMAL .)
    PTCOMA          reduce using rule 68 (E -> DECIMAL .)
    DOSPUNTOS       reduce using rule 68 (E -> DECIMAL .)
    PARDER          reduce using rule 68 (E -> DECIMAL .)
    COMA            reduce using rule 68 (E -> DECIMAL .)
    CORDER          reduce using rule 68 (E -> DECIMAL .)
    DOSPUNTITOS     reduce using rule 68 (E -> DECIMAL .)


state 61

    (69) E -> ENTERO .

    MAS             reduce using rule 69 (E -> ENTERO .)
    MENOS           reduce using rule 69 (E -> ENTERO .)
    POR             reduce using rule 69 (E -> ENTERO .)
    DIVIDIDO        reduce using rule 69 (E -> ENTERO .)
    MODAL           reduce using rule 69 (E -> ENTERO .)
    POTENCIA        reduce using rule 69 (E -> ENTERO .)
    MENQUE          reduce using rule 69 (E -> ENTERO .)
    MAYQUE          reduce using rule 69 (E -> ENTERO .)
    IGUALQUE        reduce using rule 69 (E -> ENTERO .)
    NIGUALQUE       reduce using rule 69 (E -> ENTERO .)
    MENORIGUAL      reduce using rule 69 (E -> ENTERO .)
    MAYORIGUAL      reduce using rule 69 (E -> ENTERO .)
    R_END           reduce using rule 69 (E -> ENTERO .)
    R_ELSE          reduce using rule 69 (E -> ENTERO .)
    AND             reduce using rule 69 (E -> ENTERO .)
    OR              reduce using rule 69 (E -> ENTERO .)
    R_ELSEIF        reduce using rule 69 (E -> ENTERO .)
    R_IF            reduce using rule 69 (E -> ENTERO .)
    R_FOR           reduce using rule 69 (E -> ENTERO .)
    R_WHILE         reduce using rule 69 (E -> ENTERO .)
    R_GLOBAL        reduce using rule 69 (E -> ENTERO .)
    R_LOCAL         reduce using rule 69 (E -> ENTERO .)
    ID              reduce using rule 69 (E -> ENTERO .)
    R_PRINT         reduce using rule 69 (E -> ENTERO .)
    R_PRINTLN       reduce using rule 69 (E -> ENTERO .)
    R_PARSE         reduce using rule 69 (E -> ENTERO .)
    R_TRUNC         reduce using rule 69 (E -> ENTERO .)
    R_FLOAT         reduce using rule 69 (E -> ENTERO .)
    R_STRING        reduce using rule 69 (E -> ENTERO .)
    R_TYPEOF        reduce using rule 69 (E -> ENTERO .)
    R_PUSH          reduce using rule 69 (E -> ENTERO .)
    R_POP           reduce using rule 69 (E -> ENTERO .)
    R_MUTABLE       reduce using rule 69 (E -> ENTERO .)
    R_STRUCT        reduce using rule 69 (E -> ENTERO .)
    R_BREAK         reduce using rule 69 (E -> ENTERO .)
    R_CONTINUE      reduce using rule 69 (E -> ENTERO .)
    R_RETURN        reduce using rule 69 (E -> ENTERO .)
    PTCOMA          reduce using rule 69 (E -> ENTERO .)
    DOSPUNTOS       reduce using rule 69 (E -> ENTERO .)
    PARDER          reduce using rule 69 (E -> ENTERO .)
    COMA            reduce using rule 69 (E -> ENTERO .)
    CORDER          reduce using rule 69 (E -> ENTERO .)
    DOSPUNTITOS     reduce using rule 69 (E -> ENTERO .)


state 62

    (70) E -> R_TRUE .

    MAS             reduce using rule 70 (E -> R_TRUE .)
    MENOS           reduce using rule 70 (E -> R_TRUE .)
    POR             reduce using rule 70 (E -> R_TRUE .)
    DIVIDIDO        reduce using rule 70 (E -> R_TRUE .)
    MODAL           reduce using rule 70 (E -> R_TRUE .)
    POTENCIA        reduce using rule 70 (E -> R_TRUE .)
    MENQUE          reduce using rule 70 (E -> R_TRUE .)
    MAYQUE          reduce using rule 70 (E -> R_TRUE .)
    IGUALQUE        reduce using rule 70 (E -> R_TRUE .)
    NIGUALQUE       reduce using rule 70 (E -> R_TRUE .)
    MENORIGUAL      reduce using rule 70 (E -> R_TRUE .)
    MAYORIGUAL      reduce using rule 70 (E -> R_TRUE .)
    R_END           reduce using rule 70 (E -> R_TRUE .)
    R_ELSE          reduce using rule 70 (E -> R_TRUE .)
    AND             reduce using rule 70 (E -> R_TRUE .)
    OR              reduce using rule 70 (E -> R_TRUE .)
    R_ELSEIF        reduce using rule 70 (E -> R_TRUE .)
    R_IF            reduce using rule 70 (E -> R_TRUE .)
    R_FOR           reduce using rule 70 (E -> R_TRUE .)
    R_WHILE         reduce using rule 70 (E -> R_TRUE .)
    R_GLOBAL        reduce using rule 70 (E -> R_TRUE .)
    R_LOCAL         reduce using rule 70 (E -> R_TRUE .)
    ID              reduce using rule 70 (E -> R_TRUE .)
    R_PRINT         reduce using rule 70 (E -> R_TRUE .)
    R_PRINTLN       reduce using rule 70 (E -> R_TRUE .)
    R_PARSE         reduce using rule 70 (E -> R_TRUE .)
    R_TRUNC         reduce using rule 70 (E -> R_TRUE .)
    R_FLOAT         reduce using rule 70 (E -> R_TRUE .)
    R_STRING        reduce using rule 70 (E -> R_TRUE .)
    R_TYPEOF        reduce using rule 70 (E -> R_TRUE .)
    R_PUSH          reduce using rule 70 (E -> R_TRUE .)
    R_POP           reduce using rule 70 (E -> R_TRUE .)
    R_MUTABLE       reduce using rule 70 (E -> R_TRUE .)
    R_STRUCT        reduce using rule 70 (E -> R_TRUE .)
    R_BREAK         reduce using rule 70 (E -> R_TRUE .)
    R_CONTINUE      reduce using rule 70 (E -> R_TRUE .)
    R_RETURN        reduce using rule 70 (E -> R_TRUE .)
    PTCOMA          reduce using rule 70 (E -> R_TRUE .)
    DOSPUNTOS       reduce using rule 70 (E -> R_TRUE .)
    PARDER          reduce using rule 70 (E -> R_TRUE .)
    COMA            reduce using rule 70 (E -> R_TRUE .)
    CORDER          reduce using rule 70 (E -> R_TRUE .)
    DOSPUNTITOS     reduce using rule 70 (E -> R_TRUE .)


state 63

    (71) E -> R_FALSE .

    MAS             reduce using rule 71 (E -> R_FALSE .)
    MENOS           reduce using rule 71 (E -> R_FALSE .)
    POR             reduce using rule 71 (E -> R_FALSE .)
    DIVIDIDO        reduce using rule 71 (E -> R_FALSE .)
    MODAL           reduce using rule 71 (E -> R_FALSE .)
    POTENCIA        reduce using rule 71 (E -> R_FALSE .)
    MENQUE          reduce using rule 71 (E -> R_FALSE .)
    MAYQUE          reduce using rule 71 (E -> R_FALSE .)
    IGUALQUE        reduce using rule 71 (E -> R_FALSE .)
    NIGUALQUE       reduce using rule 71 (E -> R_FALSE .)
    MENORIGUAL      reduce using rule 71 (E -> R_FALSE .)
    MAYORIGUAL      reduce using rule 71 (E -> R_FALSE .)
    R_END           reduce using rule 71 (E -> R_FALSE .)
    R_ELSE          reduce using rule 71 (E -> R_FALSE .)
    AND             reduce using rule 71 (E -> R_FALSE .)
    OR              reduce using rule 71 (E -> R_FALSE .)
    R_ELSEIF        reduce using rule 71 (E -> R_FALSE .)
    R_IF            reduce using rule 71 (E -> R_FALSE .)
    R_FOR           reduce using rule 71 (E -> R_FALSE .)
    R_WHILE         reduce using rule 71 (E -> R_FALSE .)
    R_GLOBAL        reduce using rule 71 (E -> R_FALSE .)
    R_LOCAL         reduce using rule 71 (E -> R_FALSE .)
    ID              reduce using rule 71 (E -> R_FALSE .)
    R_PRINT         reduce using rule 71 (E -> R_FALSE .)
    R_PRINTLN       reduce using rule 71 (E -> R_FALSE .)
    R_PARSE         reduce using rule 71 (E -> R_FALSE .)
    R_TRUNC         reduce using rule 71 (E -> R_FALSE .)
    R_FLOAT         reduce using rule 71 (E -> R_FALSE .)
    R_STRING        reduce using rule 71 (E -> R_FALSE .)
    R_TYPEOF        reduce using rule 71 (E -> R_FALSE .)
    R_PUSH          reduce using rule 71 (E -> R_FALSE .)
    R_POP           reduce using rule 71 (E -> R_FALSE .)
    R_MUTABLE       reduce using rule 71 (E -> R_FALSE .)
    R_STRUCT        reduce using rule 71 (E -> R_FALSE .)
    R_BREAK         reduce using rule 71 (E -> R_FALSE .)
    R_CONTINUE      reduce using rule 71 (E -> R_FALSE .)
    R_RETURN        reduce using rule 71 (E -> R_FALSE .)
    PTCOMA          reduce using rule 71 (E -> R_FALSE .)
    DOSPUNTOS       reduce using rule 71 (E -> R_FALSE .)
    PARDER          reduce using rule 71 (E -> R_FALSE .)
    COMA            reduce using rule 71 (E -> R_FALSE .)
    CORDER          reduce using rule 71 (E -> R_FALSE .)
    DOSPUNTITOS     reduce using rule 71 (E -> R_FALSE .)


state 64

    (72) E -> CADENA .

    MAS             reduce using rule 72 (E -> CADENA .)
    MENOS           reduce using rule 72 (E -> CADENA .)
    POR             reduce using rule 72 (E -> CADENA .)
    DIVIDIDO        reduce using rule 72 (E -> CADENA .)
    MODAL           reduce using rule 72 (E -> CADENA .)
    POTENCIA        reduce using rule 72 (E -> CADENA .)
    MENQUE          reduce using rule 72 (E -> CADENA .)
    MAYQUE          reduce using rule 72 (E -> CADENA .)
    IGUALQUE        reduce using rule 72 (E -> CADENA .)
    NIGUALQUE       reduce using rule 72 (E -> CADENA .)
    MENORIGUAL      reduce using rule 72 (E -> CADENA .)
    MAYORIGUAL      reduce using rule 72 (E -> CADENA .)
    R_END           reduce using rule 72 (E -> CADENA .)
    R_ELSE          reduce using rule 72 (E -> CADENA .)
    AND             reduce using rule 72 (E -> CADENA .)
    OR              reduce using rule 72 (E -> CADENA .)
    R_ELSEIF        reduce using rule 72 (E -> CADENA .)
    R_IF            reduce using rule 72 (E -> CADENA .)
    R_FOR           reduce using rule 72 (E -> CADENA .)
    R_WHILE         reduce using rule 72 (E -> CADENA .)
    R_GLOBAL        reduce using rule 72 (E -> CADENA .)
    R_LOCAL         reduce using rule 72 (E -> CADENA .)
    ID              reduce using rule 72 (E -> CADENA .)
    R_PRINT         reduce using rule 72 (E -> CADENA .)
    R_PRINTLN       reduce using rule 72 (E -> CADENA .)
    R_PARSE         reduce using rule 72 (E -> CADENA .)
    R_TRUNC         reduce using rule 72 (E -> CADENA .)
    R_FLOAT         reduce using rule 72 (E -> CADENA .)
    R_STRING        reduce using rule 72 (E -> CADENA .)
    R_TYPEOF        reduce using rule 72 (E -> CADENA .)
    R_PUSH          reduce using rule 72 (E -> CADENA .)
    R_POP           reduce using rule 72 (E -> CADENA .)
    R_MUTABLE       reduce using rule 72 (E -> CADENA .)
    R_STRUCT        reduce using rule 72 (E -> CADENA .)
    R_BREAK         reduce using rule 72 (E -> CADENA .)
    R_CONTINUE      reduce using rule 72 (E -> CADENA .)
    R_RETURN        reduce using rule 72 (E -> CADENA .)
    PTCOMA          reduce using rule 72 (E -> CADENA .)
    DOSPUNTOS       reduce using rule 72 (E -> CADENA .)
    PARDER          reduce using rule 72 (E -> CADENA .)
    COMA            reduce using rule 72 (E -> CADENA .)
    CORDER          reduce using rule 72 (E -> CADENA .)
    DOSPUNTITOS     reduce using rule 72 (E -> CADENA .)


state 65

    (73) E -> ID .
    (97) NATIVAS -> ID . PUNTO R_LENGTH
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER

    MAS             reduce using rule 73 (E -> ID .)
    MENOS           reduce using rule 73 (E -> ID .)
    POR             reduce using rule 73 (E -> ID .)
    DIVIDIDO        reduce using rule 73 (E -> ID .)
    MODAL           reduce using rule 73 (E -> ID .)
    POTENCIA        reduce using rule 73 (E -> ID .)
    MENQUE          reduce using rule 73 (E -> ID .)
    MAYQUE          reduce using rule 73 (E -> ID .)
    IGUALQUE        reduce using rule 73 (E -> ID .)
    NIGUALQUE       reduce using rule 73 (E -> ID .)
    MENORIGUAL      reduce using rule 73 (E -> ID .)
    MAYORIGUAL      reduce using rule 73 (E -> ID .)
    R_END           reduce using rule 73 (E -> ID .)
    R_ELSE          reduce using rule 73 (E -> ID .)
    AND             reduce using rule 73 (E -> ID .)
    OR              reduce using rule 73 (E -> ID .)
    R_ELSEIF        reduce using rule 73 (E -> ID .)
    R_IF            reduce using rule 73 (E -> ID .)
    R_FOR           reduce using rule 73 (E -> ID .)
    R_WHILE         reduce using rule 73 (E -> ID .)
    R_GLOBAL        reduce using rule 73 (E -> ID .)
    R_LOCAL         reduce using rule 73 (E -> ID .)
    ID              reduce using rule 73 (E -> ID .)
    R_PRINT         reduce using rule 73 (E -> ID .)
    R_PRINTLN       reduce using rule 73 (E -> ID .)
    R_PARSE         reduce using rule 73 (E -> ID .)
    R_TRUNC         reduce using rule 73 (E -> ID .)
    R_FLOAT         reduce using rule 73 (E -> ID .)
    R_STRING        reduce using rule 73 (E -> ID .)
    R_TYPEOF        reduce using rule 73 (E -> ID .)
    R_PUSH          reduce using rule 73 (E -> ID .)
    R_POP           reduce using rule 73 (E -> ID .)
    R_MUTABLE       reduce using rule 73 (E -> ID .)
    R_STRUCT        reduce using rule 73 (E -> ID .)
    R_BREAK         reduce using rule 73 (E -> ID .)
    R_CONTINUE      reduce using rule 73 (E -> ID .)
    R_RETURN        reduce using rule 73 (E -> ID .)
    PTCOMA          reduce using rule 73 (E -> ID .)
    DOSPUNTOS       reduce using rule 73 (E -> ID .)
    PARDER          reduce using rule 73 (E -> ID .)
    COMA            reduce using rule 73 (E -> ID .)
    CORDER          reduce using rule 73 (E -> ID .)
    DOSPUNTITOS     reduce using rule 73 (E -> ID .)
    PUNTO           shift and go to state 43
    PARIZQ          shift and go to state 42


state 66

    (74) E -> NATIVAS .

    MAS             reduce using rule 74 (E -> NATIVAS .)
    MENOS           reduce using rule 74 (E -> NATIVAS .)
    POR             reduce using rule 74 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 74 (E -> NATIVAS .)
    MODAL           reduce using rule 74 (E -> NATIVAS .)
    POTENCIA        reduce using rule 74 (E -> NATIVAS .)
    MENQUE          reduce using rule 74 (E -> NATIVAS .)
    MAYQUE          reduce using rule 74 (E -> NATIVAS .)
    IGUALQUE        reduce using rule 74 (E -> NATIVAS .)
    NIGUALQUE       reduce using rule 74 (E -> NATIVAS .)
    MENORIGUAL      reduce using rule 74 (E -> NATIVAS .)
    MAYORIGUAL      reduce using rule 74 (E -> NATIVAS .)
    R_END           reduce using rule 74 (E -> NATIVAS .)
    R_ELSE          reduce using rule 74 (E -> NATIVAS .)
    AND             reduce using rule 74 (E -> NATIVAS .)
    OR              reduce using rule 74 (E -> NATIVAS .)
    R_ELSEIF        reduce using rule 74 (E -> NATIVAS .)
    R_IF            reduce using rule 74 (E -> NATIVAS .)
    R_FOR           reduce using rule 74 (E -> NATIVAS .)
    R_WHILE         reduce using rule 74 (E -> NATIVAS .)
    R_GLOBAL        reduce using rule 74 (E -> NATIVAS .)
    R_LOCAL         reduce using rule 74 (E -> NATIVAS .)
    ID              reduce using rule 74 (E -> NATIVAS .)
    R_PRINT         reduce using rule 74 (E -> NATIVAS .)
    R_PRINTLN       reduce using rule 74 (E -> NATIVAS .)
    R_PARSE         reduce using rule 74 (E -> NATIVAS .)
    R_TRUNC         reduce using rule 74 (E -> NATIVAS .)
    R_FLOAT         reduce using rule 74 (E -> NATIVAS .)
    R_STRING        reduce using rule 74 (E -> NATIVAS .)
    R_TYPEOF        reduce using rule 74 (E -> NATIVAS .)
    R_PUSH          reduce using rule 74 (E -> NATIVAS .)
    R_POP           reduce using rule 74 (E -> NATIVAS .)
    R_MUTABLE       reduce using rule 74 (E -> NATIVAS .)
    R_STRUCT        reduce using rule 74 (E -> NATIVAS .)
    R_BREAK         reduce using rule 74 (E -> NATIVAS .)
    R_CONTINUE      reduce using rule 74 (E -> NATIVAS .)
    R_RETURN        reduce using rule 74 (E -> NATIVAS .)
    PTCOMA          reduce using rule 74 (E -> NATIVAS .)
    DOSPUNTOS       reduce using rule 74 (E -> NATIVAS .)
    PARDER          reduce using rule 74 (E -> NATIVAS .)
    COMA            reduce using rule 74 (E -> NATIVAS .)
    CORDER          reduce using rule 74 (E -> NATIVAS .)
    DOSPUNTITOS     reduce using rule 74 (E -> NATIVAS .)


state 67

    (75) E -> LLAMADAS .

    MAS             reduce using rule 75 (E -> LLAMADAS .)
    MENOS           reduce using rule 75 (E -> LLAMADAS .)
    POR             reduce using rule 75 (E -> LLAMADAS .)
    DIVIDIDO        reduce using rule 75 (E -> LLAMADAS .)
    MODAL           reduce using rule 75 (E -> LLAMADAS .)
    POTENCIA        reduce using rule 75 (E -> LLAMADAS .)
    MENQUE          reduce using rule 75 (E -> LLAMADAS .)
    MAYQUE          reduce using rule 75 (E -> LLAMADAS .)
    IGUALQUE        reduce using rule 75 (E -> LLAMADAS .)
    NIGUALQUE       reduce using rule 75 (E -> LLAMADAS .)
    MENORIGUAL      reduce using rule 75 (E -> LLAMADAS .)
    MAYORIGUAL      reduce using rule 75 (E -> LLAMADAS .)
    R_END           reduce using rule 75 (E -> LLAMADAS .)
    R_ELSE          reduce using rule 75 (E -> LLAMADAS .)
    AND             reduce using rule 75 (E -> LLAMADAS .)
    OR              reduce using rule 75 (E -> LLAMADAS .)
    R_ELSEIF        reduce using rule 75 (E -> LLAMADAS .)
    R_IF            reduce using rule 75 (E -> LLAMADAS .)
    R_FOR           reduce using rule 75 (E -> LLAMADAS .)
    R_WHILE         reduce using rule 75 (E -> LLAMADAS .)
    R_GLOBAL        reduce using rule 75 (E -> LLAMADAS .)
    R_LOCAL         reduce using rule 75 (E -> LLAMADAS .)
    ID              reduce using rule 75 (E -> LLAMADAS .)
    R_PRINT         reduce using rule 75 (E -> LLAMADAS .)
    R_PRINTLN       reduce using rule 75 (E -> LLAMADAS .)
    R_PARSE         reduce using rule 75 (E -> LLAMADAS .)
    R_TRUNC         reduce using rule 75 (E -> LLAMADAS .)
    R_FLOAT         reduce using rule 75 (E -> LLAMADAS .)
    R_STRING        reduce using rule 75 (E -> LLAMADAS .)
    R_TYPEOF        reduce using rule 75 (E -> LLAMADAS .)
    R_PUSH          reduce using rule 75 (E -> LLAMADAS .)
    R_POP           reduce using rule 75 (E -> LLAMADAS .)
    R_MUTABLE       reduce using rule 75 (E -> LLAMADAS .)
    R_STRUCT        reduce using rule 75 (E -> LLAMADAS .)
    R_BREAK         reduce using rule 75 (E -> LLAMADAS .)
    R_CONTINUE      reduce using rule 75 (E -> LLAMADAS .)
    R_RETURN        reduce using rule 75 (E -> LLAMADAS .)
    PTCOMA          reduce using rule 75 (E -> LLAMADAS .)
    DOSPUNTOS       reduce using rule 75 (E -> LLAMADAS .)
    PARDER          reduce using rule 75 (E -> LLAMADAS .)
    COMA            reduce using rule 75 (E -> LLAMADAS .)
    CORDER          reduce using rule 75 (E -> LLAMADAS .)
    DOSPUNTITOS     reduce using rule 75 (E -> LLAMADAS .)


state 68

    (138) FORS -> R_FOR ID . R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> R_FOR ID . R_IN RANGO R_END PTCOMA

    R_IN            shift and go to state 130


state 69

    (136) WHILES -> R_WHILE LO . INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> R_WHILE LO . R_END PTCOMA
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO
    (124) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (125) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (126) INSTRUCCION_LOOP -> . IFS
    (127) INSTRUCCION_LOOP -> . FORS
    (128) INSTRUCCION_LOOP -> . WHILES
    (129) INSTRUCCION_LOOP -> . ASIGNACION
    (130) INSTRUCCION_LOOP -> . I
    (131) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (132) INSTRUCCION_LOOP -> . NATIVAS
    (133) INSTRUCCION_LOOP -> . STRUCTS
    (134) INSTRUCCION_LOOP -> . BREAK
    (135) INSTRUCCION_LOOP -> . CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 132
    AND             shift and go to state 101
    OR              shift and go to state 102
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36

    INSTRUCCIONES_LOOP             shift and go to state 131
    INSTRUCCION_LOOP               shift and go to state 133
    IFS                            shift and go to state 134
    FORS                           shift and go to state 135
    WHILES                         shift and go to state 136
    ASIGNACION                     shift and go to state 137
    I                              shift and go to state 138
    LLAMADAS                       shift and go to state 139
    NATIVAS                        shift and go to state 140
    STRUCTS                        shift and go to state 141
    BREAK                          shift and go to state 142
    CONTINUE                       shift and go to state 143

state 70

    (35) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL ID . IGUAL LISTA PTCOMA
    (41) ASIGNACION -> R_GLOBAL ID . PTCOMA

    IGUAL           shift and go to state 144
    PTCOMA          shift and go to state 145


state 71

    (36) ASIGNACION -> R_LOCAL ID . IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL ID . IGUAL LISTA PTCOMA
    (42) ASIGNACION -> R_LOCAL ID . PTCOMA

    IGUAL           shift and go to state 146
    PTCOMA          shift and go to state 147


state 72

    (18) I -> R_PRINT PARIZQ . IMPRESIONES PARDER PTCOMA
    (20) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (21) IMPRESIONES -> . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 152
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    IMPRESIONES                    shift and go to state 148
    IMPRESION                      shift and go to state 149
    ARREGLOS                       shift and go to state 150
    LO                             shift and go to state 151
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    RE                             shift and go to state 49
    LLAMADAS                       shift and go to state 67

state 73

    (19) I -> R_PRINTLN PARIZQ . IMPRESIONES PARDER PTCOMA
    (20) IMPRESIONES -> . IMPRESIONES COMA IMPRESION
    (21) IMPRESIONES -> . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 152
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    IMPRESIONES                    shift and go to state 153
    IMPRESION                      shift and go to state 149
    ARREGLOS                       shift and go to state 150
    LO                             shift and go to state 151
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    RE                             shift and go to state 49
    LLAMADAS                       shift and go to state 67

state 74

    (89) NATIVAS -> R_PARSE PARIZQ . TIPO COMA LISTA PARDER
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 158
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160

    TIPO                           shift and go to state 154

state 75

    (90) NATIVAS -> R_TRUNC PARIZQ . TIPO COMA LISTA PARDER
    (94) NATIVAS -> R_TRUNC PARIZQ . LISTA PARDER
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 163
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    TIPO                           shift and go to state 161
    LISTA                          shift and go to state 162
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 76

    (91) NATIVAS -> R_FLOAT PARIZQ . LISTA PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 164
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 77

    (92) NATIVAS -> R_STRING PARIZQ . LISTA PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 165
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 78

    (93) NATIVAS -> R_TYPEOF PARIZQ . LISTA PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 166
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 79

    (95) NATIVAS -> R_PUSH DIFERENTE . PARIZQ ID COMA E PARDER

    PARIZQ          shift and go to state 167


state 80

    (96) NATIVAS -> R_POP DIFERENTE . PARIZQ ID PARDER

    PARIZQ          shift and go to state 168


state 81

    (144) STRUCTS -> R_MUTABLE R_STRUCT . ID ELEMENTOS R_END PTCOMA
    (146) STRUCTS -> R_MUTABLE R_STRUCT . ID R_END PTCOMA

    ID              shift and go to state 169


state 82

    (145) STRUCTS -> R_STRUCT ID . ELEMENTOS PTCOMA
    (147) STRUCTS -> R_STRUCT ID . R_END PTCOMA
    (148) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (149) ELEMENTOS -> . ELEMENTO
    (150) ELEMENTO -> . ID
    (151) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 172
    ID              shift and go to state 170

    ELEMENTOS                      shift and go to state 171
    ELEMENTO                       shift and go to state 173

state 83

    (43) BREAK -> R_BREAK PTCOMA .

    R_IF            reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_FOR           reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_WHILE         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_GLOBAL        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_LOCAL         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    ID              reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_PRINT         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_PRINTLN       reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_PARSE         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_TRUNC         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_FLOAT         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_STRING        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_TYPEOF        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_PUSH          reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_POP           reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_MUTABLE       reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_STRUCT        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_BREAK         reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_CONTINUE      reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_RETURN        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_FUNCTION      reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    $end            reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_END           reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_ELSE          reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)
    R_ELSEIF        reduce using rule 43 (BREAK -> R_BREAK PTCOMA .)


state 84

    (123) CONTINUE -> R_CONTINUE PTCOMA .

    R_IF            reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FOR           reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_WHILE         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_GLOBAL        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_LOCAL         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    ID              reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINT         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PRINTLN       reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PARSE         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TRUNC         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FLOAT         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRING        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_TYPEOF        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_PUSH          reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_POP           reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_MUTABLE       reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_STRUCT        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_BREAK         reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_CONTINUE      reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_RETURN        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_FUNCTION      reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    $end            reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_END           reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSE          reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)
    R_ELSEIF        reduce using rule 123 (CONTINUE -> R_CONTINUE PTCOMA .)


state 85

    (98) RETURN -> R_RETURN LISTA . PTCOMA

    PTCOMA          shift and go to state 174


state 86

    (99) RETURN -> R_RETURN PTCOMA .

    R_IF            reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_FOR           reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_WHILE         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_GLOBAL        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_LOCAL         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    ID              reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_PRINT         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_PRINTLN       reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_PARSE         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_TRUNC         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_FLOAT         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_STRING        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_TYPEOF        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_PUSH          reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_POP           reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_MUTABLE       reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_STRUCT        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_BREAK         reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_CONTINUE      reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_RETURN        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_FUNCTION      reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    $end            reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_END           reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_ELSE          reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)
    R_ELSEIF        reduce using rule 99 (RETURN -> R_RETURN PTCOMA .)


state 87

    (33) LISTA -> ARREGLOS .

    PTCOMA          reduce using rule 33 (LISTA -> ARREGLOS .)
    DOSPUNTOS       reduce using rule 33 (LISTA -> ARREGLOS .)
    PARDER          reduce using rule 33 (LISTA -> ARREGLOS .)
    COMA            reduce using rule 33 (LISTA -> ARREGLOS .)
    CORDER          reduce using rule 33 (LISTA -> ARREGLOS .)


state 88

    (34) LISTA -> LO .
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    PTCOMA          reduce using rule 34 (LISTA -> LO .)
    DOSPUNTOS       reduce using rule 34 (LISTA -> LO .)
    PARDER          reduce using rule 34 (LISTA -> LO .)
    COMA            reduce using rule 34 (LISTA -> LO .)
    CORDER          reduce using rule 34 (LISTA -> LO .)
    AND             shift and go to state 101
    OR              shift and go to state 102


state 89

    (27) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (73) E -> ID .
    (97) NATIVAS -> ID . PUNTO R_LENGTH
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER

    CORIZQ          shift and go to state 175
    MAS             reduce using rule 73 (E -> ID .)
    MENOS           reduce using rule 73 (E -> ID .)
    POR             reduce using rule 73 (E -> ID .)
    DIVIDIDO        reduce using rule 73 (E -> ID .)
    MODAL           reduce using rule 73 (E -> ID .)
    POTENCIA        reduce using rule 73 (E -> ID .)
    MENQUE          reduce using rule 73 (E -> ID .)
    MAYQUE          reduce using rule 73 (E -> ID .)
    IGUALQUE        reduce using rule 73 (E -> ID .)
    NIGUALQUE       reduce using rule 73 (E -> ID .)
    MENORIGUAL      reduce using rule 73 (E -> ID .)
    MAYORIGUAL      reduce using rule 73 (E -> ID .)
    AND             reduce using rule 73 (E -> ID .)
    OR              reduce using rule 73 (E -> ID .)
    PTCOMA          reduce using rule 73 (E -> ID .)
    DOSPUNTOS       reduce using rule 73 (E -> ID .)
    PARDER          reduce using rule 73 (E -> ID .)
    COMA            reduce using rule 73 (E -> ID .)
    CORDER          reduce using rule 73 (E -> ID .)
    PUNTO           shift and go to state 43
    PARIZQ          shift and go to state 42


state 90

    (28) ARREGLOS -> CORIZQ . LISTAS CORDER
    (30) ARREGLOS -> CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTAS                         shift and go to state 176
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 91

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ . PARAMETROS PARDER R_END PTCOMA
    (102) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION ID PARIZQ . PARDER R_END PTCOMA
    (104) PARAMETROS -> . PARAMETROS COMA PARAMETRO
    (105) PARAMETROS -> . PARAMETRO
    (106) PARAMETRO -> . ID

    PARDER          shift and go to state 179
    ID              shift and go to state 177

    PARAMETROS                     shift and go to state 178
    PARAMETRO                      shift and go to state 180

state 92

    (37) ASIGNACION -> ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (40) ASIGNACION -> ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 181
    PTCOMA          shift and go to state 182


state 93

    (50) LLAMADAS -> ID PARIZQ LISTAS . PARDER
    (31) LISTAS -> LISTAS . COMA LISTA

    PARDER          shift and go to state 183
    COMA            shift and go to state 184


state 94

    (51) LLAMADAS -> ID PARIZQ PARDER .

    PTCOMA          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MAS             reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    POR             reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    DIVIDIDO        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MODAL           reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MENQUE          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYQUE          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    IGUALQUE        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    NIGUALQUE       reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MENORIGUAL      reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    MAYORIGUAL      reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_END           reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSE          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    AND             reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    OR              reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_ELSEIF        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_IF            reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FOR           reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_WHILE         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_GLOBAL        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_LOCAL         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    ID              reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINT         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PRINTLN       reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PARSE         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TRUNC         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_FLOAT         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_STRING        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_TYPEOF        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_PUSH          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_POP           reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_MUTABLE       reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_STRUCT        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_BREAK         reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_CONTINUE      reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    R_RETURN        reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTOS       reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    COMA            reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)
    DOSPUNTITOS     reduce using rule 51 (LLAMADAS -> ID PARIZQ PARDER .)


state 95

    (32) LISTAS -> LISTA .

    PARDER          reduce using rule 32 (LISTAS -> LISTA .)
    COMA            reduce using rule 32 (LISTAS -> LISTA .)
    CORDER          reduce using rule 32 (LISTAS -> LISTA .)


state 96

    (97) NATIVAS -> ID PUNTO R_LENGTH .

    PTCOMA          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MAS             reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MENOS           reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    POR             reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    DIVIDIDO        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MODAL           reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    POTENCIA        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MENQUE          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MAYQUE          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    IGUALQUE        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    NIGUALQUE       reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MENORIGUAL      reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    MAYORIGUAL      reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_END           reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_ELSE          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    AND             reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    OR              reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_ELSEIF        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_IF            reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FOR           reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_WHILE         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_GLOBAL        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_LOCAL         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    ID              reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINT         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PRINTLN       reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PARSE         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TRUNC         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_FLOAT         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRING        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_TYPEOF        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_PUSH          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_POP           reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_MUTABLE       reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_STRUCT        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_BREAK         reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_CONTINUE      reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    R_RETURN        reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    DOSPUNTOS       reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    PARDER          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    COMA            reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    CORDER          reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)
    DOSPUNTITOS     reduce using rule 97 (NATIVAS -> ID PUNTO R_LENGTH .)


state 97

    (107) IFS -> R_IF LO INSTRUCCIONES . R_END PTCOMA
    (108) IFS -> R_IF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> R_IF LO INSTRUCCIONES . ELSEIF
    (113) IFS -> R_IF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 185
    R_ELSE          shift and go to state 186
    R_ELSEIF        shift and go to state 103
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    ELSEIF                         shift and go to state 187
    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 98

    (110) IFS -> R_IF LO R_END . PTCOMA

    PTCOMA          shift and go to state 188


state 99

    (111) IFS -> R_IF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (114) IFS -> R_IF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 190
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 189
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 100

    (112) IFS -> R_IF LO ELSEIF .

    R_IF            reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FOR           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_WHILE         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_GLOBAL        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_LOCAL         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    ID              reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PRINT         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PRINTLN       reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PARSE         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_TRUNC         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FLOAT         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_STRING        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_TYPEOF        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_PUSH          reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_POP           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_MUTABLE       reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_STRUCT        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_BREAK         reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_CONTINUE      reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_RETURN        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_FUNCTION      reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    $end            reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_END           reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_ELSE          reduce using rule 112 (IFS -> R_IF LO ELSEIF .)
    R_ELSEIF        reduce using rule 112 (IFS -> R_IF LO ELSEIF .)


state 101

    (84) LO -> LO AND . LO
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 191
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 102

    (85) LO -> LO OR . LO
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 192
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 103

    (115) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> R_ELSEIF . LO R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF . LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF . LO ELSEIF
    (121) ELSEIF -> R_ELSEIF . LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF . LO R_ELSE R_END PTCOMA
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LO                             shift and go to state 193
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 104

    (86) LO -> DIFERENTE LO .
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    R_END           reduce using rule 86 (LO -> DIFERENTE LO .)
    R_ELSE          reduce using rule 86 (LO -> DIFERENTE LO .)
    AND             reduce using rule 86 (LO -> DIFERENTE LO .)
    OR              reduce using rule 86 (LO -> DIFERENTE LO .)
    R_ELSEIF        reduce using rule 86 (LO -> DIFERENTE LO .)
    R_IF            reduce using rule 86 (LO -> DIFERENTE LO .)
    R_FOR           reduce using rule 86 (LO -> DIFERENTE LO .)
    R_WHILE         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_GLOBAL        reduce using rule 86 (LO -> DIFERENTE LO .)
    R_LOCAL         reduce using rule 86 (LO -> DIFERENTE LO .)
    ID              reduce using rule 86 (LO -> DIFERENTE LO .)
    R_PRINT         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_PRINTLN       reduce using rule 86 (LO -> DIFERENTE LO .)
    R_PARSE         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_TRUNC         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_FLOAT         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_STRING        reduce using rule 86 (LO -> DIFERENTE LO .)
    R_TYPEOF        reduce using rule 86 (LO -> DIFERENTE LO .)
    R_PUSH          reduce using rule 86 (LO -> DIFERENTE LO .)
    R_POP           reduce using rule 86 (LO -> DIFERENTE LO .)
    R_MUTABLE       reduce using rule 86 (LO -> DIFERENTE LO .)
    R_STRUCT        reduce using rule 86 (LO -> DIFERENTE LO .)
    R_BREAK         reduce using rule 86 (LO -> DIFERENTE LO .)
    R_CONTINUE      reduce using rule 86 (LO -> DIFERENTE LO .)
    R_RETURN        reduce using rule 86 (LO -> DIFERENTE LO .)
    PTCOMA          reduce using rule 86 (LO -> DIFERENTE LO .)
    DOSPUNTOS       reduce using rule 86 (LO -> DIFERENTE LO .)
    PARDER          reduce using rule 86 (LO -> DIFERENTE LO .)
    COMA            reduce using rule 86 (LO -> DIFERENTE LO .)
    CORDER          reduce using rule 86 (LO -> DIFERENTE LO .)

  ! AND             [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]


state 105

    (87) LO -> PARIZQ LO . PARDER
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    PARDER          shift and go to state 194
    AND             shift and go to state 101
    OR              shift and go to state 102


state 106

    (82) RE -> PARIZQ RE . PARDER
    (88) LO -> RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 195
    AND             reduce using rule 88 (LO -> RE .)
    OR              reduce using rule 88 (LO -> RE .)
    MENQUE          shift and go to state 108
    MAYQUE          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NIGUALQUE       shift and go to state 111
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113

  ! PARDER          [ reduce using rule 88 (LO -> RE .) ]


state 107

    (59) E -> PARIZQ E . PARDER
    (83) RE -> E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 196
    MENQUE          reduce using rule 83 (RE -> E .)
    MAYQUE          reduce using rule 83 (RE -> E .)
    IGUALQUE        reduce using rule 83 (RE -> E .)
    NIGUALQUE       reduce using rule 83 (RE -> E .)
    MENORIGUAL      reduce using rule 83 (RE -> E .)
    MAYORIGUAL      reduce using rule 83 (RE -> E .)
    AND             reduce using rule 83 (RE -> E .)
    OR              reduce using rule 83 (RE -> E .)
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119

  ! PARDER          [ reduce using rule 83 (RE -> E .) ]


state 108

    (76) RE -> RE MENQUE . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 197
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 109

    (77) RE -> RE MAYQUE . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 199
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 110

    (78) RE -> RE IGUALQUE . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 200
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 111

    (79) RE -> RE NIGUALQUE . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 201
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 112

    (80) RE -> RE MENORIGUAL . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 202
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 113

    (81) RE -> RE MAYORIGUAL . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 203
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 114

    (52) E -> E MAS . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 204
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 115

    (53) E -> E MENOS . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 205
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 116

    (54) E -> E POR . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 206
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 117

    (55) E -> E DIVIDIDO . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 207
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 118

    (56) E -> E MODAL . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 208
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 119

    (57) E -> E POTENCIA . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 209
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 120

    (58) E -> MENOS E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 58 (E -> MENOS E .)
    MENOS           reduce using rule 58 (E -> MENOS E .)
    POR             reduce using rule 58 (E -> MENOS E .)
    DIVIDIDO        reduce using rule 58 (E -> MENOS E .)
    MODAL           reduce using rule 58 (E -> MENOS E .)
    POTENCIA        reduce using rule 58 (E -> MENOS E .)
    MENQUE          reduce using rule 58 (E -> MENOS E .)
    MAYQUE          reduce using rule 58 (E -> MENOS E .)
    IGUALQUE        reduce using rule 58 (E -> MENOS E .)
    NIGUALQUE       reduce using rule 58 (E -> MENOS E .)
    MENORIGUAL      reduce using rule 58 (E -> MENOS E .)
    MAYORIGUAL      reduce using rule 58 (E -> MENOS E .)
    R_END           reduce using rule 58 (E -> MENOS E .)
    R_ELSE          reduce using rule 58 (E -> MENOS E .)
    AND             reduce using rule 58 (E -> MENOS E .)
    OR              reduce using rule 58 (E -> MENOS E .)
    R_ELSEIF        reduce using rule 58 (E -> MENOS E .)
    R_IF            reduce using rule 58 (E -> MENOS E .)
    R_FOR           reduce using rule 58 (E -> MENOS E .)
    R_WHILE         reduce using rule 58 (E -> MENOS E .)
    R_GLOBAL        reduce using rule 58 (E -> MENOS E .)
    R_LOCAL         reduce using rule 58 (E -> MENOS E .)
    ID              reduce using rule 58 (E -> MENOS E .)
    R_PRINT         reduce using rule 58 (E -> MENOS E .)
    R_PRINTLN       reduce using rule 58 (E -> MENOS E .)
    R_PARSE         reduce using rule 58 (E -> MENOS E .)
    R_TRUNC         reduce using rule 58 (E -> MENOS E .)
    R_FLOAT         reduce using rule 58 (E -> MENOS E .)
    R_STRING        reduce using rule 58 (E -> MENOS E .)
    R_TYPEOF        reduce using rule 58 (E -> MENOS E .)
    R_PUSH          reduce using rule 58 (E -> MENOS E .)
    R_POP           reduce using rule 58 (E -> MENOS E .)
    R_MUTABLE       reduce using rule 58 (E -> MENOS E .)
    R_STRUCT        reduce using rule 58 (E -> MENOS E .)
    R_BREAK         reduce using rule 58 (E -> MENOS E .)
    R_CONTINUE      reduce using rule 58 (E -> MENOS E .)
    R_RETURN        reduce using rule 58 (E -> MENOS E .)
    PTCOMA          reduce using rule 58 (E -> MENOS E .)
    DOSPUNTOS       reduce using rule 58 (E -> MENOS E .)
    PARDER          reduce using rule 58 (E -> MENOS E .)
    COMA            reduce using rule 58 (E -> MENOS E .)
    CORDER          reduce using rule 58 (E -> MENOS E .)
    DOSPUNTITOS     reduce using rule 58 (E -> MENOS E .)

  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]
  ! POR             [ shift and go to state 116 ]
  ! DIVIDIDO        [ shift and go to state 117 ]
  ! MODAL           [ shift and go to state 118 ]
  ! POTENCIA        [ shift and go to state 119 ]


state 121

    (59) E -> PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 210
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 122

    (60) E -> R_LOG10 PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 211
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 123

    (61) E -> R_SIN PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 212
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 124

    (62) E -> R_COS PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 213
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 125

    (63) E -> R_TAN PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 214
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 126

    (64) E -> R_SQRT PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 215
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 127

    (65) E -> R_UPPERCASE PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 216
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 128

    (66) E -> R_LOWERCASE PARIZQ . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 217
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 129

    (67) E -> R_LOG PARIZQ . E COMA E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 218
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 130

    (138) FORS -> R_FOR ID R_IN . RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> R_FOR ID R_IN . RANGO R_END PTCOMA
    (140) RANGO -> . E DOSPUNTITOS E
    (141) RANGO -> . E
    (142) RANGO -> . ARREGLOS
    (143) RANGO -> . ID CORIZQ E DOSPUNTOS E CORDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 219
    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    CORIZQ          shift and go to state 90
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RANGO                          shift and go to state 220
    E                              shift and go to state 221
    ARREGLOS                       shift and go to state 222
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 131

    (136) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP . R_END PTCOMA
    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (126) INSTRUCCION_LOOP -> . IFS
    (127) INSTRUCCION_LOOP -> . FORS
    (128) INSTRUCCION_LOOP -> . WHILES
    (129) INSTRUCCION_LOOP -> . ASIGNACION
    (130) INSTRUCCION_LOOP -> . I
    (131) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (132) INSTRUCCION_LOOP -> . NATIVAS
    (133) INSTRUCCION_LOOP -> . STRUCTS
    (134) INSTRUCCION_LOOP -> . BREAK
    (135) INSTRUCCION_LOOP -> . CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 223
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36

    INSTRUCCION_LOOP               shift and go to state 224
    IFS                            shift and go to state 134
    FORS                           shift and go to state 135
    WHILES                         shift and go to state 136
    ASIGNACION                     shift and go to state 137
    I                              shift and go to state 138
    LLAMADAS                       shift and go to state 139
    NATIVAS                        shift and go to state 140
    STRUCTS                        shift and go to state 141
    BREAK                          shift and go to state 142
    CONTINUE                       shift and go to state 143

state 132

    (137) WHILES -> R_WHILE LO R_END . PTCOMA

    PTCOMA          shift and go to state 225


state 133

    (125) INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .

    R_END           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_IF            reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    ID              reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_POP           reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_MUTABLE       reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_STRUCT        reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 125 (INSTRUCCIONES_LOOP -> INSTRUCCION_LOOP .)


state 134

    (126) INSTRUCCION_LOOP -> IFS .

    R_END           reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_IF            reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_FOR           reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_WHILE         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_GLOBAL        reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_LOCAL         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    ID              reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_PRINT         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_PRINTLN       reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_PARSE         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_TRUNC         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_FLOAT         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_STRING        reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_TYPEOF        reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_PUSH          reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_POP           reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_MUTABLE       reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_STRUCT        reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_BREAK         reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)
    R_CONTINUE      reduce using rule 126 (INSTRUCCION_LOOP -> IFS .)


state 135

    (127) INSTRUCCION_LOOP -> FORS .

    R_END           reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_IF            reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_FOR           reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_WHILE         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_GLOBAL        reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_LOCAL         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    ID              reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_PRINT         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_PRINTLN       reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_PARSE         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_TRUNC         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_FLOAT         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_STRING        reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_TYPEOF        reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_PUSH          reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_POP           reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_MUTABLE       reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_STRUCT        reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_BREAK         reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)
    R_CONTINUE      reduce using rule 127 (INSTRUCCION_LOOP -> FORS .)


state 136

    (128) INSTRUCCION_LOOP -> WHILES .

    R_END           reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_IF            reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_FOR           reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_WHILE         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_GLOBAL        reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_LOCAL         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    ID              reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINT         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_PRINTLN       reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_PARSE         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_TRUNC         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_FLOAT         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_STRING        reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_TYPEOF        reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_PUSH          reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_POP           reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_MUTABLE       reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_STRUCT        reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_BREAK         reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)
    R_CONTINUE      reduce using rule 128 (INSTRUCCION_LOOP -> WHILES .)


state 137

    (129) INSTRUCCION_LOOP -> ASIGNACION .

    R_END           reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_IF            reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FOR           reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_WHILE         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_GLOBAL        reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_LOCAL         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    ID              reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINT         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PRINTLN       reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PARSE         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TRUNC         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_FLOAT         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_STRING        reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_TYPEOF        reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_PUSH          reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_POP           reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_MUTABLE       reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_STRUCT        reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_BREAK         reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)
    R_CONTINUE      reduce using rule 129 (INSTRUCCION_LOOP -> ASIGNACION .)


state 138

    (130) INSTRUCCION_LOOP -> I .

    R_END           reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_IF            reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_FOR           reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_WHILE         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_GLOBAL        reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_LOCAL         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    ID              reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_PRINT         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_PRINTLN       reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_PARSE         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_TRUNC         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_FLOAT         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_STRING        reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_TYPEOF        reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_PUSH          reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_POP           reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_MUTABLE       reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_STRUCT        reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_BREAK         reduce using rule 130 (INSTRUCCION_LOOP -> I .)
    R_CONTINUE      reduce using rule 130 (INSTRUCCION_LOOP -> I .)


state 139

    (131) INSTRUCCION_LOOP -> LLAMADAS . PTCOMA

    PTCOMA          shift and go to state 226


state 140

    (132) INSTRUCCION_LOOP -> NATIVAS .

    R_END           reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_IF            reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_FOR           reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_WHILE         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_GLOBAL        reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_LOCAL         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    ID              reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PRINT         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PRINTLN       reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PARSE         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TRUNC         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_FLOAT         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_STRING        reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_TYPEOF        reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_PUSH          reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_POP           reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_MUTABLE       reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_STRUCT        reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_BREAK         reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)
    R_CONTINUE      reduce using rule 132 (INSTRUCCION_LOOP -> NATIVAS .)


state 141

    (133) INSTRUCCION_LOOP -> STRUCTS .

    R_END           reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_IF            reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_FOR           reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_WHILE         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_GLOBAL        reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_LOCAL         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    ID              reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PRINT         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PRINTLN       reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PARSE         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TRUNC         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_FLOAT         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_STRING        reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_TYPEOF        reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_PUSH          reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_POP           reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_MUTABLE       reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_STRUCT        reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_BREAK         reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)
    R_CONTINUE      reduce using rule 133 (INSTRUCCION_LOOP -> STRUCTS .)


state 142

    (134) INSTRUCCION_LOOP -> BREAK .

    R_END           reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_IF            reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_FOR           reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_WHILE         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_GLOBAL        reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_LOCAL         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    ID              reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINT         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_PRINTLN       reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_PARSE         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_TRUNC         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_FLOAT         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_STRING        reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_TYPEOF        reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_PUSH          reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_POP           reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_MUTABLE       reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_STRUCT        reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_BREAK         reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)
    R_CONTINUE      reduce using rule 134 (INSTRUCCION_LOOP -> BREAK .)


state 143

    (135) INSTRUCCION_LOOP -> CONTINUE .

    R_END           reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_IF            reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FOR           reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_WHILE         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_GLOBAL        reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_LOCAL         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    ID              reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINT         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PRINTLN       reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PARSE         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TRUNC         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_FLOAT         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_STRING        reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_TYPEOF        reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_PUSH          reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_POP           reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_MUTABLE       reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_STRUCT        reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_BREAK         reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)
    R_CONTINUE      reduce using rule 135 (INSTRUCCION_LOOP -> CONTINUE .)


state 144

    (35) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL ID IGUAL . LISTA PTCOMA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 227
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 145

    (41) ASIGNACION -> R_GLOBAL ID PTCOMA .

    R_IF            reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FOR           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_WHILE         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_LOCAL         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    ID              reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINT         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PARSE         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TRUNC         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FLOAT         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRING        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_PUSH          reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_POP           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_STRUCT        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_BREAK         reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_RETURN        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    $end            reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_END           reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSE          reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 41 (ASIGNACION -> R_GLOBAL ID PTCOMA .)


state 146

    (36) ASIGNACION -> R_LOCAL ID IGUAL . LISTA DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL ID IGUAL . LISTA PTCOMA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 228
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 147

    (42) ASIGNACION -> R_LOCAL ID PTCOMA .

    R_IF            reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FOR           reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_WHILE         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_GLOBAL        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_LOCAL         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    ID              reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINT         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PRINTLN       reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PARSE         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TRUNC         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FLOAT         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRING        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_TYPEOF        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_PUSH          reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_POP           reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_MUTABLE       reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_STRUCT        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_BREAK         reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_CONTINUE      reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_RETURN        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_FUNCTION      reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    $end            reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_END           reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSE          reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)
    R_ELSEIF        reduce using rule 42 (ASIGNACION -> R_LOCAL ID PTCOMA .)


state 148

    (18) I -> R_PRINT PARIZQ IMPRESIONES . PARDER PTCOMA
    (20) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 229
    COMA            shift and go to state 230


state 149

    (21) IMPRESIONES -> IMPRESION .

    PARDER          reduce using rule 21 (IMPRESIONES -> IMPRESION .)
    COMA            reduce using rule 21 (IMPRESIONES -> IMPRESION .)


state 150

    (22) IMPRESION -> ARREGLOS .

    PARDER          reduce using rule 22 (IMPRESION -> ARREGLOS .)
    COMA            reduce using rule 22 (IMPRESION -> ARREGLOS .)


state 151

    (23) IMPRESION -> LO .
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    PARDER          reduce using rule 23 (IMPRESION -> LO .)
    COMA            reduce using rule 23 (IMPRESION -> LO .)
    AND             shift and go to state 101
    OR              shift and go to state 102


state 152

    (24) IMPRESION -> DOLAR . PARIZQ E PARDER
    (25) IMPRESION -> DOLAR . PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> DOLAR . PARIZQ NATIVAS PARDER

    PARIZQ          shift and go to state 231


state 153

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES . PARDER PTCOMA
    (20) IMPRESIONES -> IMPRESIONES . COMA IMPRESION

    PARDER          shift and go to state 232
    COMA            shift and go to state 230


state 154

    (89) NATIVAS -> R_PARSE PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 233


state 155

    (44) TIPO -> R_NOTHING .

    COMA            reduce using rule 44 (TIPO -> R_NOTHING .)
    PTCOMA          reduce using rule 44 (TIPO -> R_NOTHING .)
    R_END           reduce using rule 44 (TIPO -> R_NOTHING .)


state 156

    (45) TIPO -> R_INT64 .

    COMA            reduce using rule 45 (TIPO -> R_INT64 .)
    PTCOMA          reduce using rule 45 (TIPO -> R_INT64 .)
    R_END           reduce using rule 45 (TIPO -> R_INT64 .)


state 157

    (46) TIPO -> R_FLOAT64 .

    COMA            reduce using rule 46 (TIPO -> R_FLOAT64 .)
    PTCOMA          reduce using rule 46 (TIPO -> R_FLOAT64 .)
    R_END           reduce using rule 46 (TIPO -> R_FLOAT64 .)


state 158

    (47) TIPO -> R_STRING .

    COMA            reduce using rule 47 (TIPO -> R_STRING .)
    PTCOMA          reduce using rule 47 (TIPO -> R_STRING .)
    R_END           reduce using rule 47 (TIPO -> R_STRING .)


state 159

    (48) TIPO -> R_CHAR .

    COMA            reduce using rule 48 (TIPO -> R_CHAR .)
    PTCOMA          reduce using rule 48 (TIPO -> R_CHAR .)
    R_END           reduce using rule 48 (TIPO -> R_CHAR .)


state 160

    (49) TIPO -> R_BOOL .

    COMA            reduce using rule 49 (TIPO -> R_BOOL .)
    PTCOMA          reduce using rule 49 (TIPO -> R_BOOL .)
    R_END           reduce using rule 49 (TIPO -> R_BOOL .)


state 161

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO . COMA LISTA PARDER

    COMA            shift and go to state 234


state 162

    (94) NATIVAS -> R_TRUNC PARIZQ LISTA . PARDER

    PARDER          shift and go to state 235


state 163

    (47) TIPO -> R_STRING .
    (92) NATIVAS -> R_STRING . PARIZQ LISTA PARDER

    COMA            reduce using rule 47 (TIPO -> R_STRING .)
    PARIZQ          shift and go to state 77


state 164

    (91) NATIVAS -> R_FLOAT PARIZQ LISTA . PARDER

    PARDER          shift and go to state 236


state 165

    (92) NATIVAS -> R_STRING PARIZQ LISTA . PARDER

    PARDER          shift and go to state 237


state 166

    (93) NATIVAS -> R_TYPEOF PARIZQ LISTA . PARDER

    PARDER          shift and go to state 238


state 167

    (95) NATIVAS -> R_PUSH DIFERENTE PARIZQ . ID COMA E PARDER

    ID              shift and go to state 239


state 168

    (96) NATIVAS -> R_POP DIFERENTE PARIZQ . ID PARDER

    ID              shift and go to state 240


state 169

    (144) STRUCTS -> R_MUTABLE R_STRUCT ID . ELEMENTOS R_END PTCOMA
    (146) STRUCTS -> R_MUTABLE R_STRUCT ID . R_END PTCOMA
    (148) ELEMENTOS -> . ELEMENTOS COMA ELEMENTO
    (149) ELEMENTOS -> . ELEMENTO
    (150) ELEMENTO -> . ID
    (151) ELEMENTO -> . ID DOSPUNTOS TIPO

    R_END           shift and go to state 242
    ID              shift and go to state 170

    ELEMENTOS                      shift and go to state 241
    ELEMENTO                       shift and go to state 173

state 170

    (150) ELEMENTO -> ID .
    (151) ELEMENTO -> ID . DOSPUNTOS TIPO

    PTCOMA          reduce using rule 150 (ELEMENTO -> ID .)
    COMA            reduce using rule 150 (ELEMENTO -> ID .)
    R_END           reduce using rule 150 (ELEMENTO -> ID .)
    DOSPUNTOS       shift and go to state 243


state 171

    (145) STRUCTS -> R_STRUCT ID ELEMENTOS . PTCOMA
    (148) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    PTCOMA          shift and go to state 244
    COMA            shift and go to state 245


state 172

    (147) STRUCTS -> R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 246


state 173

    (149) ELEMENTOS -> ELEMENTO .

    PTCOMA          reduce using rule 149 (ELEMENTOS -> ELEMENTO .)
    COMA            reduce using rule 149 (ELEMENTOS -> ELEMENTO .)
    R_END           reduce using rule 149 (ELEMENTOS -> ELEMENTO .)


state 174

    (98) RETURN -> R_RETURN LISTA PTCOMA .

    R_IF            reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FOR           reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_WHILE         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_LOCAL         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    ID              reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINT         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PARSE         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TRUNC         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FLOAT         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRING        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_PUSH          reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_POP           reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_STRUCT        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_BREAK         reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_RETURN        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    $end            reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_END           reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSE          reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 98 (RETURN -> R_RETURN LISTA PTCOMA .)


state 175

    (27) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (29) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTAS                         shift and go to state 247
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 176

    (28) ARREGLOS -> CORIZQ LISTAS . CORDER
    (30) ARREGLOS -> CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (31) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 248
    COMA            shift and go to state 184


state 177

    (106) PARAMETRO -> ID .

    PARDER          reduce using rule 106 (PARAMETRO -> ID .)
    COMA            reduce using rule 106 (PARAMETRO -> ID .)


state 178

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS . PARDER R_END PTCOMA
    (104) PARAMETROS -> PARAMETROS . COMA PARAMETRO

    PARDER          shift and go to state 249
    COMA            shift and go to state 250


state 179

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . INSTRUCCIONES R_END PTCOMA
    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 252
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 251
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 180

    (105) PARAMETROS -> PARAMETRO .

    PARDER          reduce using rule 105 (PARAMETROS -> PARAMETRO .)
    COMA            reduce using rule 105 (PARAMETROS -> PARAMETRO .)


state 181

    (37) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 158
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160

    TIPO                           shift and go to state 253

state 182

    (40) ASIGNACION -> ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 40 (ASIGNACION -> ID IGUAL LISTA PTCOMA .)


state 183

    (50) LLAMADAS -> ID PARIZQ LISTAS PARDER .

    PTCOMA          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAS             reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENOS           reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POR             reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DIVIDIDO        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MODAL           reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    POTENCIA        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENQUE          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYQUE          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    IGUALQUE        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    NIGUALQUE       reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MENORIGUAL      reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    MAYORIGUAL      reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_END           reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSE          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    AND             reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    OR              reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_ELSEIF        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_IF            reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FOR           reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_WHILE         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_GLOBAL        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_LOCAL         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    ID              reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINT         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PRINTLN       reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PARSE         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TRUNC         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_FLOAT         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_STRING        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_TYPEOF        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_PUSH          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_POP           reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_MUTABLE       reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_STRUCT        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_BREAK         reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_CONTINUE      reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    R_RETURN        reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTOS       reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    PARDER          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    COMA            reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    CORDER          reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)
    DOSPUNTITOS     reduce using rule 50 (LLAMADAS -> ID PARIZQ LISTAS PARDER .)


state 184

    (31) LISTAS -> LISTAS COMA . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 254
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 185

    (107) IFS -> R_IF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 255


state 186

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 257
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 256
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 187

    (109) IFS -> R_IF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 109 (IFS -> R_IF LO INSTRUCCIONES ELSEIF .)


state 188

    (110) IFS -> R_IF LO R_END PTCOMA .

    R_IF            reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FOR           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    ID              reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRING        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_POP           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    $end            reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_END           reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 110 (IFS -> R_IF LO R_END PTCOMA .)


state 189

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 258
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 190

    (114) IFS -> R_IF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 259


state 191

    (84) LO -> LO AND LO .
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    R_END           reduce using rule 84 (LO -> LO AND LO .)
    R_ELSE          reduce using rule 84 (LO -> LO AND LO .)
    AND             reduce using rule 84 (LO -> LO AND LO .)
    OR              reduce using rule 84 (LO -> LO AND LO .)
    R_ELSEIF        reduce using rule 84 (LO -> LO AND LO .)
    R_IF            reduce using rule 84 (LO -> LO AND LO .)
    R_FOR           reduce using rule 84 (LO -> LO AND LO .)
    R_WHILE         reduce using rule 84 (LO -> LO AND LO .)
    R_GLOBAL        reduce using rule 84 (LO -> LO AND LO .)
    R_LOCAL         reduce using rule 84 (LO -> LO AND LO .)
    ID              reduce using rule 84 (LO -> LO AND LO .)
    R_PRINT         reduce using rule 84 (LO -> LO AND LO .)
    R_PRINTLN       reduce using rule 84 (LO -> LO AND LO .)
    R_PARSE         reduce using rule 84 (LO -> LO AND LO .)
    R_TRUNC         reduce using rule 84 (LO -> LO AND LO .)
    R_FLOAT         reduce using rule 84 (LO -> LO AND LO .)
    R_STRING        reduce using rule 84 (LO -> LO AND LO .)
    R_TYPEOF        reduce using rule 84 (LO -> LO AND LO .)
    R_PUSH          reduce using rule 84 (LO -> LO AND LO .)
    R_POP           reduce using rule 84 (LO -> LO AND LO .)
    R_MUTABLE       reduce using rule 84 (LO -> LO AND LO .)
    R_STRUCT        reduce using rule 84 (LO -> LO AND LO .)
    R_BREAK         reduce using rule 84 (LO -> LO AND LO .)
    R_CONTINUE      reduce using rule 84 (LO -> LO AND LO .)
    R_RETURN        reduce using rule 84 (LO -> LO AND LO .)
    PTCOMA          reduce using rule 84 (LO -> LO AND LO .)
    DOSPUNTOS       reduce using rule 84 (LO -> LO AND LO .)
    PARDER          reduce using rule 84 (LO -> LO AND LO .)
    COMA            reduce using rule 84 (LO -> LO AND LO .)
    CORDER          reduce using rule 84 (LO -> LO AND LO .)

  ! AND             [ shift and go to state 101 ]
  ! OR              [ shift and go to state 102 ]


state 192

    (85) LO -> LO OR LO .
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO

    R_END           reduce using rule 85 (LO -> LO OR LO .)
    R_ELSE          reduce using rule 85 (LO -> LO OR LO .)
    OR              reduce using rule 85 (LO -> LO OR LO .)
    R_ELSEIF        reduce using rule 85 (LO -> LO OR LO .)
    R_IF            reduce using rule 85 (LO -> LO OR LO .)
    R_FOR           reduce using rule 85 (LO -> LO OR LO .)
    R_WHILE         reduce using rule 85 (LO -> LO OR LO .)
    R_GLOBAL        reduce using rule 85 (LO -> LO OR LO .)
    R_LOCAL         reduce using rule 85 (LO -> LO OR LO .)
    ID              reduce using rule 85 (LO -> LO OR LO .)
    R_PRINT         reduce using rule 85 (LO -> LO OR LO .)
    R_PRINTLN       reduce using rule 85 (LO -> LO OR LO .)
    R_PARSE         reduce using rule 85 (LO -> LO OR LO .)
    R_TRUNC         reduce using rule 85 (LO -> LO OR LO .)
    R_FLOAT         reduce using rule 85 (LO -> LO OR LO .)
    R_STRING        reduce using rule 85 (LO -> LO OR LO .)
    R_TYPEOF        reduce using rule 85 (LO -> LO OR LO .)
    R_PUSH          reduce using rule 85 (LO -> LO OR LO .)
    R_POP           reduce using rule 85 (LO -> LO OR LO .)
    R_MUTABLE       reduce using rule 85 (LO -> LO OR LO .)
    R_STRUCT        reduce using rule 85 (LO -> LO OR LO .)
    R_BREAK         reduce using rule 85 (LO -> LO OR LO .)
    R_CONTINUE      reduce using rule 85 (LO -> LO OR LO .)
    R_RETURN        reduce using rule 85 (LO -> LO OR LO .)
    PTCOMA          reduce using rule 85 (LO -> LO OR LO .)
    DOSPUNTOS       reduce using rule 85 (LO -> LO OR LO .)
    PARDER          reduce using rule 85 (LO -> LO OR LO .)
    COMA            reduce using rule 85 (LO -> LO OR LO .)
    CORDER          reduce using rule 85 (LO -> LO OR LO .)
    AND             shift and go to state 101

  ! AND             [ reduce using rule 85 (LO -> LO OR LO .) ]
  ! OR              [ shift and go to state 102 ]


state 193

    (115) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES ELSEIF
    (118) ELSEIF -> R_ELSEIF LO . R_END PTCOMA
    (119) ELSEIF -> R_ELSEIF LO . R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> R_ELSEIF LO . ELSEIF
    (121) ELSEIF -> R_ELSEIF LO . INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF LO . R_ELSE R_END PTCOMA
    (84) LO -> LO . AND LO
    (85) LO -> LO . OR LO
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 261
    R_ELSE          shift and go to state 262
    AND             shift and go to state 101
    OR              shift and go to state 102
    R_ELSEIF        shift and go to state 103
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 260
    ELSEIF                         shift and go to state 263
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 194

    (87) LO -> PARIZQ LO PARDER .

    R_END           reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_ELSE          reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    AND             reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    OR              reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_ELSEIF        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_IF            reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_FOR           reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_WHILE         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_GLOBAL        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_LOCAL         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    ID              reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_PRINT         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_PRINTLN       reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_PARSE         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_TRUNC         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_FLOAT         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_STRING        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_TYPEOF        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_PUSH          reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_POP           reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_MUTABLE       reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_STRUCT        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_BREAK         reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_CONTINUE      reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    R_RETURN        reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    PTCOMA          reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    DOSPUNTOS       reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    PARDER          reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    COMA            reduce using rule 87 (LO -> PARIZQ LO PARDER .)
    CORDER          reduce using rule 87 (LO -> PARIZQ LO PARDER .)


state 195

    (82) RE -> PARIZQ RE PARDER .

    MENQUE          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    MAYQUE          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    IGUALQUE        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    NIGUALQUE       reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    MENORIGUAL      reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    MAYORIGUAL      reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_END           reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_ELSE          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    AND             reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    OR              reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_ELSEIF        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_IF            reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_FOR           reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_WHILE         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_GLOBAL        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_LOCAL         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    ID              reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_PRINT         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_PRINTLN       reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_PARSE         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_TRUNC         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_FLOAT         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_STRING        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_TYPEOF        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_PUSH          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_POP           reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_MUTABLE       reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_STRUCT        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_BREAK         reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_CONTINUE      reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    R_RETURN        reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    PTCOMA          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    DOSPUNTOS       reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    PARDER          reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    COMA            reduce using rule 82 (RE -> PARIZQ RE PARDER .)
    CORDER          reduce using rule 82 (RE -> PARIZQ RE PARDER .)


state 196

    (59) E -> PARIZQ E PARDER .

    MAS             reduce using rule 59 (E -> PARIZQ E PARDER .)
    MENOS           reduce using rule 59 (E -> PARIZQ E PARDER .)
    POR             reduce using rule 59 (E -> PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 59 (E -> PARIZQ E PARDER .)
    MODAL           reduce using rule 59 (E -> PARIZQ E PARDER .)
    POTENCIA        reduce using rule 59 (E -> PARIZQ E PARDER .)
    MENQUE          reduce using rule 59 (E -> PARIZQ E PARDER .)
    MAYQUE          reduce using rule 59 (E -> PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 59 (E -> PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 59 (E -> PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 59 (E -> PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_END           reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_ELSE          reduce using rule 59 (E -> PARIZQ E PARDER .)
    AND             reduce using rule 59 (E -> PARIZQ E PARDER .)
    OR              reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_IF            reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_FOR           reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_WHILE         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 59 (E -> PARIZQ E PARDER .)
    ID              reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_PRINT         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_PARSE         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_STRING        reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_PUSH          reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_POP           reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_BREAK         reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 59 (E -> PARIZQ E PARDER .)
    R_RETURN        reduce using rule 59 (E -> PARIZQ E PARDER .)
    PTCOMA          reduce using rule 59 (E -> PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 59 (E -> PARIZQ E PARDER .)
    PARDER          reduce using rule 59 (E -> PARIZQ E PARDER .)
    COMA            reduce using rule 59 (E -> PARIZQ E PARDER .)
    CORDER          reduce using rule 59 (E -> PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 59 (E -> PARIZQ E PARDER .)


state 197

    (76) RE -> RE MENQUE RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 76 (RE -> RE MENQUE RE .)
    MAYQUE          reduce using rule 76 (RE -> RE MENQUE RE .)
    IGUALQUE        reduce using rule 76 (RE -> RE MENQUE RE .)
    NIGUALQUE       reduce using rule 76 (RE -> RE MENQUE RE .)
    MENORIGUAL      reduce using rule 76 (RE -> RE MENQUE RE .)
    MAYORIGUAL      reduce using rule 76 (RE -> RE MENQUE RE .)
    R_END           reduce using rule 76 (RE -> RE MENQUE RE .)
    R_ELSE          reduce using rule 76 (RE -> RE MENQUE RE .)
    AND             reduce using rule 76 (RE -> RE MENQUE RE .)
    OR              reduce using rule 76 (RE -> RE MENQUE RE .)
    R_ELSEIF        reduce using rule 76 (RE -> RE MENQUE RE .)
    R_IF            reduce using rule 76 (RE -> RE MENQUE RE .)
    R_FOR           reduce using rule 76 (RE -> RE MENQUE RE .)
    R_WHILE         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_GLOBAL        reduce using rule 76 (RE -> RE MENQUE RE .)
    R_LOCAL         reduce using rule 76 (RE -> RE MENQUE RE .)
    ID              reduce using rule 76 (RE -> RE MENQUE RE .)
    R_PRINT         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_PRINTLN       reduce using rule 76 (RE -> RE MENQUE RE .)
    R_PARSE         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_TRUNC         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_FLOAT         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_STRING        reduce using rule 76 (RE -> RE MENQUE RE .)
    R_TYPEOF        reduce using rule 76 (RE -> RE MENQUE RE .)
    R_PUSH          reduce using rule 76 (RE -> RE MENQUE RE .)
    R_POP           reduce using rule 76 (RE -> RE MENQUE RE .)
    R_MUTABLE       reduce using rule 76 (RE -> RE MENQUE RE .)
    R_STRUCT        reduce using rule 76 (RE -> RE MENQUE RE .)
    R_BREAK         reduce using rule 76 (RE -> RE MENQUE RE .)
    R_CONTINUE      reduce using rule 76 (RE -> RE MENQUE RE .)
    R_RETURN        reduce using rule 76 (RE -> RE MENQUE RE .)
    PTCOMA          reduce using rule 76 (RE -> RE MENQUE RE .)
    DOSPUNTOS       reduce using rule 76 (RE -> RE MENQUE RE .)
    PARDER          reduce using rule 76 (RE -> RE MENQUE RE .)
    COMA            reduce using rule 76 (RE -> RE MENQUE RE .)
    CORDER          reduce using rule 76 (RE -> RE MENQUE RE .)

  ! MENQUE          [ shift and go to state 108 ]
  ! MAYQUE          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]
  ! MENORIGUAL      [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]


state 198

    (82) RE -> PARIZQ . RE PARDER
    (59) E -> PARIZQ . E PARDER
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    PARIZQ          shift and go to state 198
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    RE                             shift and go to state 264
    E                              shift and go to state 107
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 199

    (77) RE -> RE MAYQUE RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 77 (RE -> RE MAYQUE RE .)
    MAYQUE          reduce using rule 77 (RE -> RE MAYQUE RE .)
    IGUALQUE        reduce using rule 77 (RE -> RE MAYQUE RE .)
    NIGUALQUE       reduce using rule 77 (RE -> RE MAYQUE RE .)
    MENORIGUAL      reduce using rule 77 (RE -> RE MAYQUE RE .)
    MAYORIGUAL      reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_END           reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_ELSE          reduce using rule 77 (RE -> RE MAYQUE RE .)
    AND             reduce using rule 77 (RE -> RE MAYQUE RE .)
    OR              reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_ELSEIF        reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_IF            reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_FOR           reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_WHILE         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_GLOBAL        reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_LOCAL         reduce using rule 77 (RE -> RE MAYQUE RE .)
    ID              reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_PRINT         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_PRINTLN       reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_PARSE         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_TRUNC         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_FLOAT         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_STRING        reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_TYPEOF        reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_PUSH          reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_POP           reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_MUTABLE       reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_STRUCT        reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_BREAK         reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_CONTINUE      reduce using rule 77 (RE -> RE MAYQUE RE .)
    R_RETURN        reduce using rule 77 (RE -> RE MAYQUE RE .)
    PTCOMA          reduce using rule 77 (RE -> RE MAYQUE RE .)
    DOSPUNTOS       reduce using rule 77 (RE -> RE MAYQUE RE .)
    PARDER          reduce using rule 77 (RE -> RE MAYQUE RE .)
    COMA            reduce using rule 77 (RE -> RE MAYQUE RE .)
    CORDER          reduce using rule 77 (RE -> RE MAYQUE RE .)

  ! MENQUE          [ shift and go to state 108 ]
  ! MAYQUE          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]
  ! MENORIGUAL      [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]


state 200

    (78) RE -> RE IGUALQUE RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    NIGUALQUE       reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_END           reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_ELSE          reduce using rule 78 (RE -> RE IGUALQUE RE .)
    AND             reduce using rule 78 (RE -> RE IGUALQUE RE .)
    OR              reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_ELSEIF        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_IF            reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_FOR           reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_WHILE         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_GLOBAL        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_LOCAL         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    ID              reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_PRINT         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_PRINTLN       reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_PARSE         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_TRUNC         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_FLOAT         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_STRING        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_TYPEOF        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_PUSH          reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_POP           reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_MUTABLE       reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_STRUCT        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_BREAK         reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_CONTINUE      reduce using rule 78 (RE -> RE IGUALQUE RE .)
    R_RETURN        reduce using rule 78 (RE -> RE IGUALQUE RE .)
    PTCOMA          reduce using rule 78 (RE -> RE IGUALQUE RE .)
    DOSPUNTOS       reduce using rule 78 (RE -> RE IGUALQUE RE .)
    PARDER          reduce using rule 78 (RE -> RE IGUALQUE RE .)
    COMA            reduce using rule 78 (RE -> RE IGUALQUE RE .)
    CORDER          reduce using rule 78 (RE -> RE IGUALQUE RE .)
    MENQUE          shift and go to state 108
    MAYQUE          shift and go to state 109
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113

  ! MENQUE          [ reduce using rule 78 (RE -> RE IGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 78 (RE -> RE IGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 78 (RE -> RE IGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 78 (RE -> RE IGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]


state 201

    (79) RE -> RE NIGUALQUE RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    IGUALQUE        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    NIGUALQUE       reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_END           reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_ELSE          reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    AND             reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    OR              reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_ELSEIF        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_IF            reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_FOR           reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_WHILE         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_GLOBAL        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_LOCAL         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    ID              reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_PRINT         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_PRINTLN       reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_PARSE         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_TRUNC         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_FLOAT         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_STRING        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_TYPEOF        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_PUSH          reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_POP           reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_MUTABLE       reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_STRUCT        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_BREAK         reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_CONTINUE      reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    R_RETURN        reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    PTCOMA          reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    DOSPUNTOS       reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    PARDER          reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    COMA            reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    CORDER          reduce using rule 79 (RE -> RE NIGUALQUE RE .)
    MENQUE          shift and go to state 108
    MAYQUE          shift and go to state 109
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113

  ! MENQUE          [ reduce using rule 79 (RE -> RE NIGUALQUE RE .) ]
  ! MAYQUE          [ reduce using rule 79 (RE -> RE NIGUALQUE RE .) ]
  ! MENORIGUAL      [ reduce using rule 79 (RE -> RE NIGUALQUE RE .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (RE -> RE NIGUALQUE RE .) ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]


state 202

    (80) RE -> RE MENORIGUAL RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    MAYQUE          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    IGUALQUE        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    NIGUALQUE       reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    MENORIGUAL      reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    MAYORIGUAL      reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_END           reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_ELSE          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    AND             reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    OR              reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_ELSEIF        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_IF            reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_FOR           reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_WHILE         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_GLOBAL        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_LOCAL         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    ID              reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_PRINT         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_PRINTLN       reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_PARSE         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_TRUNC         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_FLOAT         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_STRING        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_TYPEOF        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_PUSH          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_POP           reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_MUTABLE       reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_STRUCT        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_BREAK         reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_CONTINUE      reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    R_RETURN        reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    PTCOMA          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    DOSPUNTOS       reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    PARDER          reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    COMA            reduce using rule 80 (RE -> RE MENORIGUAL RE .)
    CORDER          reduce using rule 80 (RE -> RE MENORIGUAL RE .)

  ! MENQUE          [ shift and go to state 108 ]
  ! MAYQUE          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]
  ! MENORIGUAL      [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]


state 203

    (81) RE -> RE MAYORIGUAL RE .
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    MENQUE          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    MAYQUE          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    IGUALQUE        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    NIGUALQUE       reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    MENORIGUAL      reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    MAYORIGUAL      reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_END           reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_ELSE          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    AND             reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    OR              reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_ELSEIF        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_IF            reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_FOR           reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_WHILE         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_GLOBAL        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_LOCAL         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    ID              reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_PRINT         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_PRINTLN       reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_PARSE         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_TRUNC         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_FLOAT         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_STRING        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_TYPEOF        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_PUSH          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_POP           reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_MUTABLE       reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_STRUCT        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_BREAK         reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_CONTINUE      reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    R_RETURN        reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    PTCOMA          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    DOSPUNTOS       reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    PARDER          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    COMA            reduce using rule 81 (RE -> RE MAYORIGUAL RE .)
    CORDER          reduce using rule 81 (RE -> RE MAYORIGUAL RE .)

  ! MENQUE          [ shift and go to state 108 ]
  ! MAYQUE          [ shift and go to state 109 ]
  ! IGUALQUE        [ shift and go to state 110 ]
  ! NIGUALQUE       [ shift and go to state 111 ]
  ! MENORIGUAL      [ shift and go to state 112 ]
  ! MAYORIGUAL      [ shift and go to state 113 ]


state 204

    (52) E -> E MAS E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 52 (E -> E MAS E .)
    MENOS           reduce using rule 52 (E -> E MAS E .)
    MENQUE          reduce using rule 52 (E -> E MAS E .)
    MAYQUE          reduce using rule 52 (E -> E MAS E .)
    IGUALQUE        reduce using rule 52 (E -> E MAS E .)
    NIGUALQUE       reduce using rule 52 (E -> E MAS E .)
    MENORIGUAL      reduce using rule 52 (E -> E MAS E .)
    MAYORIGUAL      reduce using rule 52 (E -> E MAS E .)
    R_END           reduce using rule 52 (E -> E MAS E .)
    R_ELSE          reduce using rule 52 (E -> E MAS E .)
    AND             reduce using rule 52 (E -> E MAS E .)
    OR              reduce using rule 52 (E -> E MAS E .)
    R_ELSEIF        reduce using rule 52 (E -> E MAS E .)
    R_IF            reduce using rule 52 (E -> E MAS E .)
    R_FOR           reduce using rule 52 (E -> E MAS E .)
    R_WHILE         reduce using rule 52 (E -> E MAS E .)
    R_GLOBAL        reduce using rule 52 (E -> E MAS E .)
    R_LOCAL         reduce using rule 52 (E -> E MAS E .)
    ID              reduce using rule 52 (E -> E MAS E .)
    R_PRINT         reduce using rule 52 (E -> E MAS E .)
    R_PRINTLN       reduce using rule 52 (E -> E MAS E .)
    R_PARSE         reduce using rule 52 (E -> E MAS E .)
    R_TRUNC         reduce using rule 52 (E -> E MAS E .)
    R_FLOAT         reduce using rule 52 (E -> E MAS E .)
    R_STRING        reduce using rule 52 (E -> E MAS E .)
    R_TYPEOF        reduce using rule 52 (E -> E MAS E .)
    R_PUSH          reduce using rule 52 (E -> E MAS E .)
    R_POP           reduce using rule 52 (E -> E MAS E .)
    R_MUTABLE       reduce using rule 52 (E -> E MAS E .)
    R_STRUCT        reduce using rule 52 (E -> E MAS E .)
    R_BREAK         reduce using rule 52 (E -> E MAS E .)
    R_CONTINUE      reduce using rule 52 (E -> E MAS E .)
    R_RETURN        reduce using rule 52 (E -> E MAS E .)
    PTCOMA          reduce using rule 52 (E -> E MAS E .)
    DOSPUNTOS       reduce using rule 52 (E -> E MAS E .)
    PARDER          reduce using rule 52 (E -> E MAS E .)
    COMA            reduce using rule 52 (E -> E MAS E .)
    CORDER          reduce using rule 52 (E -> E MAS E .)
    DOSPUNTITOS     reduce using rule 52 (E -> E MAS E .)
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119

  ! POR             [ reduce using rule 52 (E -> E MAS E .) ]
  ! DIVIDIDO        [ reduce using rule 52 (E -> E MAS E .) ]
  ! MODAL           [ reduce using rule 52 (E -> E MAS E .) ]
  ! POTENCIA        [ reduce using rule 52 (E -> E MAS E .) ]
  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]


state 205

    (53) E -> E MENOS E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 53 (E -> E MENOS E .)
    MENOS           reduce using rule 53 (E -> E MENOS E .)
    MENQUE          reduce using rule 53 (E -> E MENOS E .)
    MAYQUE          reduce using rule 53 (E -> E MENOS E .)
    IGUALQUE        reduce using rule 53 (E -> E MENOS E .)
    NIGUALQUE       reduce using rule 53 (E -> E MENOS E .)
    MENORIGUAL      reduce using rule 53 (E -> E MENOS E .)
    MAYORIGUAL      reduce using rule 53 (E -> E MENOS E .)
    R_END           reduce using rule 53 (E -> E MENOS E .)
    R_ELSE          reduce using rule 53 (E -> E MENOS E .)
    AND             reduce using rule 53 (E -> E MENOS E .)
    OR              reduce using rule 53 (E -> E MENOS E .)
    R_ELSEIF        reduce using rule 53 (E -> E MENOS E .)
    R_IF            reduce using rule 53 (E -> E MENOS E .)
    R_FOR           reduce using rule 53 (E -> E MENOS E .)
    R_WHILE         reduce using rule 53 (E -> E MENOS E .)
    R_GLOBAL        reduce using rule 53 (E -> E MENOS E .)
    R_LOCAL         reduce using rule 53 (E -> E MENOS E .)
    ID              reduce using rule 53 (E -> E MENOS E .)
    R_PRINT         reduce using rule 53 (E -> E MENOS E .)
    R_PRINTLN       reduce using rule 53 (E -> E MENOS E .)
    R_PARSE         reduce using rule 53 (E -> E MENOS E .)
    R_TRUNC         reduce using rule 53 (E -> E MENOS E .)
    R_FLOAT         reduce using rule 53 (E -> E MENOS E .)
    R_STRING        reduce using rule 53 (E -> E MENOS E .)
    R_TYPEOF        reduce using rule 53 (E -> E MENOS E .)
    R_PUSH          reduce using rule 53 (E -> E MENOS E .)
    R_POP           reduce using rule 53 (E -> E MENOS E .)
    R_MUTABLE       reduce using rule 53 (E -> E MENOS E .)
    R_STRUCT        reduce using rule 53 (E -> E MENOS E .)
    R_BREAK         reduce using rule 53 (E -> E MENOS E .)
    R_CONTINUE      reduce using rule 53 (E -> E MENOS E .)
    R_RETURN        reduce using rule 53 (E -> E MENOS E .)
    PTCOMA          reduce using rule 53 (E -> E MENOS E .)
    DOSPUNTOS       reduce using rule 53 (E -> E MENOS E .)
    PARDER          reduce using rule 53 (E -> E MENOS E .)
    COMA            reduce using rule 53 (E -> E MENOS E .)
    CORDER          reduce using rule 53 (E -> E MENOS E .)
    DOSPUNTITOS     reduce using rule 53 (E -> E MENOS E .)
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119

  ! POR             [ reduce using rule 53 (E -> E MENOS E .) ]
  ! DIVIDIDO        [ reduce using rule 53 (E -> E MENOS E .) ]
  ! MODAL           [ reduce using rule 53 (E -> E MENOS E .) ]
  ! POTENCIA        [ reduce using rule 53 (E -> E MENOS E .) ]
  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]


state 206

    (54) E -> E POR E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 54 (E -> E POR E .)
    MENOS           reduce using rule 54 (E -> E POR E .)
    POR             reduce using rule 54 (E -> E POR E .)
    DIVIDIDO        reduce using rule 54 (E -> E POR E .)
    MODAL           reduce using rule 54 (E -> E POR E .)
    MENQUE          reduce using rule 54 (E -> E POR E .)
    MAYQUE          reduce using rule 54 (E -> E POR E .)
    IGUALQUE        reduce using rule 54 (E -> E POR E .)
    NIGUALQUE       reduce using rule 54 (E -> E POR E .)
    MENORIGUAL      reduce using rule 54 (E -> E POR E .)
    MAYORIGUAL      reduce using rule 54 (E -> E POR E .)
    R_END           reduce using rule 54 (E -> E POR E .)
    R_ELSE          reduce using rule 54 (E -> E POR E .)
    AND             reduce using rule 54 (E -> E POR E .)
    OR              reduce using rule 54 (E -> E POR E .)
    R_ELSEIF        reduce using rule 54 (E -> E POR E .)
    R_IF            reduce using rule 54 (E -> E POR E .)
    R_FOR           reduce using rule 54 (E -> E POR E .)
    R_WHILE         reduce using rule 54 (E -> E POR E .)
    R_GLOBAL        reduce using rule 54 (E -> E POR E .)
    R_LOCAL         reduce using rule 54 (E -> E POR E .)
    ID              reduce using rule 54 (E -> E POR E .)
    R_PRINT         reduce using rule 54 (E -> E POR E .)
    R_PRINTLN       reduce using rule 54 (E -> E POR E .)
    R_PARSE         reduce using rule 54 (E -> E POR E .)
    R_TRUNC         reduce using rule 54 (E -> E POR E .)
    R_FLOAT         reduce using rule 54 (E -> E POR E .)
    R_STRING        reduce using rule 54 (E -> E POR E .)
    R_TYPEOF        reduce using rule 54 (E -> E POR E .)
    R_PUSH          reduce using rule 54 (E -> E POR E .)
    R_POP           reduce using rule 54 (E -> E POR E .)
    R_MUTABLE       reduce using rule 54 (E -> E POR E .)
    R_STRUCT        reduce using rule 54 (E -> E POR E .)
    R_BREAK         reduce using rule 54 (E -> E POR E .)
    R_CONTINUE      reduce using rule 54 (E -> E POR E .)
    R_RETURN        reduce using rule 54 (E -> E POR E .)
    PTCOMA          reduce using rule 54 (E -> E POR E .)
    DOSPUNTOS       reduce using rule 54 (E -> E POR E .)
    PARDER          reduce using rule 54 (E -> E POR E .)
    COMA            reduce using rule 54 (E -> E POR E .)
    CORDER          reduce using rule 54 (E -> E POR E .)
    DOSPUNTITOS     reduce using rule 54 (E -> E POR E .)
    POTENCIA        shift and go to state 119

  ! POTENCIA        [ reduce using rule 54 (E -> E POR E .) ]
  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]
  ! POR             [ shift and go to state 116 ]
  ! DIVIDIDO        [ shift and go to state 117 ]
  ! MODAL           [ shift and go to state 118 ]


state 207

    (55) E -> E DIVIDIDO E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 55 (E -> E DIVIDIDO E .)
    MENOS           reduce using rule 55 (E -> E DIVIDIDO E .)
    POR             reduce using rule 55 (E -> E DIVIDIDO E .)
    DIVIDIDO        reduce using rule 55 (E -> E DIVIDIDO E .)
    MODAL           reduce using rule 55 (E -> E DIVIDIDO E .)
    MENQUE          reduce using rule 55 (E -> E DIVIDIDO E .)
    MAYQUE          reduce using rule 55 (E -> E DIVIDIDO E .)
    IGUALQUE        reduce using rule 55 (E -> E DIVIDIDO E .)
    NIGUALQUE       reduce using rule 55 (E -> E DIVIDIDO E .)
    MENORIGUAL      reduce using rule 55 (E -> E DIVIDIDO E .)
    MAYORIGUAL      reduce using rule 55 (E -> E DIVIDIDO E .)
    R_END           reduce using rule 55 (E -> E DIVIDIDO E .)
    R_ELSE          reduce using rule 55 (E -> E DIVIDIDO E .)
    AND             reduce using rule 55 (E -> E DIVIDIDO E .)
    OR              reduce using rule 55 (E -> E DIVIDIDO E .)
    R_ELSEIF        reduce using rule 55 (E -> E DIVIDIDO E .)
    R_IF            reduce using rule 55 (E -> E DIVIDIDO E .)
    R_FOR           reduce using rule 55 (E -> E DIVIDIDO E .)
    R_WHILE         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_GLOBAL        reduce using rule 55 (E -> E DIVIDIDO E .)
    R_LOCAL         reduce using rule 55 (E -> E DIVIDIDO E .)
    ID              reduce using rule 55 (E -> E DIVIDIDO E .)
    R_PRINT         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_PRINTLN       reduce using rule 55 (E -> E DIVIDIDO E .)
    R_PARSE         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_TRUNC         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_FLOAT         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_STRING        reduce using rule 55 (E -> E DIVIDIDO E .)
    R_TYPEOF        reduce using rule 55 (E -> E DIVIDIDO E .)
    R_PUSH          reduce using rule 55 (E -> E DIVIDIDO E .)
    R_POP           reduce using rule 55 (E -> E DIVIDIDO E .)
    R_MUTABLE       reduce using rule 55 (E -> E DIVIDIDO E .)
    R_STRUCT        reduce using rule 55 (E -> E DIVIDIDO E .)
    R_BREAK         reduce using rule 55 (E -> E DIVIDIDO E .)
    R_CONTINUE      reduce using rule 55 (E -> E DIVIDIDO E .)
    R_RETURN        reduce using rule 55 (E -> E DIVIDIDO E .)
    PTCOMA          reduce using rule 55 (E -> E DIVIDIDO E .)
    DOSPUNTOS       reduce using rule 55 (E -> E DIVIDIDO E .)
    PARDER          reduce using rule 55 (E -> E DIVIDIDO E .)
    COMA            reduce using rule 55 (E -> E DIVIDIDO E .)
    CORDER          reduce using rule 55 (E -> E DIVIDIDO E .)
    DOSPUNTITOS     reduce using rule 55 (E -> E DIVIDIDO E .)
    POTENCIA        shift and go to state 119

  ! POTENCIA        [ reduce using rule 55 (E -> E DIVIDIDO E .) ]
  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]
  ! POR             [ shift and go to state 116 ]
  ! DIVIDIDO        [ shift and go to state 117 ]
  ! MODAL           [ shift and go to state 118 ]


state 208

    (56) E -> E MODAL E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 56 (E -> E MODAL E .)
    MENOS           reduce using rule 56 (E -> E MODAL E .)
    POR             reduce using rule 56 (E -> E MODAL E .)
    DIVIDIDO        reduce using rule 56 (E -> E MODAL E .)
    MODAL           reduce using rule 56 (E -> E MODAL E .)
    MENQUE          reduce using rule 56 (E -> E MODAL E .)
    MAYQUE          reduce using rule 56 (E -> E MODAL E .)
    IGUALQUE        reduce using rule 56 (E -> E MODAL E .)
    NIGUALQUE       reduce using rule 56 (E -> E MODAL E .)
    MENORIGUAL      reduce using rule 56 (E -> E MODAL E .)
    MAYORIGUAL      reduce using rule 56 (E -> E MODAL E .)
    R_END           reduce using rule 56 (E -> E MODAL E .)
    R_ELSE          reduce using rule 56 (E -> E MODAL E .)
    AND             reduce using rule 56 (E -> E MODAL E .)
    OR              reduce using rule 56 (E -> E MODAL E .)
    R_ELSEIF        reduce using rule 56 (E -> E MODAL E .)
    R_IF            reduce using rule 56 (E -> E MODAL E .)
    R_FOR           reduce using rule 56 (E -> E MODAL E .)
    R_WHILE         reduce using rule 56 (E -> E MODAL E .)
    R_GLOBAL        reduce using rule 56 (E -> E MODAL E .)
    R_LOCAL         reduce using rule 56 (E -> E MODAL E .)
    ID              reduce using rule 56 (E -> E MODAL E .)
    R_PRINT         reduce using rule 56 (E -> E MODAL E .)
    R_PRINTLN       reduce using rule 56 (E -> E MODAL E .)
    R_PARSE         reduce using rule 56 (E -> E MODAL E .)
    R_TRUNC         reduce using rule 56 (E -> E MODAL E .)
    R_FLOAT         reduce using rule 56 (E -> E MODAL E .)
    R_STRING        reduce using rule 56 (E -> E MODAL E .)
    R_TYPEOF        reduce using rule 56 (E -> E MODAL E .)
    R_PUSH          reduce using rule 56 (E -> E MODAL E .)
    R_POP           reduce using rule 56 (E -> E MODAL E .)
    R_MUTABLE       reduce using rule 56 (E -> E MODAL E .)
    R_STRUCT        reduce using rule 56 (E -> E MODAL E .)
    R_BREAK         reduce using rule 56 (E -> E MODAL E .)
    R_CONTINUE      reduce using rule 56 (E -> E MODAL E .)
    R_RETURN        reduce using rule 56 (E -> E MODAL E .)
    PTCOMA          reduce using rule 56 (E -> E MODAL E .)
    DOSPUNTOS       reduce using rule 56 (E -> E MODAL E .)
    PARDER          reduce using rule 56 (E -> E MODAL E .)
    COMA            reduce using rule 56 (E -> E MODAL E .)
    CORDER          reduce using rule 56 (E -> E MODAL E .)
    DOSPUNTITOS     reduce using rule 56 (E -> E MODAL E .)
    POTENCIA        shift and go to state 119

  ! POTENCIA        [ reduce using rule 56 (E -> E MODAL E .) ]
  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]
  ! POR             [ shift and go to state 116 ]
  ! DIVIDIDO        [ shift and go to state 117 ]
  ! MODAL           [ shift and go to state 118 ]


state 209

    (57) E -> E POTENCIA E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    MAS             reduce using rule 57 (E -> E POTENCIA E .)
    MENOS           reduce using rule 57 (E -> E POTENCIA E .)
    POR             reduce using rule 57 (E -> E POTENCIA E .)
    DIVIDIDO        reduce using rule 57 (E -> E POTENCIA E .)
    MODAL           reduce using rule 57 (E -> E POTENCIA E .)
    POTENCIA        reduce using rule 57 (E -> E POTENCIA E .)
    MENQUE          reduce using rule 57 (E -> E POTENCIA E .)
    MAYQUE          reduce using rule 57 (E -> E POTENCIA E .)
    IGUALQUE        reduce using rule 57 (E -> E POTENCIA E .)
    NIGUALQUE       reduce using rule 57 (E -> E POTENCIA E .)
    MENORIGUAL      reduce using rule 57 (E -> E POTENCIA E .)
    MAYORIGUAL      reduce using rule 57 (E -> E POTENCIA E .)
    R_END           reduce using rule 57 (E -> E POTENCIA E .)
    R_ELSE          reduce using rule 57 (E -> E POTENCIA E .)
    AND             reduce using rule 57 (E -> E POTENCIA E .)
    OR              reduce using rule 57 (E -> E POTENCIA E .)
    R_ELSEIF        reduce using rule 57 (E -> E POTENCIA E .)
    R_IF            reduce using rule 57 (E -> E POTENCIA E .)
    R_FOR           reduce using rule 57 (E -> E POTENCIA E .)
    R_WHILE         reduce using rule 57 (E -> E POTENCIA E .)
    R_GLOBAL        reduce using rule 57 (E -> E POTENCIA E .)
    R_LOCAL         reduce using rule 57 (E -> E POTENCIA E .)
    ID              reduce using rule 57 (E -> E POTENCIA E .)
    R_PRINT         reduce using rule 57 (E -> E POTENCIA E .)
    R_PRINTLN       reduce using rule 57 (E -> E POTENCIA E .)
    R_PARSE         reduce using rule 57 (E -> E POTENCIA E .)
    R_TRUNC         reduce using rule 57 (E -> E POTENCIA E .)
    R_FLOAT         reduce using rule 57 (E -> E POTENCIA E .)
    R_STRING        reduce using rule 57 (E -> E POTENCIA E .)
    R_TYPEOF        reduce using rule 57 (E -> E POTENCIA E .)
    R_PUSH          reduce using rule 57 (E -> E POTENCIA E .)
    R_POP           reduce using rule 57 (E -> E POTENCIA E .)
    R_MUTABLE       reduce using rule 57 (E -> E POTENCIA E .)
    R_STRUCT        reduce using rule 57 (E -> E POTENCIA E .)
    R_BREAK         reduce using rule 57 (E -> E POTENCIA E .)
    R_CONTINUE      reduce using rule 57 (E -> E POTENCIA E .)
    R_RETURN        reduce using rule 57 (E -> E POTENCIA E .)
    PTCOMA          reduce using rule 57 (E -> E POTENCIA E .)
    DOSPUNTOS       reduce using rule 57 (E -> E POTENCIA E .)
    PARDER          reduce using rule 57 (E -> E POTENCIA E .)
    COMA            reduce using rule 57 (E -> E POTENCIA E .)
    CORDER          reduce using rule 57 (E -> E POTENCIA E .)
    DOSPUNTITOS     reduce using rule 57 (E -> E POTENCIA E .)

  ! MAS             [ shift and go to state 114 ]
  ! MENOS           [ shift and go to state 115 ]
  ! POR             [ shift and go to state 116 ]
  ! DIVIDIDO        [ shift and go to state 117 ]
  ! MODAL           [ shift and go to state 118 ]
  ! POTENCIA        [ shift and go to state 119 ]


state 210

    (59) E -> PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 196
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 211

    (60) E -> R_LOG10 PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 265
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 212

    (61) E -> R_SIN PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 266
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 213

    (62) E -> R_COS PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 267
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 214

    (63) E -> R_TAN PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 268
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 215

    (64) E -> R_SQRT PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 269
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 216

    (65) E -> R_UPPERCASE PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 270
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 217

    (66) E -> R_LOWERCASE PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 271
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 218

    (67) E -> R_LOG PARIZQ E . COMA E PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    COMA            shift and go to state 272
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 219

    (143) RANGO -> ID . CORIZQ E DOSPUNTOS E CORDER
    (73) E -> ID .
    (27) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (97) NATIVAS -> ID . PUNTO R_LENGTH
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER

    CORIZQ          shift and go to state 273
    DOSPUNTITOS     reduce using rule 73 (E -> ID .)
    MAS             reduce using rule 73 (E -> ID .)
    MENOS           reduce using rule 73 (E -> ID .)
    POR             reduce using rule 73 (E -> ID .)
    DIVIDIDO        reduce using rule 73 (E -> ID .)
    MODAL           reduce using rule 73 (E -> ID .)
    POTENCIA        reduce using rule 73 (E -> ID .)
    R_END           reduce using rule 73 (E -> ID .)
    R_IF            reduce using rule 73 (E -> ID .)
    R_FOR           reduce using rule 73 (E -> ID .)
    R_WHILE         reduce using rule 73 (E -> ID .)
    R_GLOBAL        reduce using rule 73 (E -> ID .)
    R_LOCAL         reduce using rule 73 (E -> ID .)
    ID              reduce using rule 73 (E -> ID .)
    R_PRINT         reduce using rule 73 (E -> ID .)
    R_PRINTLN       reduce using rule 73 (E -> ID .)
    R_PARSE         reduce using rule 73 (E -> ID .)
    R_TRUNC         reduce using rule 73 (E -> ID .)
    R_FLOAT         reduce using rule 73 (E -> ID .)
    R_STRING        reduce using rule 73 (E -> ID .)
    R_TYPEOF        reduce using rule 73 (E -> ID .)
    R_PUSH          reduce using rule 73 (E -> ID .)
    R_POP           reduce using rule 73 (E -> ID .)
    R_MUTABLE       reduce using rule 73 (E -> ID .)
    R_STRUCT        reduce using rule 73 (E -> ID .)
    R_BREAK         reduce using rule 73 (E -> ID .)
    R_CONTINUE      reduce using rule 73 (E -> ID .)
    PUNTO           shift and go to state 43
    PARIZQ          shift and go to state 42


state 220

    (138) FORS -> R_FOR ID R_IN RANGO . INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> R_FOR ID R_IN RANGO . R_END PTCOMA
    (124) INSTRUCCIONES_LOOP -> . INSTRUCCIONES_LOOP INSTRUCCION_LOOP
    (125) INSTRUCCIONES_LOOP -> . INSTRUCCION_LOOP
    (126) INSTRUCCION_LOOP -> . IFS
    (127) INSTRUCCION_LOOP -> . FORS
    (128) INSTRUCCION_LOOP -> . WHILES
    (129) INSTRUCCION_LOOP -> . ASIGNACION
    (130) INSTRUCCION_LOOP -> . I
    (131) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (132) INSTRUCCION_LOOP -> . NATIVAS
    (133) INSTRUCCION_LOOP -> . STRUCTS
    (134) INSTRUCCION_LOOP -> . BREAK
    (135) INSTRUCCION_LOOP -> . CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 275
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36

    INSTRUCCIONES_LOOP             shift and go to state 274
    INSTRUCCION_LOOP               shift and go to state 133
    IFS                            shift and go to state 134
    FORS                           shift and go to state 135
    WHILES                         shift and go to state 136
    ASIGNACION                     shift and go to state 137
    I                              shift and go to state 138
    LLAMADAS                       shift and go to state 139
    NATIVAS                        shift and go to state 140
    STRUCTS                        shift and go to state 141
    BREAK                          shift and go to state 142
    CONTINUE                       shift and go to state 143

state 221

    (140) RANGO -> E . DOSPUNTITOS E
    (141) RANGO -> E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    DOSPUNTITOS     shift and go to state 276
    R_END           reduce using rule 141 (RANGO -> E .)
    R_IF            reduce using rule 141 (RANGO -> E .)
    R_FOR           reduce using rule 141 (RANGO -> E .)
    R_WHILE         reduce using rule 141 (RANGO -> E .)
    R_GLOBAL        reduce using rule 141 (RANGO -> E .)
    R_LOCAL         reduce using rule 141 (RANGO -> E .)
    ID              reduce using rule 141 (RANGO -> E .)
    R_PRINT         reduce using rule 141 (RANGO -> E .)
    R_PRINTLN       reduce using rule 141 (RANGO -> E .)
    R_PARSE         reduce using rule 141 (RANGO -> E .)
    R_TRUNC         reduce using rule 141 (RANGO -> E .)
    R_FLOAT         reduce using rule 141 (RANGO -> E .)
    R_STRING        reduce using rule 141 (RANGO -> E .)
    R_TYPEOF        reduce using rule 141 (RANGO -> E .)
    R_PUSH          reduce using rule 141 (RANGO -> E .)
    R_POP           reduce using rule 141 (RANGO -> E .)
    R_MUTABLE       reduce using rule 141 (RANGO -> E .)
    R_STRUCT        reduce using rule 141 (RANGO -> E .)
    R_BREAK         reduce using rule 141 (RANGO -> E .)
    R_CONTINUE      reduce using rule 141 (RANGO -> E .)
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 222

    (142) RANGO -> ARREGLOS .

    R_END           reduce using rule 142 (RANGO -> ARREGLOS .)
    R_IF            reduce using rule 142 (RANGO -> ARREGLOS .)
    R_FOR           reduce using rule 142 (RANGO -> ARREGLOS .)
    R_WHILE         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_GLOBAL        reduce using rule 142 (RANGO -> ARREGLOS .)
    R_LOCAL         reduce using rule 142 (RANGO -> ARREGLOS .)
    ID              reduce using rule 142 (RANGO -> ARREGLOS .)
    R_PRINT         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_PRINTLN       reduce using rule 142 (RANGO -> ARREGLOS .)
    R_PARSE         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_TRUNC         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_FLOAT         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_STRING        reduce using rule 142 (RANGO -> ARREGLOS .)
    R_TYPEOF        reduce using rule 142 (RANGO -> ARREGLOS .)
    R_PUSH          reduce using rule 142 (RANGO -> ARREGLOS .)
    R_POP           reduce using rule 142 (RANGO -> ARREGLOS .)
    R_MUTABLE       reduce using rule 142 (RANGO -> ARREGLOS .)
    R_STRUCT        reduce using rule 142 (RANGO -> ARREGLOS .)
    R_BREAK         reduce using rule 142 (RANGO -> ARREGLOS .)
    R_CONTINUE      reduce using rule 142 (RANGO -> ARREGLOS .)


state 223

    (136) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 277


state 224

    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .

    R_END           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_IF            reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FOR           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_WHILE         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_GLOBAL        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_LOCAL         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    ID              reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINT         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PRINTLN       reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PARSE         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TRUNC         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_FLOAT         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_STRING        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_TYPEOF        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_PUSH          reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_POP           reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_MUTABLE       reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_STRUCT        reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_BREAK         reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)
    R_CONTINUE      reduce using rule 124 (INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP INSTRUCCION_LOOP .)


state 225

    (137) WHILES -> R_WHILE LO R_END PTCOMA .

    R_IF            reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FOR           reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_WHILE         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    ID              reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINT         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PARSE         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRING        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_PUSH          reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_POP           reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_BREAK         reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_RETURN        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    $end            reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_END           reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSE          reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 137 (WHILES -> R_WHILE LO R_END PTCOMA .)


state 226

    (131) INSTRUCCION_LOOP -> LLAMADAS PTCOMA .

    R_END           reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_IF            reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FOR           reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_WHILE         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_GLOBAL        reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_LOCAL         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    ID              reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINT         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PRINTLN       reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PARSE         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TRUNC         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_FLOAT         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_STRING        reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_TYPEOF        reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_PUSH          reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_POP           reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_MUTABLE       reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_STRUCT        reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_BREAK         reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)
    R_CONTINUE      reduce using rule 131 (INSTRUCCION_LOOP -> LLAMADAS PTCOMA .)


state 227

    (35) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> R_GLOBAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 278
    PTCOMA          shift and go to state 279


state 228

    (36) ASIGNACION -> R_LOCAL ID IGUAL LISTA . DOSPUNTOS TIPO PTCOMA
    (39) ASIGNACION -> R_LOCAL ID IGUAL LISTA . PTCOMA

    DOSPUNTOS       shift and go to state 280
    PTCOMA          shift and go to state 281


state 229

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 282


state 230

    (20) IMPRESIONES -> IMPRESIONES COMA . IMPRESION
    (22) IMPRESION -> . ARREGLOS
    (23) IMPRESION -> . LO
    (24) IMPRESION -> . DOLAR PARIZQ E PARDER
    (25) IMPRESION -> . DOLAR PARIZQ ARREGLOS PARDER
    (26) IMPRESION -> . DOLAR PARIZQ NATIVAS PARDER
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    DOLAR           shift and go to state 152
    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    IMPRESION                      shift and go to state 283
    ARREGLOS                       shift and go to state 150
    LO                             shift and go to state 151
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    RE                             shift and go to state 49
    LLAMADAS                       shift and go to state 67

state 231

    (24) IMPRESION -> DOLAR PARIZQ . E PARDER
    (25) IMPRESION -> DOLAR PARIZQ . ARREGLOS PARDER
    (26) IMPRESION -> DOLAR PARIZQ . NATIVAS PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 287
    CORIZQ          shift and go to state 90
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 284
    ARREGLOS                       shift and go to state 285
    NATIVAS                        shift and go to state 286
    LLAMADAS                       shift and go to state 67

state 232

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER . PTCOMA

    PTCOMA          shift and go to state 288


state 233

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA . LISTA PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 289
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 234

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA . LISTA PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTA                          shift and go to state 290
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 235

    (94) NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAS             reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POR             reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_END           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    AND             reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    OR              reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    ID              reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    COMA            reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 94 (NATIVAS -> R_TRUNC PARIZQ LISTA PARDER .)


state 236

    (91) NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAS             reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POR             reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_END           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    AND             reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    OR              reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    ID              reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    COMA            reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 91 (NATIVAS -> R_FLOAT PARIZQ LISTA PARDER .)


state 237

    (92) NATIVAS -> R_STRING PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAS             reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POR             reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_END           reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    AND             reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    OR              reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    ID              reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    COMA            reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 92 (NATIVAS -> R_STRING PARIZQ LISTA PARDER .)


state 238

    (93) NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .

    PTCOMA          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAS             reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENOS           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POR             reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DIVIDIDO        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MODAL           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    POTENCIA        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENQUE          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYQUE          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    IGUALQUE        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    NIGUALQUE       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MENORIGUAL      reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    MAYORIGUAL      reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_END           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSE          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    AND             reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    OR              reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_ELSEIF        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_IF            reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FOR           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_WHILE         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_GLOBAL        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_LOCAL         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    ID              reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINT         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PRINTLN       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PARSE         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TRUNC         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_FLOAT         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRING        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_TYPEOF        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_PUSH          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_POP           reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_MUTABLE       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_STRUCT        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_BREAK         reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_CONTINUE      reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    R_RETURN        reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTOS       reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    PARDER          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    COMA            reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    CORDER          reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 93 (NATIVAS -> R_TYPEOF PARIZQ LISTA PARDER .)


state 239

    (95) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID . COMA E PARDER

    COMA            shift and go to state 291


state 240

    (96) NATIVAS -> R_POP DIFERENTE PARIZQ ID . PARDER

    PARDER          shift and go to state 292


state 241

    (144) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS . R_END PTCOMA
    (148) ELEMENTOS -> ELEMENTOS . COMA ELEMENTO

    R_END           shift and go to state 293
    COMA            shift and go to state 245


state 242

    (146) STRUCTS -> R_MUTABLE R_STRUCT ID R_END . PTCOMA

    PTCOMA          shift and go to state 294


state 243

    (151) ELEMENTO -> ID DOSPUNTOS . TIPO
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 158
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160

    TIPO                           shift and go to state 295

state 244

    (145) STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .

    R_IF            reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FOR           reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_WHILE         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_GLOBAL        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_LOCAL         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    ID              reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINT         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PRINTLN       reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PARSE         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TRUNC         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FLOAT         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRING        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_TYPEOF        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_PUSH          reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_POP           reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_MUTABLE       reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_STRUCT        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_BREAK         reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_CONTINUE      reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_RETURN        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_FUNCTION      reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    $end            reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_END           reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSE          reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)
    R_ELSEIF        reduce using rule 145 (STRUCTS -> R_STRUCT ID ELEMENTOS PTCOMA .)


state 245

    (148) ELEMENTOS -> ELEMENTOS COMA . ELEMENTO
    (150) ELEMENTO -> . ID
    (151) ELEMENTO -> . ID DOSPUNTOS TIPO

    ID              shift and go to state 170

    ELEMENTO                       shift and go to state 296

state 246

    (147) STRUCTS -> R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 147 (STRUCTS -> R_STRUCT ID R_END PTCOMA .)


state 247

    (27) ARREGLOS -> ID CORIZQ LISTAS . CORDER
    (29) ARREGLOS -> ID CORIZQ LISTAS . CORDER CORIZQ LISTAS CORDER
    (31) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 297
    COMA            shift and go to state 184


state 248

    (28) ARREGLOS -> CORIZQ LISTAS CORDER .
    (30) ARREGLOS -> CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    PTCOMA          reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    ID              reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 28 (ARREGLOS -> CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 298


state 249

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . INSTRUCCIONES R_END PTCOMA
    (101) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 300
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 299
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 250

    (104) PARAMETROS -> PARAMETROS COMA . PARAMETRO
    (106) PARAMETRO -> . ID

    ID              shift and go to state 177

    PARAMETRO                      shift and go to state 301

state 251

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 302
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 252

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 303


state 253

    (37) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 304


state 254

    (31) LISTAS -> LISTAS COMA LISTA .

    PARDER          reduce using rule 31 (LISTAS -> LISTAS COMA LISTA .)
    COMA            reduce using rule 31 (LISTAS -> LISTAS COMA LISTA .)
    CORDER          reduce using rule 31 (LISTAS -> LISTAS COMA LISTA .)


state 255

    (107) IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 107 (IFS -> R_IF LO INSTRUCCIONES R_END PTCOMA .)


state 256

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 305
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 257

    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 306


state 258

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 307


state 259

    (114) IFS -> R_IF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 114 (IFS -> R_IF LO R_ELSE R_END PTCOMA .)


state 260

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_END PTCOMA
    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . ELSEIF
    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES . R_ELSE R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (115) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_END PTCOMA
    (116) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (117) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES ELSEIF
    (118) ELSEIF -> . R_ELSEIF LO R_END PTCOMA
    (119) ELSEIF -> . R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (120) ELSEIF -> . R_ELSEIF LO ELSEIF
    (121) ELSEIF -> . R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (122) ELSEIF -> . R_ELSEIF LO R_ELSE R_END PTCOMA
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 308
    R_ELSE          shift and go to state 309
    R_ELSEIF        shift and go to state 103
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    ELSEIF                         shift and go to state 310
    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 261

    (118) ELSEIF -> R_ELSEIF LO R_END . PTCOMA

    PTCOMA          shift and go to state 311


state 262

    (119) ELSEIF -> R_ELSEIF LO R_ELSE . INSTRUCCIONES R_END PTCOMA
    (122) ELSEIF -> R_ELSEIF LO R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 313
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 312
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 263

    (120) ELSEIF -> R_ELSEIF LO ELSEIF .

    R_IF            reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FOR           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_WHILE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_GLOBAL        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_LOCAL         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    ID              reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PRINTLN       reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PARSE         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TRUNC         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FLOAT         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRING        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_TYPEOF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_PUSH          reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_POP           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_MUTABLE       reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_STRUCT        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_BREAK         reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_CONTINUE      reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_RETURN        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_FUNCTION      reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    $end            reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_END           reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSE          reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)
    R_ELSEIF        reduce using rule 120 (ELSEIF -> R_ELSEIF LO ELSEIF .)


state 264

    (82) RE -> PARIZQ RE . PARDER
    (76) RE -> RE . MENQUE RE
    (77) RE -> RE . MAYQUE RE
    (78) RE -> RE . IGUALQUE RE
    (79) RE -> RE . NIGUALQUE RE
    (80) RE -> RE . MENORIGUAL RE
    (81) RE -> RE . MAYORIGUAL RE

    PARDER          shift and go to state 195
    MENQUE          shift and go to state 108
    MAYQUE          shift and go to state 109
    IGUALQUE        shift and go to state 110
    NIGUALQUE       shift and go to state 111
    MENORIGUAL      shift and go to state 112
    MAYORIGUAL      shift and go to state 113


state 265

    (60) E -> R_LOG10 PARIZQ E PARDER .

    MAS             reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MENOS           reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    POR             reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MODAL           reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    POTENCIA        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MENQUE          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYQUE          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_END           reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSE          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    AND             reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    OR              reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_IF            reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FOR           reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_WHILE         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    ID              reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINT         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PARSE         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRING        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_PUSH          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_POP           reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_BREAK         reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    R_RETURN        reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    PTCOMA          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    PARDER          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    COMA            reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    CORDER          reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 60 (E -> R_LOG10 PARIZQ E PARDER .)


state 266

    (61) E -> R_SIN PARIZQ E PARDER .

    MAS             reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MENOS           reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    POR             reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MODAL           reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MENQUE          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_END           reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    AND             reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    OR              reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_IF            reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_FOR           reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    ID              reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_STRING        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_POP           reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    PARDER          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    COMA            reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    CORDER          reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 61 (E -> R_SIN PARIZQ E PARDER .)


state 267

    (62) E -> R_COS PARIZQ E PARDER .

    MAS             reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MENOS           reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    POR             reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MODAL           reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    POTENCIA        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MENQUE          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MAYQUE          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_END           reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_ELSE          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    AND             reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    OR              reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_IF            reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_FOR           reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_WHILE         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    ID              reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_PRINT         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_PARSE         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_STRING        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_PUSH          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_POP           reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_BREAK         reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    R_RETURN        reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    PTCOMA          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    PARDER          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    COMA            reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    CORDER          reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 62 (E -> R_COS PARIZQ E PARDER .)


state 268

    (63) E -> R_TAN PARIZQ E PARDER .

    MAS             reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MENOS           reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    POR             reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MODAL           reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    POTENCIA        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MENQUE          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MAYQUE          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_END           reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSE          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    AND             reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    OR              reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_IF            reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_FOR           reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_WHILE         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    ID              reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINT         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_PARSE         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_STRING        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_PUSH          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_POP           reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_BREAK         reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    R_RETURN        reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    PTCOMA          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    PARDER          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    COMA            reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    CORDER          reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 63 (E -> R_TAN PARIZQ E PARDER .)


state 269

    (64) E -> R_SQRT PARIZQ E PARDER .

    MAS             reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MENOS           reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    POR             reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MODAL           reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    POTENCIA        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MENQUE          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MAYQUE          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_END           reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSE          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    AND             reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    OR              reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_IF            reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_FOR           reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_WHILE         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    ID              reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINT         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_PARSE         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRING        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_PUSH          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_POP           reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_BREAK         reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    R_RETURN        reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    PTCOMA          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    PARDER          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    COMA            reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    CORDER          reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 64 (E -> R_SQRT PARIZQ E PARDER .)


state 270

    (65) E -> R_UPPERCASE PARIZQ E PARDER .

    MAS             reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POR             reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    AND             reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    OR              reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    ID              reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 65 (E -> R_UPPERCASE PARIZQ E PARDER .)


state 271

    (66) E -> R_LOWERCASE PARIZQ E PARDER .

    MAS             reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENOS           reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POR             reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DIVIDIDO        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MODAL           reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    POTENCIA        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENQUE          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYQUE          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    IGUALQUE        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    NIGUALQUE       reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MENORIGUAL      reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    MAYORIGUAL      reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_END           reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSE          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    AND             reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    OR              reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_ELSEIF        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_IF            reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FOR           reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_WHILE         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_GLOBAL        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_LOCAL         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    ID              reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINT         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PRINTLN       reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PARSE         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TRUNC         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_FLOAT         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRING        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_TYPEOF        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_PUSH          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_POP           reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_MUTABLE       reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_STRUCT        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_BREAK         reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_CONTINUE      reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    R_RETURN        reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PTCOMA          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTOS       reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    PARDER          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    COMA            reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    CORDER          reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)
    DOSPUNTITOS     reduce using rule 66 (E -> R_LOWERCASE PARIZQ E PARDER .)


state 272

    (67) E -> R_LOG PARIZQ E COMA . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 314
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 273

    (143) RANGO -> ID CORIZQ . E DOSPUNTOS E CORDER
    (27) ARREGLOS -> ID CORIZQ . LISTAS CORDER
    (29) ARREGLOS -> ID CORIZQ . LISTAS CORDER CORIZQ LISTAS CORDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 317
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 315
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47

    E                              shift and go to state 316
    LISTAS                         shift and go to state 247
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49

state 274

    (138) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP . R_END PTCOMA
    (124) INSTRUCCIONES_LOOP -> INSTRUCCIONES_LOOP . INSTRUCCION_LOOP
    (126) INSTRUCCION_LOOP -> . IFS
    (127) INSTRUCCION_LOOP -> . FORS
    (128) INSTRUCCION_LOOP -> . WHILES
    (129) INSTRUCCION_LOOP -> . ASIGNACION
    (130) INSTRUCCION_LOOP -> . I
    (131) INSTRUCCION_LOOP -> . LLAMADAS PTCOMA
    (132) INSTRUCCION_LOOP -> . NATIVAS
    (133) INSTRUCCION_LOOP -> . STRUCTS
    (134) INSTRUCCION_LOOP -> . BREAK
    (135) INSTRUCCION_LOOP -> . CONTINUE
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA

    R_END           shift and go to state 318
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36

    INSTRUCCION_LOOP               shift and go to state 224
    IFS                            shift and go to state 134
    FORS                           shift and go to state 135
    WHILES                         shift and go to state 136
    ASIGNACION                     shift and go to state 137
    I                              shift and go to state 138
    LLAMADAS                       shift and go to state 139
    NATIVAS                        shift and go to state 140
    STRUCTS                        shift and go to state 141
    BREAK                          shift and go to state 142
    CONTINUE                       shift and go to state 143

state 275

    (139) FORS -> R_FOR ID R_IN RANGO R_END . PTCOMA

    PTCOMA          shift and go to state 319


state 276

    (140) RANGO -> E DOSPUNTITOS . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 320
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 277

    (136) WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 136 (WHILES -> R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 278

    (35) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 158
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160

    TIPO                           shift and go to state 321

state 279

    (38) ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 38 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA PTCOMA .)


state 280

    (36) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS . TIPO PTCOMA
    (44) TIPO -> . R_NOTHING
    (45) TIPO -> . R_INT64
    (46) TIPO -> . R_FLOAT64
    (47) TIPO -> . R_STRING
    (48) TIPO -> . R_CHAR
    (49) TIPO -> . R_BOOL

    R_NOTHING       shift and go to state 155
    R_INT64         shift and go to state 156
    R_FLOAT64       shift and go to state 157
    R_STRING        shift and go to state 158
    R_CHAR          shift and go to state 159
    R_BOOL          shift and go to state 160

    TIPO                           shift and go to state 322

state 281

    (39) ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .

    R_IF            reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FOR           reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_WHILE         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_GLOBAL        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_LOCAL         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    ID              reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINT         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PRINTLN       reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PARSE         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TRUNC         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FLOAT         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRING        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_TYPEOF        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_PUSH          reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_POP           reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_MUTABLE       reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_STRUCT        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_BREAK         reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_CONTINUE      reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_RETURN        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_FUNCTION      reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    $end            reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_END           reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSE          reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)
    R_ELSEIF        reduce using rule 39 (ASIGNACION -> R_LOCAL ID IGUAL LISTA PTCOMA .)


state 282

    (18) I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 18 (I -> R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA .)


state 283

    (20) IMPRESIONES -> IMPRESIONES COMA IMPRESION .

    PARDER          reduce using rule 20 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)
    COMA            reduce using rule 20 (IMPRESIONES -> IMPRESIONES COMA IMPRESION .)


state 284

    (24) IMPRESION -> DOLAR PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 323
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 285

    (25) IMPRESION -> DOLAR PARIZQ ARREGLOS . PARDER

    PARDER          shift and go to state 324


state 286

    (26) IMPRESION -> DOLAR PARIZQ NATIVAS . PARDER
    (74) E -> NATIVAS .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 325
    MAS             reduce using rule 74 (E -> NATIVAS .)
    MENOS           reduce using rule 74 (E -> NATIVAS .)
    POR             reduce using rule 74 (E -> NATIVAS .)
    DIVIDIDO        reduce using rule 74 (E -> NATIVAS .)
    MODAL           reduce using rule 74 (E -> NATIVAS .)
    POTENCIA        reduce using rule 74 (E -> NATIVAS .)

  ! PARDER          [ reduce using rule 74 (E -> NATIVAS .) ]


state 287

    (73) E -> ID .
    (27) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (97) NATIVAS -> ID . PUNTO R_LENGTH
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER

    PARDER          reduce using rule 73 (E -> ID .)
    MAS             reduce using rule 73 (E -> ID .)
    MENOS           reduce using rule 73 (E -> ID .)
    POR             reduce using rule 73 (E -> ID .)
    DIVIDIDO        reduce using rule 73 (E -> ID .)
    MODAL           reduce using rule 73 (E -> ID .)
    POTENCIA        reduce using rule 73 (E -> ID .)
    CORIZQ          shift and go to state 175
    PUNTO           shift and go to state 43
    PARIZQ          shift and go to state 42


state 288

    (19) I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .

    R_IF            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FOR           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_WHILE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_GLOBAL        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_LOCAL         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    ID              reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PRINTLN       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PARSE         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TRUNC         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FLOAT         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRING        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_TYPEOF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_PUSH          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_POP           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_MUTABLE       reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_STRUCT        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_BREAK         reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_CONTINUE      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_RETURN        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_FUNCTION      reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    $end            reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_END           reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSE          reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)
    R_ELSEIF        reduce using rule 19 (I -> R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA .)


state 289

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 326


state 290

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA . PARDER

    PARDER          shift and go to state 327


state 291

    (95) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA . E PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 328
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 292

    (96) NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .

    PTCOMA          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAS             reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENOS           reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    POR             reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DIVIDIDO        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MODAL           reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    POTENCIA        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENQUE          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAYQUE          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    IGUALQUE        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    NIGUALQUE       reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MENORIGUAL      reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    MAYORIGUAL      reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_END           reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSE          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    AND             reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    OR              reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_ELSEIF        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_IF            reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FOR           reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_WHILE         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_GLOBAL        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_LOCAL         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    ID              reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINT         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PRINTLN       reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PARSE         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TRUNC         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_FLOAT         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRING        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_TYPEOF        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_PUSH          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_POP           reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_MUTABLE       reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_STRUCT        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_BREAK         reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_CONTINUE      reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    R_RETURN        reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTOS       reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    PARDER          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    COMA            reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    CORDER          reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)
    DOSPUNTITOS     reduce using rule 96 (NATIVAS -> R_POP DIFERENTE PARIZQ ID PARDER .)


state 293

    (144) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END . PTCOMA

    PTCOMA          shift and go to state 329


state 294

    (146) STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .

    R_IF            reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FOR           reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_WHILE         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_GLOBAL        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_LOCAL         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    ID              reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINT         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PRINTLN       reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PARSE         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TRUNC         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FLOAT         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRING        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_TYPEOF        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_PUSH          reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_POP           reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_MUTABLE       reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_STRUCT        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_BREAK         reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_CONTINUE      reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_RETURN        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_FUNCTION      reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    $end            reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_END           reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSE          reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)
    R_ELSEIF        reduce using rule 146 (STRUCTS -> R_MUTABLE R_STRUCT ID R_END PTCOMA .)


state 295

    (151) ELEMENTO -> ID DOSPUNTOS TIPO .

    PTCOMA          reduce using rule 151 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    COMA            reduce using rule 151 (ELEMENTO -> ID DOSPUNTOS TIPO .)
    R_END           reduce using rule 151 (ELEMENTO -> ID DOSPUNTOS TIPO .)


state 296

    (148) ELEMENTOS -> ELEMENTOS COMA ELEMENTO .

    PTCOMA          reduce using rule 148 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    COMA            reduce using rule 148 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)
    R_END           reduce using rule 148 (ELEMENTOS -> ELEMENTOS COMA ELEMENTO .)


state 297

    (27) ARREGLOS -> ID CORIZQ LISTAS CORDER .
    (29) ARREGLOS -> ID CORIZQ LISTAS CORDER . CORIZQ LISTAS CORDER

    PTCOMA          reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    ID              reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 27 (ARREGLOS -> ID CORIZQ LISTAS CORDER .)
    CORIZQ          shift and go to state 330


state 298

    (30) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTAS                         shift and go to state 331
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 299

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 332
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 300

    (101) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END . PTCOMA

    PTCOMA          shift and go to state 333


state 301

    (104) PARAMETROS -> PARAMETROS COMA PARAMETRO .

    PARDER          reduce using rule 104 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)
    COMA            reduce using rule 104 (PARAMETROS -> PARAMETROS COMA PARAMETRO .)


state 302

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 334


state 303

    (103) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_IF            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    ID              reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_POP           reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)
    $end            reduce using rule 103 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER R_END PTCOMA .)


state 304

    (37) ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 37 (ASIGNACION -> ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 305

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 335


state 306

    (113) IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 113 (IFS -> R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 307

    (111) IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 111 (IFS -> R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 308

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 336


state 309

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . INSTRUCCIONES R_END PTCOMA
    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE . R_END PTCOMA
    (5) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (6) INSTRUCCIONES -> . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 338
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCIONES                  shift and go to state 337
    INSTRUCCION                    shift and go to state 7
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 310

    (117) ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .

    R_IF            reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FOR           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_WHILE         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_GLOBAL        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_LOCAL         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    ID              reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINT         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PRINTLN       reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PARSE         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TRUNC         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FLOAT         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRING        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_TYPEOF        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_PUSH          reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_POP           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_MUTABLE       reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_STRUCT        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_BREAK         reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_CONTINUE      reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_RETURN        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_FUNCTION      reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    $end            reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_END           reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSE          reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)
    R_ELSEIF        reduce using rule 117 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES ELSEIF .)


state 311

    (118) ELSEIF -> R_ELSEIF LO R_END PTCOMA .

    R_IF            reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FOR           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_WHILE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_LOCAL         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    ID              reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PARSE         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TRUNC         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FLOAT         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRING        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_PUSH          reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_POP           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_STRUCT        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_BREAK         reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_RETURN        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    $end            reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_END           reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSE          reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 118 (ELSEIF -> R_ELSEIF LO R_END PTCOMA .)


state 312

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 339
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 313

    (122) ELSEIF -> R_ELSEIF LO R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 340


state 314

    (67) E -> R_LOG PARIZQ E COMA E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 341
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 315

    (73) E -> ID .
    (97) NATIVAS -> ID . PUNTO R_LENGTH
    (50) LLAMADAS -> ID . PARIZQ LISTAS PARDER
    (51) LLAMADAS -> ID . PARIZQ PARDER
    (27) ARREGLOS -> ID . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> ID . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER

    DOSPUNTOS       reduce using rule 73 (E -> ID .)
    MAS             reduce using rule 73 (E -> ID .)
    MENOS           reduce using rule 73 (E -> ID .)
    POR             reduce using rule 73 (E -> ID .)
    DIVIDIDO        reduce using rule 73 (E -> ID .)
    MODAL           reduce using rule 73 (E -> ID .)
    POTENCIA        reduce using rule 73 (E -> ID .)
    MENQUE          reduce using rule 73 (E -> ID .)
    MAYQUE          reduce using rule 73 (E -> ID .)
    IGUALQUE        reduce using rule 73 (E -> ID .)
    NIGUALQUE       reduce using rule 73 (E -> ID .)
    MENORIGUAL      reduce using rule 73 (E -> ID .)
    MAYORIGUAL      reduce using rule 73 (E -> ID .)
    AND             reduce using rule 73 (E -> ID .)
    OR              reduce using rule 73 (E -> ID .)
    CORDER          reduce using rule 73 (E -> ID .)
    COMA            reduce using rule 73 (E -> ID .)
    PUNTO           shift and go to state 43
    PARIZQ          shift and go to state 42
    CORIZQ          shift and go to state 175


state 316

    (143) RANGO -> ID CORIZQ E . DOSPUNTOS E CORDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E
    (83) RE -> E .

    DOSPUNTOS       shift and go to state 342
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119
    MENQUE          reduce using rule 83 (RE -> E .)
    MAYQUE          reduce using rule 83 (RE -> E .)
    IGUALQUE        reduce using rule 83 (RE -> E .)
    NIGUALQUE       reduce using rule 83 (RE -> E .)
    MENORIGUAL      reduce using rule 83 (RE -> E .)
    MAYORIGUAL      reduce using rule 83 (RE -> E .)
    AND             reduce using rule 83 (RE -> E .)
    OR              reduce using rule 83 (RE -> E .)
    CORDER          reduce using rule 83 (RE -> E .)
    COMA            reduce using rule 83 (RE -> E .)


state 317

    (59) E -> PARIZQ . E PARDER
    (87) LO -> PARIZQ . LO PARDER
    (82) RE -> PARIZQ . RE PARDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 317
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    DIFERENTE       shift and go to state 47
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 343
    LO                             shift and go to state 105
    RE                             shift and go to state 106
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 318

    (138) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END . PTCOMA

    PTCOMA          shift and go to state 344


state 319

    (139) FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .

    R_IF            reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FOR           reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_WHILE         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_GLOBAL        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_LOCAL         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    ID              reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINT         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PRINTLN       reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PARSE         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TRUNC         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FLOAT         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRING        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_TYPEOF        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_PUSH          reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_POP           reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_MUTABLE       reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_STRUCT        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_BREAK         reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_CONTINUE      reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_RETURN        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_FUNCTION      reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    $end            reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_END           reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSE          reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)
    R_ELSEIF        reduce using rule 139 (FORS -> R_FOR ID R_IN RANGO R_END PTCOMA .)


state 320

    (140) RANGO -> E DOSPUNTITOS E .
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    R_END           reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_IF            reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_FOR           reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_WHILE         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_GLOBAL        reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_LOCAL         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    ID              reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_PRINT         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_PRINTLN       reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_PARSE         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_TRUNC         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_FLOAT         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_STRING        reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_TYPEOF        reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_PUSH          reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_POP           reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_MUTABLE       reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_STRUCT        reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_BREAK         reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    R_CONTINUE      reduce using rule 140 (RANGO -> E DOSPUNTITOS E .)
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 321

    (35) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 345


state 322

    (36) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO . PTCOMA

    PTCOMA          shift and go to state 346


state 323

    (24) IMPRESION -> DOLAR PARIZQ E PARDER .

    PARDER          reduce using rule 24 (IMPRESION -> DOLAR PARIZQ E PARDER .)
    COMA            reduce using rule 24 (IMPRESION -> DOLAR PARIZQ E PARDER .)


state 324

    (25) IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .

    PARDER          reduce using rule 25 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)
    COMA            reduce using rule 25 (IMPRESION -> DOLAR PARIZQ ARREGLOS PARDER .)


state 325

    (26) IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .

    PARDER          reduce using rule 26 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)
    COMA            reduce using rule 26 (IMPRESION -> DOLAR PARIZQ NATIVAS PARDER .)


state 326

    (89) NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 89 (NATIVAS -> R_PARSE PARIZQ TIPO COMA LISTA PARDER .)


state 327

    (90) NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .

    PTCOMA          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAS             reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENOS           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POR             reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DIVIDIDO        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MODAL           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    POTENCIA        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENQUE          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYQUE          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    IGUALQUE        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    NIGUALQUE       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MENORIGUAL      reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    MAYORIGUAL      reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_END           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSE          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    AND             reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    OR              reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_ELSEIF        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_IF            reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FOR           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_WHILE         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_GLOBAL        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_LOCAL         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    ID              reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINT         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PRINTLN       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PARSE         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TRUNC         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_FLOAT         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRING        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_TYPEOF        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_PUSH          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_POP           reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_MUTABLE       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_STRUCT        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_BREAK         reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_CONTINUE      reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    R_RETURN        reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTOS       reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    PARDER          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    COMA            reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    CORDER          reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)
    DOSPUNTITOS     reduce using rule 90 (NATIVAS -> R_TRUNC PARIZQ TIPO COMA LISTA PARDER .)


state 328

    (95) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    PARDER          shift and go to state 347
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 329

    (144) STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .

    R_IF            reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FOR           reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_WHILE         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_GLOBAL        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_LOCAL         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    ID              reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINT         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PRINTLN       reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PARSE         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TRUNC         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FLOAT         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRING        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_TYPEOF        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_PUSH          reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_POP           reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_MUTABLE       reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_STRUCT        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_BREAK         reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_CONTINUE      reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_RETURN        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_FUNCTION      reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    $end            reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_END           reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSE          reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)
    R_ELSEIF        reduce using rule 144 (STRUCTS -> R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA .)


state 330

    (29) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ . LISTAS CORDER
    (31) LISTAS -> . LISTAS COMA LISTA
    (32) LISTAS -> . LISTA
    (33) LISTA -> . ARREGLOS
    (34) LISTA -> . LO
    (27) ARREGLOS -> . ID CORIZQ LISTAS CORDER
    (28) ARREGLOS -> . CORIZQ LISTAS CORDER
    (29) ARREGLOS -> . ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (30) ARREGLOS -> . CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER
    (84) LO -> . LO AND LO
    (85) LO -> . LO OR LO
    (86) LO -> . DIFERENTE LO
    (87) LO -> . PARIZQ LO PARDER
    (88) LO -> . RE
    (76) RE -> . RE MENQUE RE
    (77) RE -> . RE MAYQUE RE
    (78) RE -> . RE IGUALQUE RE
    (79) RE -> . RE NIGUALQUE RE
    (80) RE -> . RE MENORIGUAL RE
    (81) RE -> . RE MAYORIGUAL RE
    (82) RE -> . PARIZQ RE PARDER
    (83) RE -> . E
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    ID              shift and go to state 89
    CORIZQ          shift and go to state 90
    DIFERENTE       shift and go to state 47
    PARIZQ          shift and go to state 48
    MENOS           shift and go to state 51
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    LISTAS                         shift and go to state 348
    LISTA                          shift and go to state 95
    ARREGLOS                       shift and go to state 87
    LO                             shift and go to state 88
    RE                             shift and go to state 49
    E                              shift and go to state 50
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 331

    (30) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (31) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 349
    COMA            shift and go to state 184


state 332

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 350


state 333

    (101) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .

    R_FUNCTION      reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_IF            reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FOR           reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_WHILE         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_GLOBAL        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_LOCAL         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    ID              reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINT         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PRINTLN       reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PARSE         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TRUNC         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_FLOAT         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRING        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_TYPEOF        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_PUSH          reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_POP           reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_MUTABLE       reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_STRUCT        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_BREAK         reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_CONTINUE      reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    R_RETURN        reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)
    $end            reduce using rule 101 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER R_END PTCOMA .)


state 334

    (102) FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 102 (FUNCIONES -> R_FUNCTION ID PARIZQ PARDER INSTRUCCIONES R_END PTCOMA .)


state 335

    (108) IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 108 (IFS -> R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 336

    (115) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 115 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_END PTCOMA .)


state 337

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES . R_END PTCOMA
    (5) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (7) INSTRUCCION -> . IFS
    (8) INSTRUCCION -> . FORS
    (9) INSTRUCCION -> . WHILES
    (10) INSTRUCCION -> . ASIGNACION
    (11) INSTRUCCION -> . I
    (12) INSTRUCCION -> . LLAMADAS PTCOMA
    (13) INSTRUCCION -> . NATIVAS PTCOMA
    (14) INSTRUCCION -> . STRUCTS
    (15) INSTRUCCION -> . BREAK
    (16) INSTRUCCION -> . CONTINUE
    (17) INSTRUCCION -> . RETURN
    (107) IFS -> . R_IF LO INSTRUCCIONES R_END PTCOMA
    (108) IFS -> . R_IF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA
    (109) IFS -> . R_IF LO INSTRUCCIONES ELSEIF
    (110) IFS -> . R_IF LO R_END PTCOMA
    (111) IFS -> . R_IF LO R_ELSE INSTRUCCIONES R_END PTCOMA
    (112) IFS -> . R_IF LO ELSEIF
    (113) IFS -> . R_IF LO INSTRUCCIONES R_ELSE R_END PTCOMA
    (114) IFS -> . R_IF LO R_ELSE R_END PTCOMA
    (138) FORS -> . R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA
    (139) FORS -> . R_FOR ID R_IN RANGO R_END PTCOMA
    (136) WHILES -> . R_WHILE LO INSTRUCCIONES_LOOP R_END PTCOMA
    (137) WHILES -> . R_WHILE LO R_END PTCOMA
    (35) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (36) ASIGNACION -> . R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (37) ASIGNACION -> . ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA
    (38) ASIGNACION -> . R_GLOBAL ID IGUAL LISTA PTCOMA
    (39) ASIGNACION -> . R_LOCAL ID IGUAL LISTA PTCOMA
    (40) ASIGNACION -> . ID IGUAL LISTA PTCOMA
    (41) ASIGNACION -> . R_GLOBAL ID PTCOMA
    (42) ASIGNACION -> . R_LOCAL ID PTCOMA
    (18) I -> . R_PRINT PARIZQ IMPRESIONES PARDER PTCOMA
    (19) I -> . R_PRINTLN PARIZQ IMPRESIONES PARDER PTCOMA
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (144) STRUCTS -> . R_MUTABLE R_STRUCT ID ELEMENTOS R_END PTCOMA
    (145) STRUCTS -> . R_STRUCT ID ELEMENTOS PTCOMA
    (146) STRUCTS -> . R_MUTABLE R_STRUCT ID R_END PTCOMA
    (147) STRUCTS -> . R_STRUCT ID R_END PTCOMA
    (43) BREAK -> . R_BREAK PTCOMA
    (123) CONTINUE -> . R_CONTINUE PTCOMA
    (98) RETURN -> . R_RETURN LISTA PTCOMA
    (99) RETURN -> . R_RETURN PTCOMA

    R_END           shift and go to state 351
    R_IF            shift and go to state 19
    R_FOR           shift and go to state 20
    R_WHILE         shift and go to state 21
    R_GLOBAL        shift and go to state 22
    R_LOCAL         shift and go to state 23
    ID              shift and go to state 6
    R_PRINT         shift and go to state 24
    R_PRINTLN       shift and go to state 25
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32
    R_MUTABLE       shift and go to state 33
    R_STRUCT        shift and go to state 34
    R_BREAK         shift and go to state 35
    R_CONTINUE      shift and go to state 36
    R_RETURN        shift and go to state 37

    INSTRUCCION                    shift and go to state 39
    IFS                            shift and go to state 8
    FORS                           shift and go to state 9
    WHILES                         shift and go to state 10
    ASIGNACION                     shift and go to state 11
    I                              shift and go to state 12
    LLAMADAS                       shift and go to state 13
    NATIVAS                        shift and go to state 14
    STRUCTS                        shift and go to state 15
    BREAK                          shift and go to state 16
    CONTINUE                       shift and go to state 17
    RETURN                         shift and go to state 18

state 338

    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END . PTCOMA

    PTCOMA          shift and go to state 352


state 339

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 353


state 340

    (122) ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    ID              reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    $end            reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 122 (ELSEIF -> R_ELSEIF LO R_ELSE R_END PTCOMA .)


state 341

    (67) E -> R_LOG PARIZQ E COMA E PARDER .

    MAS             reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENOS           reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POR             reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DIVIDIDO        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MODAL           reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    POTENCIA        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENQUE          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYQUE          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    IGUALQUE        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    NIGUALQUE       reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MENORIGUAL      reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    MAYORIGUAL      reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_END           reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSE          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    AND             reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    OR              reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_ELSEIF        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_IF            reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FOR           reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_WHILE         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_GLOBAL        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_LOCAL         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    ID              reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINT         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PRINTLN       reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PARSE         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TRUNC         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_FLOAT         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRING        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_TYPEOF        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_PUSH          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_POP           reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_MUTABLE       reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_STRUCT        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_BREAK         reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_CONTINUE      reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    R_RETURN        reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PTCOMA          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTOS       reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    PARDER          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    COMA            reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    CORDER          reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 67 (E -> R_LOG PARIZQ E COMA E PARDER .)


state 342

    (143) RANGO -> ID CORIZQ E DOSPUNTOS . E CORDER
    (52) E -> . E MAS E
    (53) E -> . E MENOS E
    (54) E -> . E POR E
    (55) E -> . E DIVIDIDO E
    (56) E -> . E MODAL E
    (57) E -> . E POTENCIA E
    (58) E -> . MENOS E
    (59) E -> . PARIZQ E PARDER
    (60) E -> . R_LOG10 PARIZQ E PARDER
    (61) E -> . R_SIN PARIZQ E PARDER
    (62) E -> . R_COS PARIZQ E PARDER
    (63) E -> . R_TAN PARIZQ E PARDER
    (64) E -> . R_SQRT PARIZQ E PARDER
    (65) E -> . R_UPPERCASE PARIZQ E PARDER
    (66) E -> . R_LOWERCASE PARIZQ E PARDER
    (67) E -> . R_LOG PARIZQ E COMA E PARDER
    (68) E -> . DECIMAL
    (69) E -> . ENTERO
    (70) E -> . R_TRUE
    (71) E -> . R_FALSE
    (72) E -> . CADENA
    (73) E -> . ID
    (74) E -> . NATIVAS
    (75) E -> . LLAMADAS
    (89) NATIVAS -> . R_PARSE PARIZQ TIPO COMA LISTA PARDER
    (90) NATIVAS -> . R_TRUNC PARIZQ TIPO COMA LISTA PARDER
    (91) NATIVAS -> . R_FLOAT PARIZQ LISTA PARDER
    (92) NATIVAS -> . R_STRING PARIZQ LISTA PARDER
    (93) NATIVAS -> . R_TYPEOF PARIZQ LISTA PARDER
    (94) NATIVAS -> . R_TRUNC PARIZQ LISTA PARDER
    (95) NATIVAS -> . R_PUSH DIFERENTE PARIZQ ID COMA E PARDER
    (96) NATIVAS -> . R_POP DIFERENTE PARIZQ ID PARDER
    (97) NATIVAS -> . ID PUNTO R_LENGTH
    (50) LLAMADAS -> . ID PARIZQ LISTAS PARDER
    (51) LLAMADAS -> . ID PARIZQ PARDER

    MENOS           shift and go to state 51
    PARIZQ          shift and go to state 121
    R_LOG10         shift and go to state 52
    R_SIN           shift and go to state 53
    R_COS           shift and go to state 54
    R_TAN           shift and go to state 55
    R_SQRT          shift and go to state 56
    R_UPPERCASE     shift and go to state 57
    R_LOWERCASE     shift and go to state 58
    R_LOG           shift and go to state 59
    DECIMAL         shift and go to state 60
    ENTERO          shift and go to state 61
    R_TRUE          shift and go to state 62
    R_FALSE         shift and go to state 63
    CADENA          shift and go to state 64
    ID              shift and go to state 65
    R_PARSE         shift and go to state 26
    R_TRUNC         shift and go to state 27
    R_FLOAT         shift and go to state 28
    R_STRING        shift and go to state 29
    R_TYPEOF        shift and go to state 30
    R_PUSH          shift and go to state 31
    R_POP           shift and go to state 32

    E                              shift and go to state 354
    NATIVAS                        shift and go to state 66
    LLAMADAS                       shift and go to state 67

state 343

    (59) E -> PARIZQ E . PARDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E
    (83) RE -> E .

  ! shift/reduce conflict for PARDER resolved as shift
    PARDER          shift and go to state 196
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119
    MENQUE          reduce using rule 83 (RE -> E .)
    MAYQUE          reduce using rule 83 (RE -> E .)
    IGUALQUE        reduce using rule 83 (RE -> E .)
    NIGUALQUE       reduce using rule 83 (RE -> E .)
    MENORIGUAL      reduce using rule 83 (RE -> E .)
    MAYORIGUAL      reduce using rule 83 (RE -> E .)
    AND             reduce using rule 83 (RE -> E .)
    OR              reduce using rule 83 (RE -> E .)

  ! PARDER          [ reduce using rule 83 (RE -> E .) ]


state 344

    (138) FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .

    R_IF            reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FOR           reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_WHILE         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_GLOBAL        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_LOCAL         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    ID              reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINT         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PRINTLN       reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PARSE         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TRUNC         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FLOAT         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRING        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_TYPEOF        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_PUSH          reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_POP           reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_MUTABLE       reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_STRUCT        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_BREAK         reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_CONTINUE      reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_RETURN        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_FUNCTION      reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    $end            reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_END           reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSE          reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)
    R_ELSEIF        reduce using rule 138 (FORS -> R_FOR ID R_IN RANGO INSTRUCCIONES_LOOP R_END PTCOMA .)


state 345

    (35) ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 35 (ASIGNACION -> R_GLOBAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 346

    (36) ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .

    R_IF            reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FOR           reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_WHILE         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_GLOBAL        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_LOCAL         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    ID              reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINT         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PRINTLN       reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PARSE         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TRUNC         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FLOAT         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRING        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_TYPEOF        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_PUSH          reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_POP           reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_MUTABLE       reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_STRUCT        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_BREAK         reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_CONTINUE      reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_RETURN        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_FUNCTION      reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    $end            reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_END           reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSE          reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)
    R_ELSEIF        reduce using rule 36 (ASIGNACION -> R_LOCAL ID IGUAL LISTA DOSPUNTOS TIPO PTCOMA .)


state 347

    (95) NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .

    PTCOMA          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAS             reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENOS           reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    POR             reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DIVIDIDO        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MODAL           reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    POTENCIA        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENQUE          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAYQUE          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    IGUALQUE        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    NIGUALQUE       reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MENORIGUAL      reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    MAYORIGUAL      reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_END           reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSE          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    AND             reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    OR              reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_ELSEIF        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_IF            reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FOR           reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_WHILE         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_GLOBAL        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_LOCAL         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    ID              reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINT         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PRINTLN       reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PARSE         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TRUNC         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_FLOAT         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRING        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_TYPEOF        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_PUSH          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_POP           reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_MUTABLE       reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_STRUCT        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_BREAK         reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_CONTINUE      reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    R_RETURN        reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTOS       reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    PARDER          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    COMA            reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    CORDER          reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)
    DOSPUNTITOS     reduce using rule 95 (NATIVAS -> R_PUSH DIFERENTE PARIZQ ID COMA E PARDER .)


state 348

    (29) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS . CORDER
    (31) LISTAS -> LISTAS . COMA LISTA

    CORDER          shift and go to state 355
    COMA            shift and go to state 184


state 349

    (30) ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    PTCOMA          reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 30 (ARREGLOS -> CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 350

    (100) FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .

    R_FUNCTION      reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_IF            reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 100 (FUNCIONES -> R_FUNCTION ID PARIZQ PARAMETROS PARDER INSTRUCCIONES R_END PTCOMA .)


state 351

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END . PTCOMA

    PTCOMA          shift and go to state 356


state 352

    (121) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .

    R_IF            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FOR           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_WHILE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_GLOBAL        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_LOCAL         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    ID              reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PRINTLN       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PARSE         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TRUNC         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FLOAT         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRING        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_TYPEOF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_PUSH          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_POP           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_MUTABLE       reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_STRUCT        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_BREAK         reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_CONTINUE      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_RETURN        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_FUNCTION      reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    $end            reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_END           reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSE          reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)
    R_ELSEIF        reduce using rule 121 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE R_END PTCOMA .)


state 353

    (119) ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 119 (ELSEIF -> R_ELSEIF LO R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 354

    (143) RANGO -> ID CORIZQ E DOSPUNTOS E . CORDER
    (52) E -> E . MAS E
    (53) E -> E . MENOS E
    (54) E -> E . POR E
    (55) E -> E . DIVIDIDO E
    (56) E -> E . MODAL E
    (57) E -> E . POTENCIA E

    CORDER          shift and go to state 357
    MAS             shift and go to state 114
    MENOS           shift and go to state 115
    POR             shift and go to state 116
    DIVIDIDO        shift and go to state 117
    MODAL           shift and go to state 118
    POTENCIA        shift and go to state 119


state 355

    (29) ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .

    PTCOMA          reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    DOSPUNTOS       reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    PARDER          reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    COMA            reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    CORDER          reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_END           reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_IF            reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FOR           reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_WHILE         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_GLOBAL        reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_LOCAL         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    ID              reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINT         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PRINTLN       reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PARSE         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TRUNC         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_FLOAT         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRING        reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_TYPEOF        reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_PUSH          reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_POP           reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_MUTABLE       reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_STRUCT        reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_BREAK         reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)
    R_CONTINUE      reduce using rule 29 (ARREGLOS -> ID CORIZQ LISTAS CORDER CORIZQ LISTAS CORDER .)


state 356

    (116) ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .

    R_IF            reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FOR           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_WHILE         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_GLOBAL        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_LOCAL         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    ID              reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINT         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PRINTLN       reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PARSE         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TRUNC         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FLOAT         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRING        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_TYPEOF        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_PUSH          reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_POP           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_MUTABLE       reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_STRUCT        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_BREAK         reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_CONTINUE      reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_RETURN        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_FUNCTION      reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    $end            reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_END           reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSE          reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)
    R_ELSEIF        reduce using rule 116 (ELSEIF -> R_ELSEIF LO INSTRUCCIONES R_ELSE INSTRUCCIONES R_END PTCOMA .)


state 357

    (143) RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .

    R_END           reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_IF            reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FOR           reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_WHILE         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_GLOBAL        reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_LOCAL         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    ID              reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINT         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PRINTLN       reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PARSE         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TRUNC         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_FLOAT         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRING        reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_TYPEOF        reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_PUSH          reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_POP           reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_MUTABLE       reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_STRUCT        reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_BREAK         reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)
    R_CONTINUE      reduce using rule 143 (RANGO -> ID CORIZQ E DOSPUNTOS E CORDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for R_IF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for R_WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_GLOBAL in state 4 resolved as shift
WARNING: shift/reduce conflict for R_LOCAL in state 4 resolved as shift
WARNING: shift/reduce conflict for ID in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PRINTLN in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PARSE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TRUNC in state 4 resolved as shift
WARNING: shift/reduce conflict for R_FLOAT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for R_TYPEOF in state 4 resolved as shift
WARNING: shift/reduce conflict for R_PUSH in state 4 resolved as shift
WARNING: shift/reduce conflict for R_POP in state 4 resolved as shift
WARNING: shift/reduce conflict for R_MUTABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_STRUCT in state 4 resolved as shift
WARNING: shift/reduce conflict for R_BREAK in state 4 resolved as shift
WARNING: shift/reduce conflict for R_CONTINUE in state 4 resolved as shift
WARNING: shift/reduce conflict for R_RETURN in state 4 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 106 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 107 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 286 resolved as shift
WARNING: shift/reduce conflict for PARDER in state 343 resolved as shift
